
rtsystems.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800200  00001dfe  00001e92  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001dfe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000010f8  00800228  00800228  00001eba  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001eba  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000480  00000000  00000000  00001eea  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000812c  00000000  00000000  0000236a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000019b1  00000000  00000000  0000a496  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00002cb6  00000000  00000000  0000be47  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000fe4  00000000  00000000  0000eb00  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000024bc  00000000  00000000  0000fae4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000055a7  00000000  00000000  00011fa0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000550  00000000  00000000  00017547  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	11 c1       	rjmp	.+546    	; 0x224 <__ctors_end>
       2:	00 00       	nop
       4:	40 c1       	rjmp	.+640    	; 0x286 <__bad_interrupt>
       6:	00 00       	nop
       8:	3e c1       	rjmp	.+636    	; 0x286 <__bad_interrupt>
       a:	00 00       	nop
       c:	3c c1       	rjmp	.+632    	; 0x286 <__bad_interrupt>
       e:	00 00       	nop
      10:	3a c1       	rjmp	.+628    	; 0x286 <__bad_interrupt>
      12:	00 00       	nop
      14:	0c 94 e2 08 	jmp	0x11c4	; 0x11c4 <__vector_5>
      18:	36 c1       	rjmp	.+620    	; 0x286 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	34 c1       	rjmp	.+616    	; 0x286 <__bad_interrupt>
      1e:	00 00       	nop
      20:	32 c1       	rjmp	.+612    	; 0x286 <__bad_interrupt>
      22:	00 00       	nop
      24:	30 c1       	rjmp	.+608    	; 0x286 <__bad_interrupt>
      26:	00 00       	nop
      28:	2e c1       	rjmp	.+604    	; 0x286 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	2c c1       	rjmp	.+600    	; 0x286 <__bad_interrupt>
      2e:	00 00       	nop
      30:	2a c1       	rjmp	.+596    	; 0x286 <__bad_interrupt>
      32:	00 00       	nop
      34:	28 c1       	rjmp	.+592    	; 0x286 <__bad_interrupt>
      36:	00 00       	nop
      38:	26 c1       	rjmp	.+588    	; 0x286 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	24 c1       	rjmp	.+584    	; 0x286 <__bad_interrupt>
      3e:	00 00       	nop
      40:	22 c1       	rjmp	.+580    	; 0x286 <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 78 0a 	jmp	0x14f0	; 0x14f0 <__vector_17>
      48:	1e c1       	rjmp	.+572    	; 0x286 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	1c c1       	rjmp	.+568    	; 0x286 <__bad_interrupt>
      4e:	00 00       	nop
      50:	1a c1       	rjmp	.+564    	; 0x286 <__bad_interrupt>
      52:	00 00       	nop
      54:	18 c1       	rjmp	.+560    	; 0x286 <__bad_interrupt>
      56:	00 00       	nop
      58:	16 c1       	rjmp	.+556    	; 0x286 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	72 c5       	rjmp	.+2788   	; 0xb42 <__vector_23>
      5e:	00 00       	nop
      60:	12 c1       	rjmp	.+548    	; 0x286 <__bad_interrupt>
      62:	00 00       	nop
      64:	b4 c1       	rjmp	.+872    	; 0x3ce <__vector_25>
      66:	00 00       	nop
      68:	b2 c2       	rjmp	.+1380   	; 0x5ce <__vector_26>
      6a:	00 00       	nop
      6c:	0c c1       	rjmp	.+536    	; 0x286 <__bad_interrupt>
      6e:	00 00       	nop
      70:	0a c1       	rjmp	.+532    	; 0x286 <__bad_interrupt>
      72:	00 00       	nop
      74:	08 c1       	rjmp	.+528    	; 0x286 <__bad_interrupt>
      76:	00 00       	nop
      78:	06 c1       	rjmp	.+524    	; 0x286 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	04 c1       	rjmp	.+520    	; 0x286 <__bad_interrupt>
      7e:	00 00       	nop
      80:	02 c1       	rjmp	.+516    	; 0x286 <__bad_interrupt>
      82:	00 00       	nop
      84:	00 c1       	rjmp	.+512    	; 0x286 <__bad_interrupt>
      86:	00 00       	nop
      88:	fe c0       	rjmp	.+508    	; 0x286 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	fc c0       	rjmp	.+504    	; 0x286 <__bad_interrupt>
      8e:	00 00       	nop
      90:	de c1       	rjmp	.+956    	; 0x44e <__vector_36>
      92:	00 00       	nop
      94:	db c2       	rjmp	.+1462   	; 0x64c <__vector_37>
      96:	00 00       	nop
      98:	f6 c0       	rjmp	.+492    	; 0x286 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	f4 c0       	rjmp	.+488    	; 0x286 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	f2 c0       	rjmp	.+484    	; 0x286 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	f0 c0       	rjmp	.+480    	; 0x286 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	a4 c7       	rjmp	.+3912   	; 0xff2 <__vector_42>
      aa:	00 00       	nop
      ac:	ec c0       	rjmp	.+472    	; 0x286 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	ea c0       	rjmp	.+468    	; 0x286 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	e8 c0       	rjmp	.+464    	; 0x286 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	e6 c0       	rjmp	.+460    	; 0x286 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	e4 c0       	rjmp	.+456    	; 0x286 <__bad_interrupt>
      be:	00 00       	nop
      c0:	e2 c0       	rjmp	.+452    	; 0x286 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	e0 c0       	rjmp	.+448    	; 0x286 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	de c0       	rjmp	.+444    	; 0x286 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	00 c2       	rjmp	.+1024   	; 0x4ce <__vector_51>
      ce:	00 00       	nop
      d0:	fc c2       	rjmp	.+1528   	; 0x6ca <__vector_52>
      d2:	00 00       	nop
      d4:	d8 c0       	rjmp	.+432    	; 0x286 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	3a c2       	rjmp	.+1140   	; 0x54e <__vector_54>
      da:	00 00       	nop
      dc:	35 c3       	rjmp	.+1642   	; 0x748 <__vector_55>
      de:	00 00       	nop
      e0:	d2 c0       	rjmp	.+420    	; 0x286 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	64 06       	cpc	r6, r20
      e6:	68 06       	cpc	r6, r24
      e8:	58 06       	cpc	r5, r24
      ea:	5e 06       	cpc	r5, r30
      ec:	ad 06       	cpc	r10, r29
      ee:	6c 06       	cpc	r6, r28
      f0:	72 06       	cpc	r7, r18
      f2:	78 06       	cpc	r7, r24
      f4:	7e 06       	cpc	r7, r30
      f6:	84 06       	cpc	r8, r20
      f8:	8a 06       	cpc	r8, r26
      fa:	90 06       	cpc	r9, r16
      fc:	96 06       	cpc	r9, r22
      fe:	ad 06       	cpc	r10, r29
     100:	9c 06       	cpc	r9, r28
     102:	a2 06       	cpc	r10, r18
     104:	a8 06       	cpc	r10, r24
     106:	71 0e       	add	r7, r17
     108:	d7 0c       	add	r13, r7
     10a:	77 0d       	add	r23, r7
     10c:	91 0d       	add	r25, r1
     10e:	e0 0d       	add	r30, r0
     110:	71 0e       	add	r7, r17
     112:	f1 0d       	add	r31, r1
     114:	21 0e       	add	r2, r17
     116:	45 0e       	add	r4, r21
     118:	60 0e       	add	r6, r16

0000011a <__trampolines_end>:
     11a:	00 00       	nop
     11c:	09 0a       	sbc	r0, r25
     11e:	02 08       	sbc	r0, r2
     120:	0b 0c       	add	r0, r11
     122:	0d 07       	cpc	r16, r29
     124:	06 03       	mulsu	r16, r22
     126:	04 01       	movw	r0, r8
	...
     144:	00 00       	nop
     146:	11 10       	cpse	r1, r1
     148:	0f 00       	.word	0x000f	; ????
	...

00000160 <digital_pin_to_bit_mask_PGM>:
     160:	01 02 10 20 20 08 08 10 20 40 10 20 40 80 02 01     ...  ... @. @...
     170:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 80 40     ........... @..@
     180:	20 10 08 04 02 01 80 04 02 01 80 40 20 10 08 04      ..........@ ...
     190:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 01 02     ........... @...
     1a0:	04 08 10 20 40 80                                   ... @.

000001a6 <digital_pin_to_port_PGM>:
     1a6:	05 05 05 05 07 05 08 08 08 08 02 02 02 02 0a 0a     ................
     1b6:	08 08 04 04 04 04 01 01 01 01 01 01 01 01 03 03     ................
     1c6:	03 03 03 03 03 03 04 07 07 07 0c 0c 0c 0c 0c 0c     ................
     1d6:	0c 0c 02 02 02 02 06 06 06 06 06 06 06 06 0b 0b     ................
     1e6:	0b 0b 0b 0b 0b 0b                                   ......

000001ec <port_to_output_PGM>:
     1ec:	00 00 22 00 25 00 28 00 2b 00 2e 00 31 00 34 00     ..".%.(.+...1.4.
     1fc:	02 01 00 00 05 01 08 01 0b 01                       ..........

00000206 <port_to_mode_PGM>:
     206:	00 00 21 00 24 00 27 00 2a 00 2d 00 30 00 33 00     ..!.$.'.*.-.0.3.
     216:	01 01 00 00 04 01 07 01 0a 01                       ..........

00000220 <__ctors_start>:
     220:	ac 04       	cpc	r10, r12
     222:	a6 0e       	add	r10, r22

00000224 <__ctors_end>:
     224:	11 24       	eor	r1, r1
     226:	1f be       	out	0x3f, r1	; 63
     228:	cf ef       	ldi	r28, 0xFF	; 255
     22a:	d1 e2       	ldi	r29, 0x21	; 33
     22c:	de bf       	out	0x3e, r29	; 62
     22e:	cd bf       	out	0x3d, r28	; 61
     230:	00 e0       	ldi	r16, 0x00	; 0
     232:	0c bf       	out	0x3c, r16	; 60

00000234 <__do_copy_data>:
     234:	12 e0       	ldi	r17, 0x02	; 2
     236:	a0 e0       	ldi	r26, 0x00	; 0
     238:	b2 e0       	ldi	r27, 0x02	; 2
     23a:	ee ef       	ldi	r30, 0xFE	; 254
     23c:	fd e1       	ldi	r31, 0x1D	; 29
     23e:	00 e0       	ldi	r16, 0x00	; 0
     240:	0b bf       	out	0x3b, r16	; 59
     242:	02 c0       	rjmp	.+4      	; 0x248 <__do_copy_data+0x14>
     244:	07 90       	elpm	r0, Z+
     246:	0d 92       	st	X+, r0
     248:	a8 32       	cpi	r26, 0x28	; 40
     24a:	b1 07       	cpc	r27, r17
     24c:	d9 f7       	brne	.-10     	; 0x244 <__do_copy_data+0x10>

0000024e <__do_clear_bss>:
     24e:	23 e1       	ldi	r18, 0x13	; 19
     250:	a8 e2       	ldi	r26, 0x28	; 40
     252:	b2 e0       	ldi	r27, 0x02	; 2
     254:	01 c0       	rjmp	.+2      	; 0x258 <.do_clear_bss_start>

00000256 <.do_clear_bss_loop>:
     256:	1d 92       	st	X+, r1

00000258 <.do_clear_bss_start>:
     258:	a0 32       	cpi	r26, 0x20	; 32
     25a:	b2 07       	cpc	r27, r18
     25c:	e1 f7       	brne	.-8      	; 0x256 <.do_clear_bss_loop>

0000025e <__do_global_ctors>:
     25e:	12 e0       	ldi	r17, 0x02	; 2
     260:	c4 e2       	ldi	r28, 0x24	; 36
     262:	d2 e0       	ldi	r29, 0x02	; 2
     264:	00 e0       	ldi	r16, 0x00	; 0
     266:	06 c0       	rjmp	.+12     	; 0x274 <__do_global_ctors+0x16>
     268:	22 97       	sbiw	r28, 0x02	; 2
     26a:	01 09       	sbc	r16, r1
     26c:	fe 01       	movw	r30, r28
     26e:	0b bf       	out	0x3b, r16	; 59
     270:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <__tablejump_elpm__>
     274:	c0 32       	cpi	r28, 0x20	; 32
     276:	d1 07       	cpc	r29, r17
     278:	80 e0       	ldi	r24, 0x00	; 0
     27a:	08 07       	cpc	r16, r24
     27c:	a9 f7       	brne	.-22     	; 0x268 <__do_global_ctors+0xa>
     27e:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <main>
     282:	0c 94 fd 0e 	jmp	0x1dfa	; 0x1dfa <_exit>

00000286 <__bad_interrupt>:
     286:	bc ce       	rjmp	.-648    	; 0x0 <__vectors>

00000288 <_ZN14HardwareSerial9availableEv>:
  return 1;
}

HardwareSerial::operator bool() {
	return true;
}
     288:	fc 01       	movw	r30, r24
     28a:	24 85       	ldd	r18, Z+12	; 0x0c
     28c:	35 85       	ldd	r19, Z+13	; 0x0d
     28e:	f9 01       	movw	r30, r18
     290:	e0 5c       	subi	r30, 0xC0	; 192
     292:	ff 4f       	sbci	r31, 0xFF	; 255
     294:	80 81       	ld	r24, Z
     296:	91 81       	ldd	r25, Z+1	; 0x01
     298:	32 96       	adiw	r30, 0x02	; 2
     29a:	20 81       	ld	r18, Z
     29c:	31 81       	ldd	r19, Z+1	; 0x01
     29e:	80 5c       	subi	r24, 0xC0	; 192
     2a0:	9f 4f       	sbci	r25, 0xFF	; 255
     2a2:	82 1b       	sub	r24, r18
     2a4:	93 0b       	sbc	r25, r19
     2a6:	8f 73       	andi	r24, 0x3F	; 63
     2a8:	90 78       	andi	r25, 0x80	; 128
     2aa:	99 23       	and	r25, r25
     2ac:	24 f4       	brge	.+8      	; 0x2b6 <_ZN14HardwareSerial9availableEv+0x2e>
     2ae:	01 97       	sbiw	r24, 0x01	; 1
     2b0:	80 6c       	ori	r24, 0xC0	; 192
     2b2:	9f 6f       	ori	r25, 0xFF	; 255
     2b4:	01 96       	adiw	r24, 0x01	; 1
     2b6:	08 95       	ret

000002b8 <_ZN14HardwareSerial4peekEv>:
     2b8:	fc 01       	movw	r30, r24
     2ba:	84 85       	ldd	r24, Z+12	; 0x0c
     2bc:	95 85       	ldd	r25, Z+13	; 0x0d
     2be:	fc 01       	movw	r30, r24
     2c0:	e0 5c       	subi	r30, 0xC0	; 192
     2c2:	ff 4f       	sbci	r31, 0xFF	; 255
     2c4:	40 81       	ld	r20, Z
     2c6:	51 81       	ldd	r21, Z+1	; 0x01
     2c8:	32 96       	adiw	r30, 0x02	; 2
     2ca:	20 81       	ld	r18, Z
     2cc:	31 81       	ldd	r19, Z+1	; 0x01
     2ce:	42 17       	cp	r20, r18
     2d0:	53 07       	cpc	r21, r19
     2d2:	41 f0       	breq	.+16     	; 0x2e4 <_ZN14HardwareSerial4peekEv+0x2c>
     2d4:	20 81       	ld	r18, Z
     2d6:	31 81       	ldd	r19, Z+1	; 0x01
     2d8:	fc 01       	movw	r30, r24
     2da:	e2 0f       	add	r30, r18
     2dc:	f3 1f       	adc	r31, r19
     2de:	80 81       	ld	r24, Z
     2e0:	90 e0       	ldi	r25, 0x00	; 0
     2e2:	08 95       	ret
     2e4:	8f ef       	ldi	r24, 0xFF	; 255
     2e6:	9f ef       	ldi	r25, 0xFF	; 255
     2e8:	08 95       	ret

000002ea <_ZN14HardwareSerial4readEv>:
     2ea:	fc 01       	movw	r30, r24
     2ec:	84 85       	ldd	r24, Z+12	; 0x0c
     2ee:	95 85       	ldd	r25, Z+13	; 0x0d
     2f0:	fc 01       	movw	r30, r24
     2f2:	e0 5c       	subi	r30, 0xC0	; 192
     2f4:	ff 4f       	sbci	r31, 0xFF	; 255
     2f6:	40 81       	ld	r20, Z
     2f8:	51 81       	ldd	r21, Z+1	; 0x01
     2fa:	32 96       	adiw	r30, 0x02	; 2
     2fc:	20 81       	ld	r18, Z
     2fe:	31 81       	ldd	r19, Z+1	; 0x01
     300:	42 17       	cp	r20, r18
     302:	53 07       	cpc	r21, r19
     304:	81 f0       	breq	.+32     	; 0x326 <_ZN14HardwareSerial4readEv+0x3c>
     306:	20 81       	ld	r18, Z
     308:	31 81       	ldd	r19, Z+1	; 0x01
     30a:	dc 01       	movw	r26, r24
     30c:	a2 0f       	add	r26, r18
     30e:	b3 1f       	adc	r27, r19
     310:	8c 91       	ld	r24, X
     312:	20 81       	ld	r18, Z
     314:	31 81       	ldd	r19, Z+1	; 0x01
     316:	2f 5f       	subi	r18, 0xFF	; 255
     318:	3f 4f       	sbci	r19, 0xFF	; 255
     31a:	2f 73       	andi	r18, 0x3F	; 63
     31c:	33 27       	eor	r19, r19
     31e:	31 83       	std	Z+1, r19	; 0x01
     320:	20 83       	st	Z, r18
     322:	90 e0       	ldi	r25, 0x00	; 0
     324:	08 95       	ret
     326:	8f ef       	ldi	r24, 0xFF	; 255
     328:	9f ef       	ldi	r25, 0xFF	; 255
     32a:	08 95       	ret

0000032c <_ZN14HardwareSerial5flushEv>:
     32c:	fc 01       	movw	r30, r24
     32e:	81 a1       	ldd	r24, Z+33	; 0x21
     330:	88 23       	and	r24, r24
     332:	29 f0       	breq	.+10     	; 0x33e <_ZN14HardwareSerial5flushEv+0x12>
     334:	a4 89       	ldd	r26, Z+20	; 0x14
     336:	b5 89       	ldd	r27, Z+21	; 0x15
     338:	8c 91       	ld	r24, X
     33a:	86 ff       	sbrs	r24, 6
     33c:	fb cf       	rjmp	.-10     	; 0x334 <_ZN14HardwareSerial5flushEv+0x8>
     33e:	11 a2       	std	Z+33, r1	; 0x21
     340:	08 95       	ret

00000342 <_ZN14HardwareSerial5writeEh>:
     342:	1f 93       	push	r17
     344:	cf 93       	push	r28
     346:	df 93       	push	r29
     348:	ec 01       	movw	r28, r24
     34a:	8e 85       	ldd	r24, Y+14	; 0x0e
     34c:	9f 85       	ldd	r25, Y+15	; 0x0f
     34e:	fc 01       	movw	r30, r24
     350:	e0 5c       	subi	r30, 0xC0	; 192
     352:	ff 4f       	sbci	r31, 0xFF	; 255
     354:	01 90       	ld	r0, Z+
     356:	f0 81       	ld	r31, Z
     358:	e0 2d       	mov	r30, r0
     35a:	31 96       	adiw	r30, 0x01	; 1
     35c:	ef 73       	andi	r30, 0x3F	; 63
     35e:	ff 27       	eor	r31, r31
     360:	1e 2f       	mov	r17, r30
     362:	7f 2f       	mov	r23, r31
     364:	dc 01       	movw	r26, r24
     366:	ae 5b       	subi	r26, 0xBE	; 190
     368:	bf 4f       	sbci	r27, 0xFF	; 255
     36a:	21 2f       	mov	r18, r17
     36c:	37 2f       	mov	r19, r23
     36e:	4d 91       	ld	r20, X+
     370:	5c 91       	ld	r21, X
     372:	11 97       	sbiw	r26, 0x01	; 1
     374:	e4 17       	cp	r30, r20
     376:	f5 07       	cpc	r31, r21
     378:	c1 f3       	breq	.-16     	; 0x36a <_ZN14HardwareSerial5writeEh+0x28>
     37a:	fc 01       	movw	r30, r24
     37c:	e0 5c       	subi	r30, 0xC0	; 192
     37e:	ff 4f       	sbci	r31, 0xFF	; 255
     380:	40 81       	ld	r20, Z
     382:	51 81       	ldd	r21, Z+1	; 0x01
     384:	fc 01       	movw	r30, r24
     386:	e4 0f       	add	r30, r20
     388:	f5 1f       	adc	r31, r21
     38a:	60 83       	st	Z, r22
     38c:	ee 85       	ldd	r30, Y+14	; 0x0e
     38e:	ff 85       	ldd	r31, Y+15	; 0x0f
     390:	e0 5c       	subi	r30, 0xC0	; 192
     392:	ff 4f       	sbci	r31, 0xFF	; 255
     394:	31 83       	std	Z+1, r19	; 0x01
     396:	20 83       	st	Z, r18
     398:	ee 89       	ldd	r30, Y+22	; 0x16
     39a:	ff 89       	ldd	r31, Y+23	; 0x17
     39c:	40 81       	ld	r20, Z
     39e:	21 e0       	ldi	r18, 0x01	; 1
     3a0:	30 e0       	ldi	r19, 0x00	; 0
     3a2:	c9 01       	movw	r24, r18
     3a4:	0f 8c       	ldd	r0, Y+31	; 0x1f
     3a6:	02 c0       	rjmp	.+4      	; 0x3ac <_ZN14HardwareSerial5writeEh+0x6a>
     3a8:	88 0f       	add	r24, r24
     3aa:	99 1f       	adc	r25, r25
     3ac:	0a 94       	dec	r0
     3ae:	e2 f7       	brpl	.-8      	; 0x3a8 <_ZN14HardwareSerial5writeEh+0x66>
     3b0:	84 2b       	or	r24, r20
     3b2:	80 83       	st	Z, r24
     3b4:	81 e0       	ldi	r24, 0x01	; 1
     3b6:	89 a3       	std	Y+33, r24	; 0x21
     3b8:	ec 89       	ldd	r30, Y+20	; 0x14
     3ba:	fd 89       	ldd	r31, Y+21	; 0x15
     3bc:	80 81       	ld	r24, Z
     3be:	80 64       	ori	r24, 0x40	; 64
     3c0:	80 83       	st	Z, r24
     3c2:	81 e0       	ldi	r24, 0x01	; 1
     3c4:	90 e0       	ldi	r25, 0x00	; 0
     3c6:	df 91       	pop	r29
     3c8:	cf 91       	pop	r28
     3ca:	1f 91       	pop	r17
     3cc:	08 95       	ret

000003ce <__vector_25>:
     3ce:	1f 92       	push	r1
     3d0:	0f 92       	push	r0
     3d2:	0f b6       	in	r0, 0x3f	; 63
     3d4:	0f 92       	push	r0
     3d6:	11 24       	eor	r1, r1
     3d8:	0b b6       	in	r0, 0x3b	; 59
     3da:	0f 92       	push	r0
     3dc:	2f 93       	push	r18
     3de:	3f 93       	push	r19
     3e0:	4f 93       	push	r20
     3e2:	8f 93       	push	r24
     3e4:	9f 93       	push	r25
     3e6:	af 93       	push	r26
     3e8:	bf 93       	push	r27
     3ea:	ef 93       	push	r30
     3ec:	ff 93       	push	r31
     3ee:	80 91 c0 00 	lds	r24, 0x00C0
     3f2:	82 fd       	sbrc	r24, 2
     3f4:	1a c0       	rjmp	.+52     	; 0x42a <__vector_25+0x5c>
     3f6:	40 91 c6 00 	lds	r20, 0x00C6
     3fa:	80 91 cc 04 	lds	r24, 0x04CC
     3fe:	90 91 cd 04 	lds	r25, 0x04CD
     402:	01 96       	adiw	r24, 0x01	; 1
     404:	8f 73       	andi	r24, 0x3F	; 63
     406:	99 27       	eor	r25, r25
     408:	20 91 ce 04 	lds	r18, 0x04CE
     40c:	30 91 cf 04 	lds	r19, 0x04CF
     410:	82 17       	cp	r24, r18
     412:	93 07       	cpc	r25, r19
     414:	61 f0       	breq	.+24     	; 0x42e <__vector_25+0x60>
     416:	ec ec       	ldi	r30, 0xCC	; 204
     418:	f4 e0       	ldi	r31, 0x04	; 4
     41a:	a0 81       	ld	r26, Z
     41c:	b1 81       	ldd	r27, Z+1	; 0x01
     41e:	a4 57       	subi	r26, 0x74	; 116
     420:	bb 4f       	sbci	r27, 0xFB	; 251
     422:	4c 93       	st	X, r20
     424:	91 83       	std	Z+1, r25	; 0x01
     426:	80 83       	st	Z, r24
     428:	02 c0       	rjmp	.+4      	; 0x42e <__vector_25+0x60>
     42a:	80 91 c6 00 	lds	r24, 0x00C6
     42e:	ff 91       	pop	r31
     430:	ef 91       	pop	r30
     432:	bf 91       	pop	r27
     434:	af 91       	pop	r26
     436:	9f 91       	pop	r25
     438:	8f 91       	pop	r24
     43a:	4f 91       	pop	r20
     43c:	3f 91       	pop	r19
     43e:	2f 91       	pop	r18
     440:	0f 90       	pop	r0
     442:	0b be       	out	0x3b, r0	; 59
     444:	0f 90       	pop	r0
     446:	0f be       	out	0x3f, r0	; 63
     448:	0f 90       	pop	r0
     44a:	1f 90       	pop	r1
     44c:	18 95       	reti

0000044e <__vector_36>:
     44e:	1f 92       	push	r1
     450:	0f 92       	push	r0
     452:	0f b6       	in	r0, 0x3f	; 63
     454:	0f 92       	push	r0
     456:	11 24       	eor	r1, r1
     458:	0b b6       	in	r0, 0x3b	; 59
     45a:	0f 92       	push	r0
     45c:	2f 93       	push	r18
     45e:	3f 93       	push	r19
     460:	4f 93       	push	r20
     462:	8f 93       	push	r24
     464:	9f 93       	push	r25
     466:	af 93       	push	r26
     468:	bf 93       	push	r27
     46a:	ef 93       	push	r30
     46c:	ff 93       	push	r31
     46e:	80 91 c8 00 	lds	r24, 0x00C8
     472:	82 fd       	sbrc	r24, 2
     474:	1a c0       	rjmp	.+52     	; 0x4aa <__vector_36+0x5c>
     476:	40 91 ce 00 	lds	r20, 0x00CE
     47a:	80 91 44 04 	lds	r24, 0x0444
     47e:	90 91 45 04 	lds	r25, 0x0445
     482:	01 96       	adiw	r24, 0x01	; 1
     484:	8f 73       	andi	r24, 0x3F	; 63
     486:	99 27       	eor	r25, r25
     488:	20 91 46 04 	lds	r18, 0x0446
     48c:	30 91 47 04 	lds	r19, 0x0447
     490:	82 17       	cp	r24, r18
     492:	93 07       	cpc	r25, r19
     494:	61 f0       	breq	.+24     	; 0x4ae <__vector_36+0x60>
     496:	e4 e4       	ldi	r30, 0x44	; 68
     498:	f4 e0       	ldi	r31, 0x04	; 4
     49a:	a0 81       	ld	r26, Z
     49c:	b1 81       	ldd	r27, Z+1	; 0x01
     49e:	ac 5f       	subi	r26, 0xFC	; 252
     4a0:	bb 4f       	sbci	r27, 0xFB	; 251
     4a2:	4c 93       	st	X, r20
     4a4:	91 83       	std	Z+1, r25	; 0x01
     4a6:	80 83       	st	Z, r24
     4a8:	02 c0       	rjmp	.+4      	; 0x4ae <__vector_36+0x60>
     4aa:	80 91 ce 00 	lds	r24, 0x00CE
     4ae:	ff 91       	pop	r31
     4b0:	ef 91       	pop	r30
     4b2:	bf 91       	pop	r27
     4b4:	af 91       	pop	r26
     4b6:	9f 91       	pop	r25
     4b8:	8f 91       	pop	r24
     4ba:	4f 91       	pop	r20
     4bc:	3f 91       	pop	r19
     4be:	2f 91       	pop	r18
     4c0:	0f 90       	pop	r0
     4c2:	0b be       	out	0x3b, r0	; 59
     4c4:	0f 90       	pop	r0
     4c6:	0f be       	out	0x3f, r0	; 63
     4c8:	0f 90       	pop	r0
     4ca:	1f 90       	pop	r1
     4cc:	18 95       	reti

000004ce <__vector_51>:
     4ce:	1f 92       	push	r1
     4d0:	0f 92       	push	r0
     4d2:	0f b6       	in	r0, 0x3f	; 63
     4d4:	0f 92       	push	r0
     4d6:	11 24       	eor	r1, r1
     4d8:	0b b6       	in	r0, 0x3b	; 59
     4da:	0f 92       	push	r0
     4dc:	2f 93       	push	r18
     4de:	3f 93       	push	r19
     4e0:	4f 93       	push	r20
     4e2:	8f 93       	push	r24
     4e4:	9f 93       	push	r25
     4e6:	af 93       	push	r26
     4e8:	bf 93       	push	r27
     4ea:	ef 93       	push	r30
     4ec:	ff 93       	push	r31
     4ee:	80 91 d0 00 	lds	r24, 0x00D0
     4f2:	82 fd       	sbrc	r24, 2
     4f4:	1a c0       	rjmp	.+52     	; 0x52a <__vector_51+0x5c>
     4f6:	40 91 d6 00 	lds	r20, 0x00D6
     4fa:	80 91 bc 03 	lds	r24, 0x03BC
     4fe:	90 91 bd 03 	lds	r25, 0x03BD
     502:	01 96       	adiw	r24, 0x01	; 1
     504:	8f 73       	andi	r24, 0x3F	; 63
     506:	99 27       	eor	r25, r25
     508:	20 91 be 03 	lds	r18, 0x03BE
     50c:	30 91 bf 03 	lds	r19, 0x03BF
     510:	82 17       	cp	r24, r18
     512:	93 07       	cpc	r25, r19
     514:	61 f0       	breq	.+24     	; 0x52e <__vector_51+0x60>
     516:	ec eb       	ldi	r30, 0xBC	; 188
     518:	f3 e0       	ldi	r31, 0x03	; 3
     51a:	a0 81       	ld	r26, Z
     51c:	b1 81       	ldd	r27, Z+1	; 0x01
     51e:	a4 58       	subi	r26, 0x84	; 132
     520:	bc 4f       	sbci	r27, 0xFC	; 252
     522:	4c 93       	st	X, r20
     524:	91 83       	std	Z+1, r25	; 0x01
     526:	80 83       	st	Z, r24
     528:	02 c0       	rjmp	.+4      	; 0x52e <__vector_51+0x60>
     52a:	80 91 d6 00 	lds	r24, 0x00D6
     52e:	ff 91       	pop	r31
     530:	ef 91       	pop	r30
     532:	bf 91       	pop	r27
     534:	af 91       	pop	r26
     536:	9f 91       	pop	r25
     538:	8f 91       	pop	r24
     53a:	4f 91       	pop	r20
     53c:	3f 91       	pop	r19
     53e:	2f 91       	pop	r18
     540:	0f 90       	pop	r0
     542:	0b be       	out	0x3b, r0	; 59
     544:	0f 90       	pop	r0
     546:	0f be       	out	0x3f, r0	; 63
     548:	0f 90       	pop	r0
     54a:	1f 90       	pop	r1
     54c:	18 95       	reti

0000054e <__vector_54>:
     54e:	1f 92       	push	r1
     550:	0f 92       	push	r0
     552:	0f b6       	in	r0, 0x3f	; 63
     554:	0f 92       	push	r0
     556:	11 24       	eor	r1, r1
     558:	0b b6       	in	r0, 0x3b	; 59
     55a:	0f 92       	push	r0
     55c:	2f 93       	push	r18
     55e:	3f 93       	push	r19
     560:	4f 93       	push	r20
     562:	8f 93       	push	r24
     564:	9f 93       	push	r25
     566:	af 93       	push	r26
     568:	bf 93       	push	r27
     56a:	ef 93       	push	r30
     56c:	ff 93       	push	r31
     56e:	80 91 30 01 	lds	r24, 0x0130
     572:	82 fd       	sbrc	r24, 2
     574:	1a c0       	rjmp	.+52     	; 0x5aa <__vector_54+0x5c>
     576:	40 91 36 01 	lds	r20, 0x0136
     57a:	80 91 34 03 	lds	r24, 0x0334
     57e:	90 91 35 03 	lds	r25, 0x0335
     582:	01 96       	adiw	r24, 0x01	; 1
     584:	8f 73       	andi	r24, 0x3F	; 63
     586:	99 27       	eor	r25, r25
     588:	20 91 36 03 	lds	r18, 0x0336
     58c:	30 91 37 03 	lds	r19, 0x0337
     590:	82 17       	cp	r24, r18
     592:	93 07       	cpc	r25, r19
     594:	61 f0       	breq	.+24     	; 0x5ae <__vector_54+0x60>
     596:	e4 e3       	ldi	r30, 0x34	; 52
     598:	f3 e0       	ldi	r31, 0x03	; 3
     59a:	a0 81       	ld	r26, Z
     59c:	b1 81       	ldd	r27, Z+1	; 0x01
     59e:	ac 50       	subi	r26, 0x0C	; 12
     5a0:	bd 4f       	sbci	r27, 0xFD	; 253
     5a2:	4c 93       	st	X, r20
     5a4:	91 83       	std	Z+1, r25	; 0x01
     5a6:	80 83       	st	Z, r24
     5a8:	02 c0       	rjmp	.+4      	; 0x5ae <__vector_54+0x60>
     5aa:	80 91 36 01 	lds	r24, 0x0136
     5ae:	ff 91       	pop	r31
     5b0:	ef 91       	pop	r30
     5b2:	bf 91       	pop	r27
     5b4:	af 91       	pop	r26
     5b6:	9f 91       	pop	r25
     5b8:	8f 91       	pop	r24
     5ba:	4f 91       	pop	r20
     5bc:	3f 91       	pop	r19
     5be:	2f 91       	pop	r18
     5c0:	0f 90       	pop	r0
     5c2:	0b be       	out	0x3b, r0	; 59
     5c4:	0f 90       	pop	r0
     5c6:	0f be       	out	0x3f, r0	; 63
     5c8:	0f 90       	pop	r0
     5ca:	1f 90       	pop	r1
     5cc:	18 95       	reti

000005ce <__vector_26>:
     5ce:	1f 92       	push	r1
     5d0:	0f 92       	push	r0
     5d2:	0f b6       	in	r0, 0x3f	; 63
     5d4:	0f 92       	push	r0
     5d6:	11 24       	eor	r1, r1
     5d8:	0b b6       	in	r0, 0x3b	; 59
     5da:	0f 92       	push	r0
     5dc:	2f 93       	push	r18
     5de:	3f 93       	push	r19
     5e0:	8f 93       	push	r24
     5e2:	9f 93       	push	r25
     5e4:	af 93       	push	r26
     5e6:	bf 93       	push	r27
     5e8:	ef 93       	push	r30
     5ea:	ff 93       	push	r31
     5ec:	20 91 88 04 	lds	r18, 0x0488
     5f0:	30 91 89 04 	lds	r19, 0x0489
     5f4:	80 91 8a 04 	lds	r24, 0x048A
     5f8:	90 91 8b 04 	lds	r25, 0x048B
     5fc:	28 17       	cp	r18, r24
     5fe:	39 07       	cpc	r19, r25
     600:	31 f4       	brne	.+12     	; 0x60e <__vector_26+0x40>
     602:	e1 ec       	ldi	r30, 0xC1	; 193
     604:	f0 e0       	ldi	r31, 0x00	; 0
     606:	80 81       	ld	r24, Z
     608:	8f 7d       	andi	r24, 0xDF	; 223
     60a:	80 83       	st	Z, r24
     60c:	10 c0       	rjmp	.+32     	; 0x62e <__vector_26+0x60>
     60e:	ea e8       	ldi	r30, 0x8A	; 138
     610:	f4 e0       	ldi	r31, 0x04	; 4
     612:	a0 81       	ld	r26, Z
     614:	b1 81       	ldd	r27, Z+1	; 0x01
     616:	a8 5b       	subi	r26, 0xB8	; 184
     618:	bb 4f       	sbci	r27, 0xFB	; 251
     61a:	2c 91       	ld	r18, X
     61c:	80 81       	ld	r24, Z
     61e:	91 81       	ldd	r25, Z+1	; 0x01
     620:	01 96       	adiw	r24, 0x01	; 1
     622:	8f 73       	andi	r24, 0x3F	; 63
     624:	99 27       	eor	r25, r25
     626:	91 83       	std	Z+1, r25	; 0x01
     628:	80 83       	st	Z, r24
     62a:	20 93 c6 00 	sts	0x00C6, r18
     62e:	ff 91       	pop	r31
     630:	ef 91       	pop	r30
     632:	bf 91       	pop	r27
     634:	af 91       	pop	r26
     636:	9f 91       	pop	r25
     638:	8f 91       	pop	r24
     63a:	3f 91       	pop	r19
     63c:	2f 91       	pop	r18
     63e:	0f 90       	pop	r0
     640:	0b be       	out	0x3b, r0	; 59
     642:	0f 90       	pop	r0
     644:	0f be       	out	0x3f, r0	; 63
     646:	0f 90       	pop	r0
     648:	1f 90       	pop	r1
     64a:	18 95       	reti

0000064c <__vector_37>:
     64c:	1f 92       	push	r1
     64e:	0f 92       	push	r0
     650:	0f b6       	in	r0, 0x3f	; 63
     652:	0f 92       	push	r0
     654:	11 24       	eor	r1, r1
     656:	0b b6       	in	r0, 0x3b	; 59
     658:	0f 92       	push	r0
     65a:	2f 93       	push	r18
     65c:	3f 93       	push	r19
     65e:	8f 93       	push	r24
     660:	9f 93       	push	r25
     662:	af 93       	push	r26
     664:	bf 93       	push	r27
     666:	ef 93       	push	r30
     668:	ff 93       	push	r31
     66a:	20 91 00 04 	lds	r18, 0x0400
     66e:	30 91 01 04 	lds	r19, 0x0401
     672:	80 91 02 04 	lds	r24, 0x0402
     676:	90 91 03 04 	lds	r25, 0x0403
     67a:	28 17       	cp	r18, r24
     67c:	39 07       	cpc	r19, r25
     67e:	31 f4       	brne	.+12     	; 0x68c <__vector_37+0x40>
     680:	e9 ec       	ldi	r30, 0xC9	; 201
     682:	f0 e0       	ldi	r31, 0x00	; 0
     684:	80 81       	ld	r24, Z
     686:	8f 7d       	andi	r24, 0xDF	; 223
     688:	80 83       	st	Z, r24
     68a:	10 c0       	rjmp	.+32     	; 0x6ac <__vector_37+0x60>
     68c:	e2 e0       	ldi	r30, 0x02	; 2
     68e:	f4 e0       	ldi	r31, 0x04	; 4
     690:	a0 81       	ld	r26, Z
     692:	b1 81       	ldd	r27, Z+1	; 0x01
     694:	a0 54       	subi	r26, 0x40	; 64
     696:	bc 4f       	sbci	r27, 0xFC	; 252
     698:	2c 91       	ld	r18, X
     69a:	80 81       	ld	r24, Z
     69c:	91 81       	ldd	r25, Z+1	; 0x01
     69e:	01 96       	adiw	r24, 0x01	; 1
     6a0:	8f 73       	andi	r24, 0x3F	; 63
     6a2:	99 27       	eor	r25, r25
     6a4:	91 83       	std	Z+1, r25	; 0x01
     6a6:	80 83       	st	Z, r24
     6a8:	20 93 ce 00 	sts	0x00CE, r18
     6ac:	ff 91       	pop	r31
     6ae:	ef 91       	pop	r30
     6b0:	bf 91       	pop	r27
     6b2:	af 91       	pop	r26
     6b4:	9f 91       	pop	r25
     6b6:	8f 91       	pop	r24
     6b8:	3f 91       	pop	r19
     6ba:	2f 91       	pop	r18
     6bc:	0f 90       	pop	r0
     6be:	0b be       	out	0x3b, r0	; 59
     6c0:	0f 90       	pop	r0
     6c2:	0f be       	out	0x3f, r0	; 63
     6c4:	0f 90       	pop	r0
     6c6:	1f 90       	pop	r1
     6c8:	18 95       	reti

000006ca <__vector_52>:
     6ca:	1f 92       	push	r1
     6cc:	0f 92       	push	r0
     6ce:	0f b6       	in	r0, 0x3f	; 63
     6d0:	0f 92       	push	r0
     6d2:	11 24       	eor	r1, r1
     6d4:	0b b6       	in	r0, 0x3b	; 59
     6d6:	0f 92       	push	r0
     6d8:	2f 93       	push	r18
     6da:	3f 93       	push	r19
     6dc:	8f 93       	push	r24
     6de:	9f 93       	push	r25
     6e0:	af 93       	push	r26
     6e2:	bf 93       	push	r27
     6e4:	ef 93       	push	r30
     6e6:	ff 93       	push	r31
     6e8:	20 91 78 03 	lds	r18, 0x0378
     6ec:	30 91 79 03 	lds	r19, 0x0379
     6f0:	80 91 7a 03 	lds	r24, 0x037A
     6f4:	90 91 7b 03 	lds	r25, 0x037B
     6f8:	28 17       	cp	r18, r24
     6fa:	39 07       	cpc	r19, r25
     6fc:	31 f4       	brne	.+12     	; 0x70a <__vector_52+0x40>
     6fe:	e1 ed       	ldi	r30, 0xD1	; 209
     700:	f0 e0       	ldi	r31, 0x00	; 0
     702:	80 81       	ld	r24, Z
     704:	8f 7d       	andi	r24, 0xDF	; 223
     706:	80 83       	st	Z, r24
     708:	10 c0       	rjmp	.+32     	; 0x72a <__vector_52+0x60>
     70a:	ea e7       	ldi	r30, 0x7A	; 122
     70c:	f3 e0       	ldi	r31, 0x03	; 3
     70e:	a0 81       	ld	r26, Z
     710:	b1 81       	ldd	r27, Z+1	; 0x01
     712:	a8 5c       	subi	r26, 0xC8	; 200
     714:	bc 4f       	sbci	r27, 0xFC	; 252
     716:	2c 91       	ld	r18, X
     718:	80 81       	ld	r24, Z
     71a:	91 81       	ldd	r25, Z+1	; 0x01
     71c:	01 96       	adiw	r24, 0x01	; 1
     71e:	8f 73       	andi	r24, 0x3F	; 63
     720:	99 27       	eor	r25, r25
     722:	91 83       	std	Z+1, r25	; 0x01
     724:	80 83       	st	Z, r24
     726:	20 93 d6 00 	sts	0x00D6, r18
     72a:	ff 91       	pop	r31
     72c:	ef 91       	pop	r30
     72e:	bf 91       	pop	r27
     730:	af 91       	pop	r26
     732:	9f 91       	pop	r25
     734:	8f 91       	pop	r24
     736:	3f 91       	pop	r19
     738:	2f 91       	pop	r18
     73a:	0f 90       	pop	r0
     73c:	0b be       	out	0x3b, r0	; 59
     73e:	0f 90       	pop	r0
     740:	0f be       	out	0x3f, r0	; 63
     742:	0f 90       	pop	r0
     744:	1f 90       	pop	r1
     746:	18 95       	reti

00000748 <__vector_55>:
     748:	1f 92       	push	r1
     74a:	0f 92       	push	r0
     74c:	0f b6       	in	r0, 0x3f	; 63
     74e:	0f 92       	push	r0
     750:	11 24       	eor	r1, r1
     752:	0b b6       	in	r0, 0x3b	; 59
     754:	0f 92       	push	r0
     756:	2f 93       	push	r18
     758:	3f 93       	push	r19
     75a:	8f 93       	push	r24
     75c:	9f 93       	push	r25
     75e:	af 93       	push	r26
     760:	bf 93       	push	r27
     762:	ef 93       	push	r30
     764:	ff 93       	push	r31
     766:	20 91 f0 02 	lds	r18, 0x02F0
     76a:	30 91 f1 02 	lds	r19, 0x02F1
     76e:	80 91 f2 02 	lds	r24, 0x02F2
     772:	90 91 f3 02 	lds	r25, 0x02F3
     776:	28 17       	cp	r18, r24
     778:	39 07       	cpc	r19, r25
     77a:	31 f4       	brne	.+12     	; 0x788 <__vector_55+0x40>
     77c:	e1 e3       	ldi	r30, 0x31	; 49
     77e:	f1 e0       	ldi	r31, 0x01	; 1
     780:	80 81       	ld	r24, Z
     782:	8f 7d       	andi	r24, 0xDF	; 223
     784:	80 83       	st	Z, r24
     786:	10 c0       	rjmp	.+32     	; 0x7a8 <__vector_55+0x60>
     788:	e2 ef       	ldi	r30, 0xF2	; 242
     78a:	f2 e0       	ldi	r31, 0x02	; 2
     78c:	a0 81       	ld	r26, Z
     78e:	b1 81       	ldd	r27, Z+1	; 0x01
     790:	a0 55       	subi	r26, 0x50	; 80
     792:	bd 4f       	sbci	r27, 0xFD	; 253
     794:	2c 91       	ld	r18, X
     796:	80 81       	ld	r24, Z
     798:	91 81       	ldd	r25, Z+1	; 0x01
     79a:	01 96       	adiw	r24, 0x01	; 1
     79c:	8f 73       	andi	r24, 0x3F	; 63
     79e:	99 27       	eor	r25, r25
     7a0:	91 83       	std	Z+1, r25	; 0x01
     7a2:	80 83       	st	Z, r24
     7a4:	20 93 36 01 	sts	0x0136, r18
     7a8:	ff 91       	pop	r31
     7aa:	ef 91       	pop	r30
     7ac:	bf 91       	pop	r27
     7ae:	af 91       	pop	r26
     7b0:	9f 91       	pop	r25
     7b2:	8f 91       	pop	r24
     7b4:	3f 91       	pop	r19
     7b6:	2f 91       	pop	r18
     7b8:	0f 90       	pop	r0
     7ba:	0b be       	out	0x3b, r0	; 59
     7bc:	0f 90       	pop	r0
     7be:	0f be       	out	0x3f, r0	; 63
     7c0:	0f 90       	pop	r0
     7c2:	1f 90       	pop	r1
     7c4:	18 95       	reti

000007c6 <_ZN14HardwareSerialC1EP11ring_bufferS1_PVhS3_S3_S3_S3_S3_hhhhh>:
     7c6:	8f 92       	push	r8
     7c8:	9f 92       	push	r9
     7ca:	af 92       	push	r10
     7cc:	bf 92       	push	r11
     7ce:	cf 92       	push	r12
     7d0:	df 92       	push	r13
     7d2:	ef 92       	push	r14
     7d4:	ff 92       	push	r15
     7d6:	0f 93       	push	r16
     7d8:	1f 93       	push	r17
     7da:	cf 93       	push	r28
     7dc:	df 93       	push	r29
     7de:	cd b7       	in	r28, 0x3d	; 61
     7e0:	de b7       	in	r29, 0x3e	; 62
     7e2:	fc 01       	movw	r30, r24
     7e4:	13 82       	std	Z+3, r1	; 0x03
     7e6:	12 82       	std	Z+2, r1	; 0x02
     7e8:	88 ee       	ldi	r24, 0xE8	; 232
     7ea:	93 e0       	ldi	r25, 0x03	; 3
     7ec:	a0 e0       	ldi	r26, 0x00	; 0
     7ee:	b0 e0       	ldi	r27, 0x00	; 0
     7f0:	84 83       	std	Z+4, r24	; 0x04
     7f2:	95 83       	std	Z+5, r25	; 0x05
     7f4:	a6 83       	std	Z+6, r26	; 0x06
     7f6:	b7 83       	std	Z+7, r27	; 0x07
     7f8:	84 e1       	ldi	r24, 0x14	; 20
     7fa:	92 e0       	ldi	r25, 0x02	; 2
     7fc:	91 83       	std	Z+1, r25	; 0x01
     7fe:	80 83       	st	Z, r24
     800:	75 87       	std	Z+13, r23	; 0x0d
     802:	64 87       	std	Z+12, r22	; 0x0c
     804:	57 87       	std	Z+15, r21	; 0x0f
     806:	46 87       	std	Z+14, r20	; 0x0e
     808:	31 8b       	std	Z+17, r19	; 0x11
     80a:	20 8b       	std	Z+16, r18	; 0x10
     80c:	13 8b       	std	Z+19, r17	; 0x13
     80e:	02 8b       	std	Z+18, r16	; 0x12
     810:	f5 8a       	std	Z+21, r15	; 0x15
     812:	e4 8a       	std	Z+20, r14	; 0x14
     814:	d7 8a       	std	Z+23, r13	; 0x17
     816:	c6 8a       	std	Z+22, r12	; 0x16
     818:	b1 8e       	std	Z+25, r11	; 0x19
     81a:	a0 8e       	std	Z+24, r10	; 0x18
     81c:	93 8e       	std	Z+27, r9	; 0x1b
     81e:	82 8e       	std	Z+26, r8	; 0x1a
     820:	88 89       	ldd	r24, Y+16	; 0x10
     822:	84 8f       	std	Z+28, r24	; 0x1c
     824:	89 89       	ldd	r24, Y+17	; 0x11
     826:	85 8f       	std	Z+29, r24	; 0x1d
     828:	8a 89       	ldd	r24, Y+18	; 0x12
     82a:	86 8f       	std	Z+30, r24	; 0x1e
     82c:	8b 89       	ldd	r24, Y+19	; 0x13
     82e:	87 8f       	std	Z+31, r24	; 0x1f
     830:	8c 89       	ldd	r24, Y+20	; 0x14
     832:	80 a3       	std	Z+32, r24	; 0x20
     834:	df 91       	pop	r29
     836:	cf 91       	pop	r28
     838:	1f 91       	pop	r17
     83a:	0f 91       	pop	r16
     83c:	ff 90       	pop	r15
     83e:	ef 90       	pop	r14
     840:	df 90       	pop	r13
     842:	cf 90       	pop	r12
     844:	bf 90       	pop	r11
     846:	af 90       	pop	r10
     848:	9f 90       	pop	r9
     84a:	8f 90       	pop	r8
     84c:	08 95       	ret

0000084e <_ZN14HardwareSerial5beginEm>:
     84e:	cf 92       	push	r12
     850:	df 92       	push	r13
     852:	ef 92       	push	r14
     854:	ff 92       	push	r15
     856:	cf 93       	push	r28
     858:	df 93       	push	r29
     85a:	ec 01       	movw	r28, r24
     85c:	6a 01       	movw	r12, r20
     85e:	7b 01       	movw	r14, r22
     860:	41 15       	cp	r20, r1
     862:	81 ee       	ldi	r24, 0xE1	; 225
     864:	58 07       	cpc	r21, r24
     866:	61 05       	cpc	r22, r1
     868:	71 05       	cpc	r23, r1
     86a:	09 f1       	breq	.+66     	; 0x8ae <_ZN14HardwareSerial5beginEm+0x60>
     86c:	ec 89       	ldd	r30, Y+20	; 0x14
     86e:	fd 89       	ldd	r31, Y+21	; 0x15
     870:	81 e0       	ldi	r24, 0x01	; 1
     872:	90 e0       	ldi	r25, 0x00	; 0
     874:	08 a0       	ldd	r0, Y+32	; 0x20
     876:	02 c0       	rjmp	.+4      	; 0x87c <_ZN14HardwareSerial5beginEm+0x2e>
     878:	88 0f       	add	r24, r24
     87a:	99 1f       	adc	r25, r25
     87c:	0a 94       	dec	r0
     87e:	e2 f7       	brpl	.-8      	; 0x878 <_ZN14HardwareSerial5beginEm+0x2a>
     880:	80 83       	st	Z, r24
     882:	60 e0       	ldi	r22, 0x00	; 0
     884:	79 e0       	ldi	r23, 0x09	; 9
     886:	8d e3       	ldi	r24, 0x3D	; 61
     888:	90 e0       	ldi	r25, 0x00	; 0
     88a:	a7 01       	movw	r20, r14
     88c:	96 01       	movw	r18, r12
     88e:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <__udivmodsi4>
     892:	ba 01       	movw	r22, r20
     894:	a9 01       	movw	r20, r18
     896:	41 50       	subi	r20, 0x01	; 1
     898:	51 09       	sbc	r21, r1
     89a:	61 09       	sbc	r22, r1
     89c:	71 09       	sbc	r23, r1
     89e:	76 95       	lsr	r23
     8a0:	67 95       	ror	r22
     8a2:	57 95       	ror	r21
     8a4:	47 95       	ror	r20
     8a6:	41 15       	cp	r20, r1
     8a8:	80 e1       	ldi	r24, 0x10	; 16
     8aa:	58 07       	cpc	r21, r24
     8ac:	a8 f0       	brcs	.+42     	; 0x8d8 <_ZN14HardwareSerial5beginEm+0x8a>
     8ae:	ec 89       	ldd	r30, Y+20	; 0x14
     8b0:	fd 89       	ldd	r31, Y+21	; 0x15
     8b2:	10 82       	st	Z, r1
     8b4:	60 e8       	ldi	r22, 0x80	; 128
     8b6:	74 e8       	ldi	r23, 0x84	; 132
     8b8:	8e e1       	ldi	r24, 0x1E	; 30
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	a7 01       	movw	r20, r14
     8be:	96 01       	movw	r18, r12
     8c0:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <__udivmodsi4>
     8c4:	ba 01       	movw	r22, r20
     8c6:	a9 01       	movw	r20, r18
     8c8:	41 50       	subi	r20, 0x01	; 1
     8ca:	51 09       	sbc	r21, r1
     8cc:	61 09       	sbc	r22, r1
     8ce:	71 09       	sbc	r23, r1
     8d0:	76 95       	lsr	r23
     8d2:	67 95       	ror	r22
     8d4:	57 95       	ror	r21
     8d6:	47 95       	ror	r20
     8d8:	e8 89       	ldd	r30, Y+16	; 0x10
     8da:	f9 89       	ldd	r31, Y+17	; 0x11
     8dc:	50 83       	st	Z, r21
     8de:	ea 89       	ldd	r30, Y+18	; 0x12
     8e0:	fb 89       	ldd	r31, Y+19	; 0x13
     8e2:	40 83       	st	Z, r20
     8e4:	19 a2       	std	Y+33, r1	; 0x21
     8e6:	ee 89       	ldd	r30, Y+22	; 0x16
     8e8:	ff 89       	ldd	r31, Y+23	; 0x17
     8ea:	40 81       	ld	r20, Z
     8ec:	81 e0       	ldi	r24, 0x01	; 1
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	9c 01       	movw	r18, r24
     8f2:	0c 8c       	ldd	r0, Y+28	; 0x1c
     8f4:	02 c0       	rjmp	.+4      	; 0x8fa <_ZN14HardwareSerial5beginEm+0xac>
     8f6:	22 0f       	add	r18, r18
     8f8:	33 1f       	adc	r19, r19
     8fa:	0a 94       	dec	r0
     8fc:	e2 f7       	brpl	.-8      	; 0x8f6 <_ZN14HardwareSerial5beginEm+0xa8>
     8fe:	24 2b       	or	r18, r20
     900:	20 83       	st	Z, r18
     902:	ee 89       	ldd	r30, Y+22	; 0x16
     904:	ff 89       	ldd	r31, Y+23	; 0x17
     906:	40 81       	ld	r20, Z
     908:	9c 01       	movw	r18, r24
     90a:	0d 8c       	ldd	r0, Y+29	; 0x1d
     90c:	02 c0       	rjmp	.+4      	; 0x912 <_ZN14HardwareSerial5beginEm+0xc4>
     90e:	22 0f       	add	r18, r18
     910:	33 1f       	adc	r19, r19
     912:	0a 94       	dec	r0
     914:	e2 f7       	brpl	.-8      	; 0x90e <_ZN14HardwareSerial5beginEm+0xc0>
     916:	24 2b       	or	r18, r20
     918:	20 83       	st	Z, r18
     91a:	ee 89       	ldd	r30, Y+22	; 0x16
     91c:	ff 89       	ldd	r31, Y+23	; 0x17
     91e:	40 81       	ld	r20, Z
     920:	9c 01       	movw	r18, r24
     922:	0e 8c       	ldd	r0, Y+30	; 0x1e
     924:	02 c0       	rjmp	.+4      	; 0x92a <_ZN14HardwareSerial5beginEm+0xdc>
     926:	22 0f       	add	r18, r18
     928:	33 1f       	adc	r19, r19
     92a:	0a 94       	dec	r0
     92c:	e2 f7       	brpl	.-8      	; 0x926 <_ZN14HardwareSerial5beginEm+0xd8>
     92e:	24 2b       	or	r18, r20
     930:	20 83       	st	Z, r18
     932:	ee 89       	ldd	r30, Y+22	; 0x16
     934:	ff 89       	ldd	r31, Y+23	; 0x17
     936:	20 81       	ld	r18, Z
     938:	0f 8c       	ldd	r0, Y+31	; 0x1f
     93a:	02 c0       	rjmp	.+4      	; 0x940 <_ZN14HardwareSerial5beginEm+0xf2>
     93c:	88 0f       	add	r24, r24
     93e:	99 1f       	adc	r25, r25
     940:	0a 94       	dec	r0
     942:	e2 f7       	brpl	.-8      	; 0x93c <_ZN14HardwareSerial5beginEm+0xee>
     944:	80 95       	com	r24
     946:	82 23       	and	r24, r18
     948:	80 83       	st	Z, r24
     94a:	df 91       	pop	r29
     94c:	cf 91       	pop	r28
     94e:	ff 90       	pop	r15
     950:	ef 90       	pop	r14
     952:	df 90       	pop	r13
     954:	cf 90       	pop	r12
     956:	08 95       	ret

00000958 <_GLOBAL__sub_I_rx_buffer>:
#endif
#if defined(UBRR2H)
  HardwareSerial Serial2(&rx_buffer2, &tx_buffer2, &UBRR2H, &UBRR2L, &UCSR2A, &UCSR2B, &UCSR2C, &UDR2, RXEN2, TXEN2, RXCIE2, UDRIE2, U2X2);
#endif
#if defined(UBRR3H)
  HardwareSerial Serial3(&rx_buffer3, &tx_buffer3, &UBRR3H, &UBRR3L, &UCSR3A, &UCSR3B, &UCSR3C, &UDR3, RXEN3, TXEN3, RXCIE3, UDRIE3, U2X3);
     958:	5f 92       	push	r5
     95a:	6f 92       	push	r6
     95c:	7f 92       	push	r7
     95e:	8f 92       	push	r8
     960:	9f 92       	push	r9
     962:	af 92       	push	r10
     964:	bf 92       	push	r11
     966:	cf 92       	push	r12
     968:	df 92       	push	r13
     96a:	ef 92       	push	r14
     96c:	ff 92       	push	r15
     96e:	0f 93       	push	r16
     970:	1f 93       	push	r17
     972:	cf 93       	push	r28
     974:	df 93       	push	r29
// Preinstantiate Objects //////////////////////////////////////////////////////

#if defined(UBRRH) && defined(UBRRL)
  HardwareSerial Serial(&rx_buffer, &tx_buffer, &UBRRH, &UBRRL, &UCSRA, &UCSRB, &UCSRC, &UDR, RXEN, TXEN, RXCIE, UDRIE, U2X);
#elif defined(UBRR0H) && defined(UBRR0L)
  HardwareSerial Serial(&rx_buffer, &tx_buffer, &UBRR0H, &UBRR0L, &UCSR0A, &UCSR0B, &UCSR0C, &UDR0, RXEN0, TXEN0, RXCIE0, UDRIE0, U2X0);
     976:	55 24       	eor	r5, r5
     978:	53 94       	inc	r5
     97a:	5f 92       	push	r5
     97c:	0f 2e       	mov	r0, r31
     97e:	f5 e0       	ldi	r31, 0x05	; 5
     980:	6f 2e       	mov	r6, r31
     982:	f0 2d       	mov	r31, r0
     984:	6f 92       	push	r6
     986:	0f 2e       	mov	r0, r31
     988:	f7 e0       	ldi	r31, 0x07	; 7
     98a:	7f 2e       	mov	r7, r31
     98c:	f0 2d       	mov	r31, r0
     98e:	7f 92       	push	r7
     990:	d3 e0       	ldi	r29, 0x03	; 3
     992:	df 93       	push	r29
     994:	c4 e0       	ldi	r28, 0x04	; 4
     996:	cf 93       	push	r28
     998:	0f 2e       	mov	r0, r31
     99a:	f6 ec       	ldi	r31, 0xC6	; 198
     99c:	8f 2e       	mov	r8, r31
     99e:	91 2c       	mov	r9, r1
     9a0:	f0 2d       	mov	r31, r0
     9a2:	0f 2e       	mov	r0, r31
     9a4:	f2 ec       	ldi	r31, 0xC2	; 194
     9a6:	af 2e       	mov	r10, r31
     9a8:	b1 2c       	mov	r11, r1
     9aa:	f0 2d       	mov	r31, r0
     9ac:	0f 2e       	mov	r0, r31
     9ae:	f1 ec       	ldi	r31, 0xC1	; 193
     9b0:	cf 2e       	mov	r12, r31
     9b2:	d1 2c       	mov	r13, r1
     9b4:	f0 2d       	mov	r31, r0
     9b6:	0f 2e       	mov	r0, r31
     9b8:	f0 ec       	ldi	r31, 0xC0	; 192
     9ba:	ef 2e       	mov	r14, r31
     9bc:	f1 2c       	mov	r15, r1
     9be:	f0 2d       	mov	r31, r0
     9c0:	04 ec       	ldi	r16, 0xC4	; 196
     9c2:	10 e0       	ldi	r17, 0x00	; 0
     9c4:	25 ec       	ldi	r18, 0xC5	; 197
     9c6:	30 e0       	ldi	r19, 0x00	; 0
     9c8:	48 e4       	ldi	r20, 0x48	; 72
     9ca:	54 e0       	ldi	r21, 0x04	; 4
     9cc:	6c e8       	ldi	r22, 0x8C	; 140
     9ce:	74 e0       	ldi	r23, 0x04	; 4
     9d0:	8e e8       	ldi	r24, 0x8E	; 142
     9d2:	92 e0       	ldi	r25, 0x02	; 2
     9d4:	f8 de       	rcall	.-528    	; 0x7c6 <_ZN14HardwareSerialC1EP11ring_bufferS1_PVhS3_S3_S3_S3_S3_hhhhh>
#else
  #error no serial port defined  (port 0)
#endif

#if defined(UBRR1H)
  HardwareSerial Serial1(&rx_buffer1, &tx_buffer1, &UBRR1H, &UBRR1L, &UCSR1A, &UCSR1B, &UCSR1C, &UDR1, RXEN1, TXEN1, RXCIE1, UDRIE1, U2X1);
     9d6:	5f 92       	push	r5
     9d8:	6f 92       	push	r6
     9da:	7f 92       	push	r7
     9dc:	df 93       	push	r29
     9de:	cf 93       	push	r28
     9e0:	0f 2e       	mov	r0, r31
     9e2:	fe ec       	ldi	r31, 0xCE	; 206
     9e4:	8f 2e       	mov	r8, r31
     9e6:	91 2c       	mov	r9, r1
     9e8:	f0 2d       	mov	r31, r0
     9ea:	0f 2e       	mov	r0, r31
     9ec:	fa ec       	ldi	r31, 0xCA	; 202
     9ee:	af 2e       	mov	r10, r31
     9f0:	b1 2c       	mov	r11, r1
     9f2:	f0 2d       	mov	r31, r0
     9f4:	0f 2e       	mov	r0, r31
     9f6:	f9 ec       	ldi	r31, 0xC9	; 201
     9f8:	cf 2e       	mov	r12, r31
     9fa:	d1 2c       	mov	r13, r1
     9fc:	f0 2d       	mov	r31, r0
     9fe:	0f 2e       	mov	r0, r31
     a00:	f8 ec       	ldi	r31, 0xC8	; 200
     a02:	ef 2e       	mov	r14, r31
     a04:	f1 2c       	mov	r15, r1
     a06:	f0 2d       	mov	r31, r0
     a08:	0c ec       	ldi	r16, 0xCC	; 204
     a0a:	10 e0       	ldi	r17, 0x00	; 0
     a0c:	2d ec       	ldi	r18, 0xCD	; 205
     a0e:	30 e0       	ldi	r19, 0x00	; 0
     a10:	40 ec       	ldi	r20, 0xC0	; 192
     a12:	53 e0       	ldi	r21, 0x03	; 3
     a14:	64 e0       	ldi	r22, 0x04	; 4
     a16:	74 e0       	ldi	r23, 0x04	; 4
     a18:	8c e6       	ldi	r24, 0x6C	; 108
     a1a:	92 e0       	ldi	r25, 0x02	; 2
     a1c:	d4 de       	rcall	.-600    	; 0x7c6 <_ZN14HardwareSerialC1EP11ring_bufferS1_PVhS3_S3_S3_S3_S3_hhhhh>
#endif
#if defined(UBRR2H)
  HardwareSerial Serial2(&rx_buffer2, &tx_buffer2, &UBRR2H, &UBRR2L, &UCSR2A, &UCSR2B, &UCSR2C, &UDR2, RXEN2, TXEN2, RXCIE2, UDRIE2, U2X2);
     a1e:	5f 92       	push	r5
     a20:	6f 92       	push	r6
     a22:	7f 92       	push	r7
     a24:	df 93       	push	r29
     a26:	cf 93       	push	r28
     a28:	0f 2e       	mov	r0, r31
     a2a:	f6 ed       	ldi	r31, 0xD6	; 214
     a2c:	8f 2e       	mov	r8, r31
     a2e:	91 2c       	mov	r9, r1
     a30:	f0 2d       	mov	r31, r0
     a32:	0f 2e       	mov	r0, r31
     a34:	f2 ed       	ldi	r31, 0xD2	; 210
     a36:	af 2e       	mov	r10, r31
     a38:	b1 2c       	mov	r11, r1
     a3a:	f0 2d       	mov	r31, r0
     a3c:	0f 2e       	mov	r0, r31
     a3e:	f1 ed       	ldi	r31, 0xD1	; 209
     a40:	cf 2e       	mov	r12, r31
     a42:	d1 2c       	mov	r13, r1
     a44:	f0 2d       	mov	r31, r0
     a46:	0f 2e       	mov	r0, r31
     a48:	f0 ed       	ldi	r31, 0xD0	; 208
     a4a:	ef 2e       	mov	r14, r31
     a4c:	f1 2c       	mov	r15, r1
     a4e:	f0 2d       	mov	r31, r0
     a50:	04 ed       	ldi	r16, 0xD4	; 212
     a52:	10 e0       	ldi	r17, 0x00	; 0
     a54:	25 ed       	ldi	r18, 0xD5	; 213
     a56:	30 e0       	ldi	r19, 0x00	; 0
     a58:	48 e3       	ldi	r20, 0x38	; 56
     a5a:	53 e0       	ldi	r21, 0x03	; 3
     a5c:	6c e7       	ldi	r22, 0x7C	; 124
     a5e:	73 e0       	ldi	r23, 0x03	; 3
     a60:	8a e4       	ldi	r24, 0x4A	; 74
     a62:	92 e0       	ldi	r25, 0x02	; 2
     a64:	b0 de       	rcall	.-672    	; 0x7c6 <_ZN14HardwareSerialC1EP11ring_bufferS1_PVhS3_S3_S3_S3_S3_hhhhh>
#endif
#if defined(UBRR3H)
  HardwareSerial Serial3(&rx_buffer3, &tx_buffer3, &UBRR3H, &UBRR3L, &UCSR3A, &UCSR3B, &UCSR3C, &UDR3, RXEN3, TXEN3, RXCIE3, UDRIE3, U2X3);
     a66:	5f 92       	push	r5
     a68:	6f 92       	push	r6
     a6a:	7f 92       	push	r7
     a6c:	df 93       	push	r29
     a6e:	cf 93       	push	r28
     a70:	0f 2e       	mov	r0, r31
     a72:	f6 e3       	ldi	r31, 0x36	; 54
     a74:	8f 2e       	mov	r8, r31
     a76:	99 24       	eor	r9, r9
     a78:	93 94       	inc	r9
     a7a:	f0 2d       	mov	r31, r0
     a7c:	0f 2e       	mov	r0, r31
     a7e:	f2 e3       	ldi	r31, 0x32	; 50
     a80:	af 2e       	mov	r10, r31
     a82:	bb 24       	eor	r11, r11
     a84:	b3 94       	inc	r11
     a86:	f0 2d       	mov	r31, r0
     a88:	0f 2e       	mov	r0, r31
     a8a:	f1 e3       	ldi	r31, 0x31	; 49
     a8c:	cf 2e       	mov	r12, r31
     a8e:	dd 24       	eor	r13, r13
     a90:	d3 94       	inc	r13
     a92:	f0 2d       	mov	r31, r0
     a94:	0f 2e       	mov	r0, r31
     a96:	f0 e3       	ldi	r31, 0x30	; 48
     a98:	ef 2e       	mov	r14, r31
     a9a:	ff 24       	eor	r15, r15
     a9c:	f3 94       	inc	r15
     a9e:	f0 2d       	mov	r31, r0
     aa0:	04 e3       	ldi	r16, 0x34	; 52
     aa2:	11 e0       	ldi	r17, 0x01	; 1
     aa4:	25 e3       	ldi	r18, 0x35	; 53
     aa6:	31 e0       	ldi	r19, 0x01	; 1
     aa8:	40 eb       	ldi	r20, 0xB0	; 176
     aaa:	52 e0       	ldi	r21, 0x02	; 2
     aac:	64 ef       	ldi	r22, 0xF4	; 244
     aae:	72 e0       	ldi	r23, 0x02	; 2
     ab0:	88 e2       	ldi	r24, 0x28	; 40
     ab2:	92 e0       	ldi	r25, 0x02	; 2
     ab4:	88 de       	rcall	.-752    	; 0x7c6 <_ZN14HardwareSerialC1EP11ring_bufferS1_PVhS3_S3_S3_S3_S3_hhhhh>
     ab6:	8d b7       	in	r24, 0x3d	; 61
     ab8:	9e b7       	in	r25, 0x3e	; 62
     aba:	44 96       	adiw	r24, 0x14	; 20
     abc:	0f b6       	in	r0, 0x3f	; 63
     abe:	f8 94       	cli
     ac0:	9e bf       	out	0x3e, r25	; 62
     ac2:	0f be       	out	0x3f, r0	; 63
     ac4:	8d bf       	out	0x3d, r24	; 61
     ac6:	df 91       	pop	r29
     ac8:	cf 91       	pop	r28
     aca:	1f 91       	pop	r17
     acc:	0f 91       	pop	r16
     ace:	ff 90       	pop	r15
     ad0:	ef 90       	pop	r14
     ad2:	df 90       	pop	r13
     ad4:	cf 90       	pop	r12
     ad6:	bf 90       	pop	r11
     ad8:	af 90       	pop	r10
     ada:	9f 90       	pop	r9
     adc:	8f 90       	pop	r8
     ade:	7f 90       	pop	r7
     ae0:	6f 90       	pop	r6
     ae2:	5f 90       	pop	r5
     ae4:	08 95       	ret

00000ae6 <_ZN5Print5writeEPKhj>:

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
     ae6:	cf 92       	push	r12
     ae8:	df 92       	push	r13
     aea:	ef 92       	push	r14
     aec:	ff 92       	push	r15
     aee:	0f 93       	push	r16
     af0:	1f 93       	push	r17
     af2:	cf 93       	push	r28
     af4:	df 93       	push	r29
     af6:	6c 01       	movw	r12, r24
  size_t n = 0;
  while (size--) {
     af8:	41 15       	cp	r20, r1
     afa:	51 05       	cpc	r21, r1
     afc:	b1 f0       	breq	.+44     	; 0xb2a <_ZN5Print5writeEPKhj+0x44>
     afe:	06 2f       	mov	r16, r22
     b00:	17 2f       	mov	r17, r23
     b02:	ea 01       	movw	r28, r20
// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
  size_t n = 0;
     b04:	e1 2c       	mov	r14, r1
     b06:	f1 2c       	mov	r15, r1
  while (size--) {
    n += write(*buffer++);
     b08:	d8 01       	movw	r26, r16
     b0a:	6d 91       	ld	r22, X+
     b0c:	8d 01       	movw	r16, r26
     b0e:	d6 01       	movw	r26, r12
     b10:	ed 91       	ld	r30, X+
     b12:	fc 91       	ld	r31, X
     b14:	01 90       	ld	r0, Z+
     b16:	f0 81       	ld	r31, Z
     b18:	e0 2d       	mov	r30, r0
     b1a:	c6 01       	movw	r24, r12
     b1c:	19 95       	eicall
     b1e:	e8 0e       	add	r14, r24
     b20:	f9 1e       	adc	r15, r25
     b22:	21 97       	sbiw	r28, 0x01	; 1

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
  size_t n = 0;
  while (size--) {
     b24:	20 97       	sbiw	r28, 0x00	; 0
     b26:	81 f7       	brne	.-32     	; 0xb08 <_ZN5Print5writeEPKhj+0x22>
     b28:	02 c0       	rjmp	.+4      	; 0xb2e <_ZN5Print5writeEPKhj+0x48>
// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
  size_t n = 0;
     b2a:	e1 2c       	mov	r14, r1
     b2c:	f1 2c       	mov	r15, r1
  while (size--) {
    n += write(*buffer++);
  }
  return n;
}
     b2e:	c7 01       	movw	r24, r14
     b30:	df 91       	pop	r29
     b32:	cf 91       	pop	r28
     b34:	1f 91       	pop	r17
     b36:	0f 91       	pop	r16
     b38:	ff 90       	pop	r15
     b3a:	ef 90       	pop	r14
     b3c:	df 90       	pop	r13
     b3e:	cf 90       	pop	r12
     b40:	08 95       	ret

00000b42 <__vector_23>:
	// we can't subtract any more than this or we'd overflow w/ small delays.
	us--;
#endif

	// busy wait
	__asm__ __volatile__ (
     b42:	1f 92       	push	r1
     b44:	0f 92       	push	r0
     b46:	0f b6       	in	r0, 0x3f	; 63
     b48:	0f 92       	push	r0
     b4a:	11 24       	eor	r1, r1
     b4c:	2f 93       	push	r18
     b4e:	3f 93       	push	r19
     b50:	8f 93       	push	r24
     b52:	9f 93       	push	r25
     b54:	af 93       	push	r26
     b56:	bf 93       	push	r27
     b58:	80 91 d1 04 	lds	r24, 0x04D1
     b5c:	90 91 d2 04 	lds	r25, 0x04D2
     b60:	a0 91 d3 04 	lds	r26, 0x04D3
     b64:	b0 91 d4 04 	lds	r27, 0x04D4
     b68:	30 91 d0 04 	lds	r19, 0x04D0
     b6c:	23 e0       	ldi	r18, 0x03	; 3
     b6e:	23 0f       	add	r18, r19
     b70:	2d 37       	cpi	r18, 0x7D	; 125
     b72:	20 f4       	brcc	.+8      	; 0xb7c <__vector_23+0x3a>
     b74:	01 96       	adiw	r24, 0x01	; 1
     b76:	a1 1d       	adc	r26, r1
     b78:	b1 1d       	adc	r27, r1
     b7a:	05 c0       	rjmp	.+10     	; 0xb86 <__vector_23+0x44>
     b7c:	26 e8       	ldi	r18, 0x86	; 134
     b7e:	23 0f       	add	r18, r19
     b80:	02 96       	adiw	r24, 0x02	; 2
     b82:	a1 1d       	adc	r26, r1
     b84:	b1 1d       	adc	r27, r1
     b86:	20 93 d0 04 	sts	0x04D0, r18
     b8a:	80 93 d1 04 	sts	0x04D1, r24
     b8e:	90 93 d2 04 	sts	0x04D2, r25
     b92:	a0 93 d3 04 	sts	0x04D3, r26
     b96:	b0 93 d4 04 	sts	0x04D4, r27
     b9a:	80 91 d5 04 	lds	r24, 0x04D5
     b9e:	90 91 d6 04 	lds	r25, 0x04D6
     ba2:	a0 91 d7 04 	lds	r26, 0x04D7
     ba6:	b0 91 d8 04 	lds	r27, 0x04D8
     baa:	01 96       	adiw	r24, 0x01	; 1
     bac:	a1 1d       	adc	r26, r1
     bae:	b1 1d       	adc	r27, r1
     bb0:	80 93 d5 04 	sts	0x04D5, r24
     bb4:	90 93 d6 04 	sts	0x04D6, r25
     bb8:	a0 93 d7 04 	sts	0x04D7, r26
     bbc:	b0 93 d8 04 	sts	0x04D8, r27
     bc0:	bf 91       	pop	r27
     bc2:	af 91       	pop	r26
     bc4:	9f 91       	pop	r25
     bc6:	8f 91       	pop	r24
     bc8:	3f 91       	pop	r19
     bca:	2f 91       	pop	r18
     bcc:	0f 90       	pop	r0
     bce:	0f be       	out	0x3f, r0	; 63
     bd0:	0f 90       	pop	r0
     bd2:	1f 90       	pop	r1
     bd4:	18 95       	reti

00000bd6 <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
     bd6:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
     bd8:	84 b5       	in	r24, 0x24	; 36
     bda:	82 60       	ori	r24, 0x02	; 2
     bdc:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
     bde:	84 b5       	in	r24, 0x24	; 36
     be0:	81 60       	ori	r24, 0x01	; 1
     be2:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
     be4:	85 b5       	in	r24, 0x25	; 37
     be6:	82 60       	ori	r24, 0x02	; 2
     be8:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
     bea:	85 b5       	in	r24, 0x25	; 37
     bec:	81 60       	ori	r24, 0x01	; 1
     bee:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
     bf0:	ee e6       	ldi	r30, 0x6E	; 110
     bf2:	f0 e0       	ldi	r31, 0x00	; 0
     bf4:	80 81       	ld	r24, Z
     bf6:	81 60       	ori	r24, 0x01	; 1
     bf8:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
     bfa:	e1 e8       	ldi	r30, 0x81	; 129
     bfc:	f0 e0       	ldi	r31, 0x00	; 0
     bfe:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
     c00:	80 81       	ld	r24, Z
     c02:	82 60       	ori	r24, 0x02	; 2
     c04:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
     c06:	80 81       	ld	r24, Z
     c08:	81 60       	ori	r24, 0x01	; 1
     c0a:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
     c0c:	e0 e8       	ldi	r30, 0x80	; 128
     c0e:	f0 e0       	ldi	r31, 0x00	; 0
     c10:	80 81       	ld	r24, Z
     c12:	81 60       	ori	r24, 0x01	; 1
     c14:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
     c16:	e1 eb       	ldi	r30, 0xB1	; 177
     c18:	f0 e0       	ldi	r31, 0x00	; 0
     c1a:	80 81       	ld	r24, Z
     c1c:	84 60       	ori	r24, 0x04	; 4
     c1e:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
     c20:	e0 eb       	ldi	r30, 0xB0	; 176
     c22:	f0 e0       	ldi	r31, 0x00	; 0
     c24:	80 81       	ld	r24, Z
     c26:	81 60       	ori	r24, 0x01	; 1
     c28:	80 83       	st	Z, r24
#else
	#warning Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
	sbi(TCCR3B, CS31);		// set timer 3 prescale factor to 64
     c2a:	e1 e9       	ldi	r30, 0x91	; 145
     c2c:	f0 e0       	ldi	r31, 0x00	; 0
     c2e:	80 81       	ld	r24, Z
     c30:	82 60       	ori	r24, 0x02	; 2
     c32:	80 83       	st	Z, r24
	sbi(TCCR3B, CS30);
     c34:	80 81       	ld	r24, Z
     c36:	81 60       	ori	r24, 0x01	; 1
     c38:	80 83       	st	Z, r24
	sbi(TCCR3A, WGM30);		// put timer 3 in 8-bit phase correct pwm mode
     c3a:	e0 e9       	ldi	r30, 0x90	; 144
     c3c:	f0 e0       	ldi	r31, 0x00	; 0
     c3e:	80 81       	ld	r24, Z
     c40:	81 60       	ori	r24, 0x01	; 1
     c42:	80 83       	st	Z, r24
	sbi(TCCR4D, WGM40);		// put timer 4 in phase- and frequency-correct PWM mode	
	sbi(TCCR4A, PWM4A);		// enable PWM mode for comparator OCR4A
	sbi(TCCR4C, PWM4D);		// enable PWM mode for comparator OCR4D
#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */
#if defined(TCCR4B) && defined(CS41) && defined(WGM40)
	sbi(TCCR4B, CS41);		// set timer 4 prescale factor to 64
     c44:	e1 ea       	ldi	r30, 0xA1	; 161
     c46:	f0 e0       	ldi	r31, 0x00	; 0
     c48:	80 81       	ld	r24, Z
     c4a:	82 60       	ori	r24, 0x02	; 2
     c4c:	80 83       	st	Z, r24
	sbi(TCCR4B, CS40);
     c4e:	80 81       	ld	r24, Z
     c50:	81 60       	ori	r24, 0x01	; 1
     c52:	80 83       	st	Z, r24
	sbi(TCCR4A, WGM40);		// put timer 4 in 8-bit phase correct pwm mode
     c54:	e0 ea       	ldi	r30, 0xA0	; 160
     c56:	f0 e0       	ldi	r31, 0x00	; 0
     c58:	80 81       	ld	r24, Z
     c5a:	81 60       	ori	r24, 0x01	; 1
     c5c:	80 83       	st	Z, r24
#endif
#endif /* end timer4 block for ATMEGA1280/2560 and similar */	

#if defined(TCCR5B) && defined(CS51) && defined(WGM50)
	sbi(TCCR5B, CS51);		// set timer 5 prescale factor to 64
     c5e:	e1 e2       	ldi	r30, 0x21	; 33
     c60:	f1 e0       	ldi	r31, 0x01	; 1
     c62:	80 81       	ld	r24, Z
     c64:	82 60       	ori	r24, 0x02	; 2
     c66:	80 83       	st	Z, r24
	sbi(TCCR5B, CS50);
     c68:	80 81       	ld	r24, Z
     c6a:	81 60       	ori	r24, 0x01	; 1
     c6c:	80 83       	st	Z, r24
	sbi(TCCR5A, WGM50);		// put timer 5 in 8-bit phase correct pwm mode
     c6e:	e0 e2       	ldi	r30, 0x20	; 32
     c70:	f1 e0       	ldi	r31, 0x01	; 1
     c72:	80 81       	ld	r24, Z
     c74:	81 60       	ori	r24, 0x01	; 1
     c76:	80 83       	st	Z, r24
#if defined(ADCSRA)
	// set a2d prescale factor to 128
	// 16 MHz / 128 = 125 KHz, inside the desired 50-200 KHz range.
	// XXX: this will not work properly for other clock speeds, and
	// this code should use F_CPU to determine the prescale factor.
	sbi(ADCSRA, ADPS2);
     c78:	ea e7       	ldi	r30, 0x7A	; 122
     c7a:	f0 e0       	ldi	r31, 0x00	; 0
     c7c:	80 81       	ld	r24, Z
     c7e:	84 60       	ori	r24, 0x04	; 4
     c80:	80 83       	st	Z, r24
	sbi(ADCSRA, ADPS1);
     c82:	80 81       	ld	r24, Z
     c84:	82 60       	ori	r24, 0x02	; 2
     c86:	80 83       	st	Z, r24
	sbi(ADCSRA, ADPS0);
     c88:	80 81       	ld	r24, Z
     c8a:	81 60       	ori	r24, 0x01	; 1
     c8c:	80 83       	st	Z, r24

	// enable a2d conversions
	sbi(ADCSRA, ADEN);
     c8e:	80 81       	ld	r24, Z
     c90:	80 68       	ori	r24, 0x80	; 128
     c92:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
     c94:	10 92 c1 00 	sts	0x00C1, r1
     c98:	08 95       	ret

00000c9a <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	fc 01       	movw	r30, r24
     c9e:	31 97       	sbiw	r30, 0x01	; 1
     ca0:	e1 31       	cpi	r30, 0x11	; 17
     ca2:	f1 05       	cpc	r31, r1
     ca4:	08 f0       	brcs	.+2      	; 0xca8 <turnOffPWM+0xe>
     ca6:	59 c0       	rjmp	.+178    	; 0xd5a <turnOffPWM+0xc0>
     ca8:	ee 58       	subi	r30, 0x8E	; 142
     caa:	ff 4f       	sbci	r31, 0xFF	; 255
     cac:	0c 94 df 0e 	jmp	0x1dbe	; 0x1dbe <__tablejump2__>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
     cb0:	e0 e8       	ldi	r30, 0x80	; 128
     cb2:	f0 e0       	ldi	r31, 0x00	; 0
     cb4:	80 81       	ld	r24, Z
     cb6:	8f 77       	andi	r24, 0x7F	; 127
     cb8:	80 83       	st	Z, r24
     cba:	08 95       	ret
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
     cbc:	e0 e8       	ldi	r30, 0x80	; 128
     cbe:	f0 e0       	ldi	r31, 0x00	; 0
     cc0:	80 81       	ld	r24, Z
     cc2:	8f 7d       	andi	r24, 0xDF	; 223
     cc4:	80 83       	st	Z, r24
     cc6:	08 95       	ret
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
     cc8:	84 b5       	in	r24, 0x24	; 36
     cca:	8f 77       	andi	r24, 0x7F	; 127
     ccc:	84 bd       	out	0x24, r24	; 36
     cce:	08 95       	ret
		#endif
		
		#if defined(TIMER0B) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
     cd0:	84 b5       	in	r24, 0x24	; 36
     cd2:	8f 7d       	andi	r24, 0xDF	; 223
     cd4:	84 bd       	out	0x24, r24	; 36
     cd6:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
     cd8:	e0 eb       	ldi	r30, 0xB0	; 176
     cda:	f0 e0       	ldi	r31, 0x00	; 0
     cdc:	80 81       	ld	r24, Z
     cde:	8f 77       	andi	r24, 0x7F	; 127
     ce0:	80 83       	st	Z, r24
     ce2:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
     ce4:	e0 eb       	ldi	r30, 0xB0	; 176
     ce6:	f0 e0       	ldi	r31, 0x00	; 0
     ce8:	80 81       	ld	r24, Z
     cea:	8f 7d       	andi	r24, 0xDF	; 223
     cec:	80 83       	st	Z, r24
     cee:	08 95       	ret
		#endif
		
		#if defined(TCCR3A) && defined(COM3A1)
		case  TIMER3A:  cbi(TCCR3A, COM3A1);    break;
     cf0:	e0 e9       	ldi	r30, 0x90	; 144
     cf2:	f0 e0       	ldi	r31, 0x00	; 0
     cf4:	80 81       	ld	r24, Z
     cf6:	8f 77       	andi	r24, 0x7F	; 127
     cf8:	80 83       	st	Z, r24
     cfa:	08 95       	ret
		#endif
		#if defined(TCCR3A) && defined(COM3B1)
		case  TIMER3B:  cbi(TCCR3A, COM3B1);    break;
     cfc:	e0 e9       	ldi	r30, 0x90	; 144
     cfe:	f0 e0       	ldi	r31, 0x00	; 0
     d00:	80 81       	ld	r24, Z
     d02:	8f 7d       	andi	r24, 0xDF	; 223
     d04:	80 83       	st	Z, r24
     d06:	08 95       	ret
		#endif
		#if defined(TCCR3A) && defined(COM3C1)
		case  TIMER3C:  cbi(TCCR3A, COM3C1);    break;
     d08:	e0 e9       	ldi	r30, 0x90	; 144
     d0a:	f0 e0       	ldi	r31, 0x00	; 0
     d0c:	80 81       	ld	r24, Z
     d0e:	87 7f       	andi	r24, 0xF7	; 247
     d10:	80 83       	st	Z, r24
     d12:	08 95       	ret
		#endif

		#if defined(TCCR4A) && defined(COM4A1)
		case  TIMER4A:  cbi(TCCR4A, COM4A1);    break;
     d14:	e0 ea       	ldi	r30, 0xA0	; 160
     d16:	f0 e0       	ldi	r31, 0x00	; 0
     d18:	80 81       	ld	r24, Z
     d1a:	8f 77       	andi	r24, 0x7F	; 127
     d1c:	80 83       	st	Z, r24
     d1e:	08 95       	ret
		#endif					
		#if defined(TCCR4A) && defined(COM4B1)
		case  TIMER4B:  cbi(TCCR4A, COM4B1);    break;
     d20:	e0 ea       	ldi	r30, 0xA0	; 160
     d22:	f0 e0       	ldi	r31, 0x00	; 0
     d24:	80 81       	ld	r24, Z
     d26:	8f 7d       	andi	r24, 0xDF	; 223
     d28:	80 83       	st	Z, r24
     d2a:	08 95       	ret
		#endif
		#if defined(TCCR4A) && defined(COM4C1)
		case  TIMER4C:  cbi(TCCR4A, COM4C1);    break;
     d2c:	e0 ea       	ldi	r30, 0xA0	; 160
     d2e:	f0 e0       	ldi	r31, 0x00	; 0
     d30:	80 81       	ld	r24, Z
     d32:	87 7f       	andi	r24, 0xF7	; 247
     d34:	80 83       	st	Z, r24
     d36:	08 95       	ret
		#if defined(TCCR4C) && defined(COM4D1)
		case TIMER4D:	cbi(TCCR4C, COM4D1);	break;
		#endif			
			
		#if defined(TCCR5A)
		case  TIMER5A:  cbi(TCCR5A, COM5A1);    break;
     d38:	e0 e2       	ldi	r30, 0x20	; 32
     d3a:	f1 e0       	ldi	r31, 0x01	; 1
     d3c:	80 81       	ld	r24, Z
     d3e:	8f 77       	andi	r24, 0x7F	; 127
     d40:	80 83       	st	Z, r24
     d42:	08 95       	ret
		case  TIMER5B:  cbi(TCCR5A, COM5B1);    break;
     d44:	e0 e2       	ldi	r30, 0x20	; 32
     d46:	f1 e0       	ldi	r31, 0x01	; 1
     d48:	80 81       	ld	r24, Z
     d4a:	8f 7d       	andi	r24, 0xDF	; 223
     d4c:	80 83       	st	Z, r24
     d4e:	08 95       	ret
		case  TIMER5C:  cbi(TCCR5A, COM5C1);    break;
     d50:	e0 e2       	ldi	r30, 0x20	; 32
     d52:	f1 e0       	ldi	r31, 0x01	; 1
     d54:	80 81       	ld	r24, Z
     d56:	87 7f       	andi	r24, 0xF7	; 247
     d58:	80 83       	st	Z, r24
     d5a:	08 95       	ret

00000d5c <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
     d5c:	cf 93       	push	r28
     d5e:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	fc 01       	movw	r30, r24
     d64:	e0 5a       	subi	r30, 0xA0	; 160
     d66:	fe 4f       	sbci	r31, 0xFE	; 254
     d68:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
     d6a:	fc 01       	movw	r30, r24
     d6c:	ea 55       	subi	r30, 0x5A	; 90
     d6e:	fe 4f       	sbci	r31, 0xFE	; 254
     d70:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
     d72:	88 23       	and	r24, r24
     d74:	71 f1       	breq	.+92     	; 0xdd2 <pinMode+0x76>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	88 0f       	add	r24, r24
     d7a:	99 1f       	adc	r25, r25
     d7c:	fc 01       	movw	r30, r24
     d7e:	ea 5f       	subi	r30, 0xFA	; 250
     d80:	fd 4f       	sbci	r31, 0xFD	; 253
     d82:	a5 91       	lpm	r26, Z+
     d84:	b4 91       	lpm	r27, Z
	out = portOutputRegister(port);
     d86:	84 51       	subi	r24, 0x14	; 20
     d88:	9e 4f       	sbci	r25, 0xFE	; 254
     d8a:	fc 01       	movw	r30, r24
     d8c:	c5 91       	lpm	r28, Z+
     d8e:	d4 91       	lpm	r29, Z

	if (mode == INPUT) { 
     d90:	61 11       	cpse	r22, r1
     d92:	0b c0       	rjmp	.+22     	; 0xdaa <pinMode+0x4e>
		uint8_t oldSREG = SREG;
     d94:	8f b7       	in	r24, 0x3f	; 63
                cli();
     d96:	f8 94       	cli
		*reg &= ~bit;
     d98:	9c 91       	ld	r25, X
     d9a:	20 95       	com	r18
     d9c:	92 23       	and	r25, r18
     d9e:	9c 93       	st	X, r25
		*out &= ~bit;
     da0:	e8 81       	ld	r30, Y
     da2:	2e 23       	and	r18, r30
     da4:	28 83       	st	Y, r18
		SREG = oldSREG;
     da6:	8f bf       	out	0x3f, r24	; 63
     da8:	14 c0       	rjmp	.+40     	; 0xdd2 <pinMode+0x76>
	} else if (mode == INPUT_PULLUP) {
     daa:	62 30       	cpi	r22, 0x02	; 2
     dac:	61 f4       	brne	.+24     	; 0xdc6 <pinMode+0x6a>
		uint8_t oldSREG = SREG;
     dae:	8f b7       	in	r24, 0x3f	; 63
                cli();
     db0:	f8 94       	cli
		*reg &= ~bit;
     db2:	3c 91       	ld	r19, X
     db4:	92 2f       	mov	r25, r18
     db6:	90 95       	com	r25
     db8:	93 23       	and	r25, r19
     dba:	9c 93       	st	X, r25
		*out |= bit;
     dbc:	e8 81       	ld	r30, Y
     dbe:	2e 2b       	or	r18, r30
     dc0:	28 83       	st	Y, r18
		SREG = oldSREG;
     dc2:	8f bf       	out	0x3f, r24	; 63
     dc4:	06 c0       	rjmp	.+12     	; 0xdd2 <pinMode+0x76>
	} else {
		uint8_t oldSREG = SREG;
     dc6:	8f b7       	in	r24, 0x3f	; 63
                cli();
     dc8:	f8 94       	cli
		*reg |= bit;
     dca:	ec 91       	ld	r30, X
     dcc:	2e 2b       	or	r18, r30
     dce:	2c 93       	st	X, r18
		SREG = oldSREG;
     dd0:	8f bf       	out	0x3f, r24	; 63
	}
}
     dd2:	df 91       	pop	r29
     dd4:	cf 91       	pop	r28
     dd6:	08 95       	ret

00000dd8 <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
     dd8:	1f 93       	push	r17
     dda:	cf 93       	push	r28
     ddc:	df 93       	push	r29
     dde:	c6 2f       	mov	r28, r22
	uint8_t timer = digitalPinToTimer(pin);
     de0:	28 2f       	mov	r18, r24
     de2:	30 e0       	ldi	r19, 0x00	; 0
     de4:	f9 01       	movw	r30, r18
     de6:	e6 5e       	subi	r30, 0xE6	; 230
     de8:	fe 4f       	sbci	r31, 0xFE	; 254
     dea:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
     dec:	f9 01       	movw	r30, r18
     dee:	e0 5a       	subi	r30, 0xA0	; 160
     df0:	fe 4f       	sbci	r31, 0xFE	; 254
     df2:	14 91       	lpm	r17, Z
	uint8_t port = digitalPinToPort(pin);
     df4:	f9 01       	movw	r30, r18
     df6:	ea 55       	subi	r30, 0x5A	; 90
     df8:	fe 4f       	sbci	r31, 0xFE	; 254
     dfa:	d4 91       	lpm	r29, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
     dfc:	dd 23       	and	r29, r29
     dfe:	c1 f0       	breq	.+48     	; 0xe30 <digitalWrite+0x58>

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
     e00:	81 11       	cpse	r24, r1
     e02:	4b df       	rcall	.-362    	; 0xc9a <turnOffPWM>

	out = portOutputRegister(port);
     e04:	2d 2f       	mov	r18, r29
     e06:	30 e0       	ldi	r19, 0x00	; 0
     e08:	f9 01       	movw	r30, r18
     e0a:	ee 0f       	add	r30, r30
     e0c:	ff 1f       	adc	r31, r31
     e0e:	e4 51       	subi	r30, 0x14	; 20
     e10:	fe 4f       	sbci	r31, 0xFE	; 254
     e12:	a5 91       	lpm	r26, Z+
     e14:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
     e16:	8f b7       	in	r24, 0x3f	; 63
	cli();
     e18:	f8 94       	cli

	if (val == LOW) {
     e1a:	c1 11       	cpse	r28, r1
     e1c:	05 c0       	rjmp	.+10     	; 0xe28 <digitalWrite+0x50>
		*out &= ~bit;
     e1e:	ec 91       	ld	r30, X
     e20:	10 95       	com	r17
     e22:	1e 23       	and	r17, r30
     e24:	1c 93       	st	X, r17
     e26:	03 c0       	rjmp	.+6      	; 0xe2e <digitalWrite+0x56>
	} else {
		*out |= bit;
     e28:	ec 91       	ld	r30, X
     e2a:	1e 2b       	or	r17, r30
     e2c:	1c 93       	st	X, r17
	}

	SREG = oldSREG;
     e2e:	8f bf       	out	0x3f, r24	; 63
}
     e30:	df 91       	pop	r29
     e32:	cf 91       	pop	r28
     e34:	1f 91       	pop	r17
     e36:	08 95       	ret

00000e38 <_ZN14robot_tag_game3gunC1Ev>:
    else
        send_lo();
}

void gun::run()
{
     e38:	fc 01       	movw	r30, r24
     e3a:	11 82       	std	Z+1, r1	; 0x01
     e3c:	10 82       	st	Z, r1
     e3e:	13 82       	std	Z+3, r1	; 0x03
     e40:	12 82       	std	Z+2, r1	; 0x02
     e42:	8a e7       	ldi	r24, 0x7A	; 122
     e44:	84 83       	std	Z+4, r24	; 0x04
     e46:	08 95       	ret

00000e48 <_ZN14robot_tag_game3gun4initEv>:
     e48:	cf 93       	push	r28
     e4a:	df 93       	push	r29
     e4c:	90 93 dc 04 	sts	0x04DC, r25
     e50:	80 93 db 04 	sts	0x04DB, r24
     e54:	61 e0       	ldi	r22, 0x01	; 1
     e56:	83 e0       	ldi	r24, 0x03	; 3
     e58:	81 df       	rcall	.-254    	; 0xd5c <pinMode>
     e5a:	a0 e9       	ldi	r26, 0x90	; 144
     e5c:	b0 e0       	ldi	r27, 0x00	; 0
     e5e:	1c 92       	st	X, r1
     e60:	e1 e9       	ldi	r30, 0x91	; 145
     e62:	f0 e0       	ldi	r31, 0x00	; 0
     e64:	10 82       	st	Z, r1
     e66:	c1 e7       	ldi	r28, 0x71	; 113
     e68:	d0 e0       	ldi	r29, 0x00	; 0
     e6a:	88 81       	ld	r24, Y
     e6c:	87 7f       	andi	r24, 0xF7	; 247
     e6e:	88 83       	st	Y, r24
     e70:	8c 91       	ld	r24, X
     e72:	83 60       	ori	r24, 0x03	; 3
     e74:	8c 93       	st	X, r24
     e76:	80 81       	ld	r24, Z
     e78:	88 61       	ori	r24, 0x18	; 24
     e7a:	80 83       	st	Z, r24
     e7c:	8c 91       	ld	r24, X
     e7e:	88 60       	ori	r24, 0x08	; 8
     e80:	8c 93       	st	X, r24
     e82:	80 81       	ld	r24, Z
     e84:	81 60       	ori	r24, 0x01	; 1
     e86:	80 83       	st	Z, r24
     e88:	85 ea       	ldi	r24, 0xA5	; 165
     e8a:	91 e0       	ldi	r25, 0x01	; 1
     e8c:	90 93 99 00 	sts	0x0099, r25
     e90:	80 93 98 00 	sts	0x0098, r24
     e94:	82 ed       	ldi	r24, 0xD2	; 210
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	90 93 9d 00 	sts	0x009D, r25
     e9c:	80 93 9c 00 	sts	0x009C, r24
     ea0:	a2 e7       	ldi	r26, 0x72	; 114
     ea2:	b0 e0       	ldi	r27, 0x00	; 0
     ea4:	1c 92       	st	X, r1
     ea6:	10 92 a0 00 	sts	0x00A0, r1
     eaa:	e1 ea       	ldi	r30, 0xA1	; 161
     eac:	f0 e0       	ldi	r31, 0x00	; 0
     eae:	10 82       	st	Z, r1
     eb0:	80 81       	ld	r24, Z
     eb2:	82 60       	ori	r24, 0x02	; 2
     eb4:	80 83       	st	Z, r24
     eb6:	80 81       	ld	r24, Z
     eb8:	81 60       	ori	r24, 0x01	; 1
     eba:	80 83       	st	Z, r24
     ebc:	80 91 a4 00 	lds	r24, 0x00A4
     ec0:	90 91 a5 00 	lds	r25, 0x00A5
     ec4:	86 50       	subi	r24, 0x06	; 6
     ec6:	9f 4f       	sbci	r25, 0xFF	; 255
     ec8:	90 93 a9 00 	sts	0x00A9, r25
     ecc:	80 93 a8 00 	sts	0x00A8, r24
     ed0:	82 e0       	ldi	r24, 0x02	; 2
     ed2:	89 bb       	out	0x19, r24	; 25
     ed4:	8c 91       	ld	r24, X
     ed6:	82 60       	ori	r24, 0x02	; 2
     ed8:	8c 93       	st	X, r24
     eda:	df 91       	pop	r29
     edc:	cf 91       	pop	r28
     ede:	08 95       	ret

00000ee0 <_ZN14robot_tag_game3gun7send_hiEv>:
     ee0:	e0 e9       	ldi	r30, 0x90	; 144
     ee2:	f0 e0       	ldi	r31, 0x00	; 0
     ee4:	80 81       	ld	r24, Z
     ee6:	88 60       	ori	r24, 0x08	; 8
     ee8:	80 83       	st	Z, r24
     eea:	61 e0       	ldi	r22, 0x01	; 1
     eec:	8a e0       	ldi	r24, 0x0A	; 10
     eee:	74 cf       	rjmp	.-280    	; 0xdd8 <digitalWrite>
     ef0:	08 95       	ret

00000ef2 <_ZN14robot_tag_game3gun7send_loEv>:
     ef2:	e0 e9       	ldi	r30, 0x90	; 144
     ef4:	f0 e0       	ldi	r31, 0x00	; 0
     ef6:	80 81       	ld	r24, Z
     ef8:	87 7f       	andi	r24, 0xF7	; 247
     efa:	80 83       	st	Z, r24
     efc:	60 e0       	ldi	r22, 0x00	; 0
     efe:	8a e0       	ldi	r24, 0x0A	; 10
     f00:	6b cf       	rjmp	.-298    	; 0xdd8 <digitalWrite>
     f02:	08 95       	ret

00000f04 <_ZN14robot_tag_game3gun9next_tickEv>:
     f04:	cf 93       	push	r28
     f06:	df 93       	push	r29
     f08:	ec 01       	movw	r28, r24
     f0a:	e0 91 00 02 	lds	r30, 0x0200
     f0e:	f0 91 01 02 	lds	r31, 0x0201
     f12:	80 91 d9 04 	lds	r24, 0x04D9
     f16:	90 91 da 04 	lds	r25, 0x04DA
     f1a:	e8 0f       	add	r30, r24
     f1c:	f9 1f       	adc	r31, r25
     f1e:	40 81       	ld	r20, Z
     f20:	4c 83       	std	Y+4, r20	; 0x04
     f22:	88 81       	ld	r24, Y
     f24:	99 81       	ldd	r25, Y+1	; 0x01
     f26:	99 23       	and	r25, r25
     f28:	84 f4       	brge	.+32     	; 0xf4a <_ZN14robot_tag_game3gun9next_tickEv+0x46>
     f2a:	80 37       	cpi	r24, 0x70	; 112
     f2c:	9e 4f       	sbci	r25, 0xFE	; 254
     f2e:	24 f4       	brge	.+8      	; 0xf38 <_ZN14robot_tag_game3gun9next_tickEv+0x34>
     f30:	61 e0       	ldi	r22, 0x01	; 1
     f32:	8d e0       	ldi	r24, 0x0D	; 13
     f34:	51 df       	rcall	.-350    	; 0xdd8 <digitalWrite>
     f36:	03 c0       	rjmp	.+6      	; 0xf3e <_ZN14robot_tag_game3gun9next_tickEv+0x3a>
     f38:	60 e0       	ldi	r22, 0x00	; 0
     f3a:	8d e0       	ldi	r24, 0x0D	; 13
     f3c:	4d df       	rcall	.-358    	; 0xdd8 <digitalWrite>
     f3e:	88 81       	ld	r24, Y
     f40:	99 81       	ldd	r25, Y+1	; 0x01
     f42:	01 96       	adiw	r24, 0x01	; 1
     f44:	99 83       	std	Y+1, r25	; 0x01
     f46:	88 83       	st	Y, r24
     f48:	51 c0       	rjmp	.+162    	; 0xfec <_ZN14robot_tag_game3gun9next_tickEv+0xe8>
     f4a:	50 e0       	ldi	r21, 0x00	; 0
     f4c:	27 e0       	ldi	r18, 0x07	; 7
     f4e:	30 e0       	ldi	r19, 0x00	; 0
     f50:	28 1b       	sub	r18, r24
     f52:	39 0b       	sbc	r19, r25
     f54:	61 e0       	ldi	r22, 0x01	; 1
     f56:	70 e0       	ldi	r23, 0x00	; 0
     f58:	fb 01       	movw	r30, r22
     f5a:	02 c0       	rjmp	.+4      	; 0xf60 <_ZN14robot_tag_game3gun9next_tickEv+0x5c>
     f5c:	ee 0f       	add	r30, r30
     f5e:	ff 1f       	adc	r31, r31
     f60:	2a 95       	dec	r18
     f62:	e2 f7       	brpl	.-8      	; 0xf5c <_ZN14robot_tag_game3gun9next_tickEv+0x58>
     f64:	9f 01       	movw	r18, r30
     f66:	24 23       	and	r18, r20
     f68:	35 23       	and	r19, r21
     f6a:	23 2b       	or	r18, r19
     f6c:	59 f0       	breq	.+22     	; 0xf84 <_ZN14robot_tag_game3gun9next_tickEv+0x80>
     f6e:	51 e0       	ldi	r21, 0x01	; 1
     f70:	40 e0       	ldi	r20, 0x00	; 0
     f72:	2a 81       	ldd	r18, Y+2	; 0x02
     f74:	3b 81       	ldd	r19, Y+3	; 0x03
     f76:	23 30       	cpi	r18, 0x03	; 3
     f78:	31 05       	cpc	r19, r1
     f7a:	0c f0       	brlt	.+2      	; 0xf7e <_ZN14robot_tag_game3gun9next_tickEv+0x7a>
     f7c:	50 e0       	ldi	r21, 0x00	; 0
     f7e:	25 2f       	mov	r18, r21
     f80:	34 2f       	mov	r19, r20
     f82:	0a c0       	rjmp	.+20     	; 0xf98 <_ZN14robot_tag_game3gun9next_tickEv+0x94>
     f84:	51 e0       	ldi	r21, 0x01	; 1
     f86:	40 e0       	ldi	r20, 0x00	; 0
     f88:	2a 81       	ldd	r18, Y+2	; 0x02
     f8a:	3b 81       	ldd	r19, Y+3	; 0x03
     f8c:	12 16       	cp	r1, r18
     f8e:	13 06       	cpc	r1, r19
     f90:	0c f4       	brge	.+2      	; 0xf94 <_ZN14robot_tag_game3gun9next_tickEv+0x90>
     f92:	50 e0       	ldi	r21, 0x00	; 0
     f94:	25 2f       	mov	r18, r21
     f96:	34 2f       	mov	r19, r20
     f98:	4a 81       	ldd	r20, Y+2	; 0x02
     f9a:	5b 81       	ldd	r21, Y+3	; 0x03
     f9c:	4f 5f       	subi	r20, 0xFF	; 255
     f9e:	5f 4f       	sbci	r21, 0xFF	; 255
     fa0:	44 30       	cpi	r20, 0x04	; 4
     fa2:	51 05       	cpc	r21, r1
     fa4:	1c f4       	brge	.+6      	; 0xfac <_ZN14robot_tag_game3gun9next_tickEv+0xa8>
     fa6:	5b 83       	std	Y+3, r21	; 0x03
     fa8:	4a 83       	std	Y+2, r20	; 0x02
     faa:	05 c0       	rjmp	.+10     	; 0xfb6 <_ZN14robot_tag_game3gun9next_tickEv+0xb2>
     fac:	1b 82       	std	Y+3, r1	; 0x03
     fae:	1a 82       	std	Y+2, r1	; 0x02
     fb0:	01 96       	adiw	r24, 0x01	; 1
     fb2:	99 83       	std	Y+1, r25	; 0x01
     fb4:	88 83       	st	Y, r24
     fb6:	88 81       	ld	r24, Y
     fb8:	99 81       	ldd	r25, Y+1	; 0x01
     fba:	08 97       	sbiw	r24, 0x08	; 8
     fbc:	84 f0       	brlt	.+32     	; 0xfde <_ZN14robot_tag_game3gun9next_tickEv+0xda>
     fbe:	8c e0       	ldi	r24, 0x0C	; 12
     fc0:	9e ef       	ldi	r25, 0xFE	; 254
     fc2:	99 83       	std	Y+1, r25	; 0x01
     fc4:	88 83       	st	Y, r24
     fc6:	80 91 d9 04 	lds	r24, 0x04D9
     fca:	90 91 da 04 	lds	r25, 0x04DA
     fce:	01 96       	adiw	r24, 0x01	; 1
     fd0:	66 e0       	ldi	r22, 0x06	; 6
     fd2:	70 e0       	ldi	r23, 0x00	; 0
     fd4:	bf d6       	rcall	.+3454   	; 0x1d54 <__divmodhi4>
     fd6:	90 93 da 04 	sts	0x04DA, r25
     fda:	80 93 d9 04 	sts	0x04D9, r24
     fde:	23 2b       	or	r18, r19
     fe0:	19 f0       	breq	.+6      	; 0xfe8 <_ZN14robot_tag_game3gun9next_tickEv+0xe4>
     fe2:	ce 01       	movw	r24, r28
     fe4:	7d df       	rcall	.-262    	; 0xee0 <_ZN14robot_tag_game3gun7send_hiEv>
     fe6:	02 c0       	rjmp	.+4      	; 0xfec <_ZN14robot_tag_game3gun9next_tickEv+0xe8>
     fe8:	ce 01       	movw	r24, r28
     fea:	83 df       	rcall	.-250    	; 0xef2 <_ZN14robot_tag_game3gun7send_loEv>
     fec:	df 91       	pop	r29
     fee:	cf 91       	pop	r28
     ff0:	08 95       	ret

00000ff2 <__vector_42>:
}

}

ISR(TIMER4_COMPA_vect)
{
     ff2:	1f 92       	push	r1
     ff4:	0f 92       	push	r0
     ff6:	0f b6       	in	r0, 0x3f	; 63
     ff8:	0f 92       	push	r0
     ffa:	11 24       	eor	r1, r1
     ffc:	0b b6       	in	r0, 0x3b	; 59
     ffe:	0f 92       	push	r0
    1000:	2f 93       	push	r18
    1002:	3f 93       	push	r19
    1004:	4f 93       	push	r20
    1006:	5f 93       	push	r21
    1008:	6f 93       	push	r22
    100a:	7f 93       	push	r23
    100c:	8f 93       	push	r24
    100e:	9f 93       	push	r25
    1010:	af 93       	push	r26
    1012:	bf 93       	push	r27
    1014:	ef 93       	push	r30
    1016:	ff 93       	push	r31
    if(!g) return;
    1018:	80 91 db 04 	lds	r24, 0x04DB
    101c:	90 91 dc 04 	lds	r25, 0x04DC
    1020:	89 2b       	or	r24, r25
    1022:	69 f0       	breq	.+26     	; 0x103e <__vector_42+0x4c>
    OCR4A += GUN_CYCLES_PER_BIT;
    1024:	e8 ea       	ldi	r30, 0xA8	; 168
    1026:	f0 e0       	ldi	r31, 0x00	; 0
    1028:	80 81       	ld	r24, Z
    102a:	91 81       	ldd	r25, Z+1	; 0x01
    102c:	86 50       	subi	r24, 0x06	; 6
    102e:	9f 4f       	sbci	r25, 0xFF	; 255
    1030:	91 83       	std	Z+1, r25	; 0x01
    1032:	80 83       	st	Z, r24
    g->next_tick();
    1034:	80 91 db 04 	lds	r24, 0x04DB
    1038:	90 91 dc 04 	lds	r25, 0x04DC
    103c:	63 df       	rcall	.-314    	; 0xf04 <_ZN14robot_tag_game3gun9next_tickEv>
}
    103e:	ff 91       	pop	r31
    1040:	ef 91       	pop	r30
    1042:	bf 91       	pop	r27
    1044:	af 91       	pop	r26
    1046:	9f 91       	pop	r25
    1048:	8f 91       	pop	r24
    104a:	7f 91       	pop	r23
    104c:	6f 91       	pop	r22
    104e:	5f 91       	pop	r21
    1050:	4f 91       	pop	r20
    1052:	3f 91       	pop	r19
    1054:	2f 91       	pop	r18
    1056:	0f 90       	pop	r0
    1058:	0b be       	out	0x3b, r0	; 59
    105a:	0f 90       	pop	r0
    105c:	0f be       	out	0x3f, r0	; 63
    105e:	0f 90       	pop	r0
    1060:	1f 90       	pop	r1
    1062:	18 95       	reti

00001064 <get_status>:
}

void Radio_Flush()
{
	send_instruction(FLUSH_TX, NULL, NULL, 0);
	send_instruction(FLUSH_RX, NULL, NULL, 0);
    1064:	cf 93       	push	r28
    1066:	df 93       	push	r29
    1068:	c2 e0       	ldi	r28, 0x02	; 2
    106a:	d1 e0       	ldi	r29, 0x01	; 1
    106c:	88 81       	ld	r24, Y
    106e:	8f 7b       	andi	r24, 0xBF	; 191
    1070:	88 83       	st	Y, r24
    1072:	8f ef       	ldi	r24, 0xFF	; 255
    1074:	4d d1       	rcall	.+666    	; 0x1310 <SPI_Write_Byte>
    1076:	98 81       	ld	r25, Y
    1078:	90 64       	ori	r25, 0x40	; 64
    107a:	98 83       	st	Y, r25
    107c:	df 91       	pop	r29
    107e:	cf 91       	pop	r28
    1080:	08 95       	ret

00001082 <set_register>:
    1082:	ef 92       	push	r14
    1084:	ff 92       	push	r15
    1086:	0f 93       	push	r16
    1088:	1f 93       	push	r17
    108a:	cf 93       	push	r28
    108c:	df 93       	push	r29
    108e:	8b 01       	movw	r16, r22
    1090:	e4 2e       	mov	r14, r20
    1092:	c2 e0       	ldi	r28, 0x02	; 2
    1094:	d1 e0       	ldi	r29, 0x01	; 1
    1096:	98 81       	ld	r25, Y
    1098:	9f 7b       	andi	r25, 0xBF	; 191
    109a:	98 83       	st	Y, r25
    109c:	8f 71       	andi	r24, 0x1F	; 31
    109e:	80 62       	ori	r24, 0x20	; 32
    10a0:	37 d1       	rcall	.+622    	; 0x1310 <SPI_Write_Byte>
    10a2:	f8 2e       	mov	r15, r24
    10a4:	6e 2d       	mov	r22, r14
    10a6:	c8 01       	movw	r24, r16
    10a8:	24 d1       	rcall	.+584    	; 0x12f2 <SPI_Write_Block>
    10aa:	88 81       	ld	r24, Y
    10ac:	80 64       	ori	r24, 0x40	; 64
    10ae:	88 83       	st	Y, r24
    10b0:	8f 2d       	mov	r24, r15
    10b2:	df 91       	pop	r29
    10b4:	cf 91       	pop	r28
    10b6:	1f 91       	pop	r17
    10b8:	0f 91       	pop	r16
    10ba:	ff 90       	pop	r15
    10bc:	ef 90       	pop	r14
    10be:	08 95       	ret

000010c0 <reset_pipe0_address>:
    10c0:	80 91 0a 02 	lds	r24, 0x020A
    10c4:	88 23       	and	r24, r24
    10c6:	29 f0       	breq	.+10     	; 0x10d2 <reset_pipe0_address+0x12>
    10c8:	45 e0       	ldi	r20, 0x05	; 5
    10ca:	65 e0       	ldi	r22, 0x05	; 5
    10cc:	72 e0       	ldi	r23, 0x02	; 2
    10ce:	8a e0       	ldi	r24, 0x0A	; 10
    10d0:	d8 cf       	rjmp	.-80     	; 0x1082 <set_register>
    10d2:	08 95       	ret

000010d4 <send_instruction>:
    10d4:	ff 92       	push	r15
    10d6:	0f 93       	push	r16
    10d8:	1f 93       	push	r17
    10da:	cf 93       	push	r28
    10dc:	df 93       	push	r29
    10de:	8b 01       	movw	r16, r22
    10e0:	ea 01       	movw	r28, r20
    10e2:	f2 2e       	mov	r15, r18
    10e4:	e2 e0       	ldi	r30, 0x02	; 2
    10e6:	f1 e0       	ldi	r31, 0x01	; 1
    10e8:	90 81       	ld	r25, Z
    10ea:	9f 7b       	andi	r25, 0xBF	; 191
    10ec:	90 83       	st	Z, r25
    10ee:	10 d1       	rcall	.+544    	; 0x1310 <SPI_Write_Byte>
    10f0:	ff 20       	and	r15, r15
    10f2:	51 f0       	breq	.+20     	; 0x1108 <send_instruction+0x34>
    10f4:	20 97       	sbiw	r28, 0x00	; 0
    10f6:	21 f4       	brne	.+8      	; 0x1100 <send_instruction+0x2c>
    10f8:	6f 2d       	mov	r22, r15
    10fa:	c8 01       	movw	r24, r16
    10fc:	fa d0       	rcall	.+500    	; 0x12f2 <SPI_Write_Block>
    10fe:	04 c0       	rjmp	.+8      	; 0x1108 <send_instruction+0x34>
    1100:	4f 2d       	mov	r20, r15
    1102:	be 01       	movw	r22, r28
    1104:	c8 01       	movw	r24, r16
    1106:	e2 d0       	rcall	.+452    	; 0x12cc <SPI_ReadWrite_Block>
    1108:	e2 e0       	ldi	r30, 0x02	; 2
    110a:	f1 e0       	ldi	r31, 0x01	; 1
    110c:	80 81       	ld	r24, Z
    110e:	80 64       	ori	r24, 0x40	; 64
    1110:	80 83       	st	Z, r24
    1112:	df 91       	pop	r29
    1114:	cf 91       	pop	r28
    1116:	1f 91       	pop	r17
    1118:	0f 91       	pop	r16
    111a:	ff 90       	pop	r15
    111c:	08 95       	ret

0000111e <get_register>:
    111e:	ef 92       	push	r14
    1120:	ff 92       	push	r15
    1122:	0f 93       	push	r16
    1124:	1f 93       	push	r17
    1126:	cf 93       	push	r28
    1128:	df 93       	push	r29
    112a:	06 2f       	mov	r16, r22
    112c:	f7 2e       	mov	r15, r23
    112e:	14 2f       	mov	r17, r20
    1130:	44 23       	and	r20, r20
    1132:	49 f0       	breq	.+18     	; 0x1146 <get_register+0x28>
    1134:	36 2f       	mov	r19, r22
    1136:	e6 2f       	mov	r30, r22
    1138:	f7 2f       	mov	r31, r23
    113a:	2f ef       	ldi	r18, 0xFF	; 255
    113c:	21 93       	st	Z+, r18
    113e:	9e 2f       	mov	r25, r30
    1140:	93 1b       	sub	r25, r19
    1142:	91 17       	cp	r25, r17
    1144:	d8 f3       	brcs	.-10     	; 0x113c <get_register+0x1e>
    1146:	c2 e0       	ldi	r28, 0x02	; 2
    1148:	d1 e0       	ldi	r29, 0x01	; 1
    114a:	98 81       	ld	r25, Y
    114c:	9f 7b       	andi	r25, 0xBF	; 191
    114e:	98 83       	st	Y, r25
    1150:	8f 71       	andi	r24, 0x1F	; 31
    1152:	de d0       	rcall	.+444    	; 0x1310 <SPI_Write_Byte>
    1154:	e8 2e       	mov	r14, r24
    1156:	41 2f       	mov	r20, r17
    1158:	60 2f       	mov	r22, r16
    115a:	7f 2d       	mov	r23, r15
    115c:	80 e0       	ldi	r24, 0x00	; 0
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	b5 d0       	rcall	.+362    	; 0x12cc <SPI_ReadWrite_Block>
    1162:	88 81       	ld	r24, Y
    1164:	80 64       	ori	r24, 0x40	; 64
    1166:	88 83       	st	Y, r24
    1168:	8e 2d       	mov	r24, r14
    116a:	df 91       	pop	r29
    116c:	cf 91       	pop	r28
    116e:	1f 91       	pop	r17
    1170:	0f 91       	pop	r16
    1172:	ff 90       	pop	r15
    1174:	ef 90       	pop	r14
    1176:	08 95       	ret

00001178 <set_rx_mode>:
    1178:	cf 93       	push	r28
    117a:	df 93       	push	r29
    117c:	1f 92       	push	r1
    117e:	cd b7       	in	r28, 0x3d	; 61
    1180:	de b7       	in	r29, 0x3e	; 62
    1182:	41 e0       	ldi	r20, 0x01	; 1
    1184:	be 01       	movw	r22, r28
    1186:	6f 5f       	subi	r22, 0xFF	; 255
    1188:	7f 4f       	sbci	r23, 0xFF	; 255
    118a:	80 e0       	ldi	r24, 0x00	; 0
    118c:	c8 df       	rcall	.-112    	; 0x111e <get_register>
    118e:	89 81       	ldd	r24, Y+1	; 0x01
    1190:	80 fd       	sbrc	r24, 0
    1192:	14 c0       	rjmp	.+40     	; 0x11bc <set_rx_mode+0x44>
    1194:	81 60       	ori	r24, 0x01	; 1
    1196:	89 83       	std	Y+1, r24	; 0x01
    1198:	41 e0       	ldi	r20, 0x01	; 1
    119a:	be 01       	movw	r22, r28
    119c:	6f 5f       	subi	r22, 0xFF	; 255
    119e:	7f 4f       	sbci	r23, 0xFF	; 255
    11a0:	80 e0       	ldi	r24, 0x00	; 0
    11a2:	6f df       	rcall	.-290    	; 0x1082 <set_register>
    11a4:	83 e0       	ldi	r24, 0x03	; 3
    11a6:	91 e0       	ldi	r25, 0x01	; 1
    11a8:	01 97       	sbiw	r24, 0x01	; 1
    11aa:	f1 f7       	brne	.-4      	; 0x11a8 <set_rx_mode+0x30>
    11ac:	00 c0       	rjmp	.+0      	; 0x11ae <set_rx_mode+0x36>
    11ae:	00 00       	nop
    11b0:	83 e0       	ldi	r24, 0x03	; 3
    11b2:	91 e0       	ldi	r25, 0x01	; 1
    11b4:	01 97       	sbiw	r24, 0x01	; 1
    11b6:	f1 f7       	brne	.-4      	; 0x11b4 <set_rx_mode+0x3c>
    11b8:	00 c0       	rjmp	.+0      	; 0x11ba <set_rx_mode+0x42>
    11ba:	00 00       	nop
    11bc:	0f 90       	pop	r0
    11be:	df 91       	pop	r29
    11c0:	cf 91       	pop	r28
    11c2:	08 95       	ret

000011c4 <__vector_5>:
}


// Interrupt handler
ISR(INT4_vect)
{
    11c4:	1f 92       	push	r1
    11c6:	0f 92       	push	r0
    11c8:	0f b6       	in	r0, 0x3f	; 63
    11ca:	0f 92       	push	r0
    11cc:	11 24       	eor	r1, r1
    11ce:	0b b6       	in	r0, 0x3b	; 59
    11d0:	0f 92       	push	r0
    11d2:	2f 93       	push	r18
    11d4:	3f 93       	push	r19
    11d6:	4f 93       	push	r20
    11d8:	5f 93       	push	r21
    11da:	6f 93       	push	r22
    11dc:	7f 93       	push	r23
    11de:	8f 93       	push	r24
    11e0:	9f 93       	push	r25
    11e2:	af 93       	push	r26
    11e4:	bf 93       	push	r27
    11e6:	ef 93       	push	r30
    11e8:	ff 93       	push	r31
    11ea:	cf 93       	push	r28
    11ec:	df 93       	push	r29
    11ee:	1f 92       	push	r1
    11f0:	cd b7       	in	r28, 0x3d	; 61
    11f2:	de b7       	in	r29, 0x3e	; 62
    uint8_t status;
    uint8_t pipe_number;

	DEBUG_2_LOW;
    11f4:	e2 e0       	ldi	r30, 0x02	; 2
    11f6:	f1 e0       	ldi	r31, 0x01	; 1
    11f8:	80 81       	ld	r24, Z
    11fa:	8f 7e       	andi	r24, 0xEF	; 239
    11fc:	80 83       	st	Z, r24
    CE_LOW();
    11fe:	80 81       	ld	r24, Z
    1200:	8f 7d       	andi	r24, 0xDF	; 223
    1202:	80 83       	st	Z, r24

    status = get_status();
    1204:	2f df       	rcall	.-418    	; 0x1064 <get_status>
    1206:	89 83       	std	Y+1, r24	; 0x01

    if (status & _BV(RX_DR))
    1208:	86 ff       	sbrs	r24, 6
    120a:	03 c0       	rjmp	.+6      	; 0x1212 <__vector_5+0x4e>
    {
    	pipe_number =  (status & 0xE) >> 1;
    120c:	8e 70       	andi	r24, 0x0E	; 14
    	radio_rxhandler(pipe_number);
    120e:	86 95       	lsr	r24
    1210:	8b d5       	rcall	.+2838   	; 0x1d28 <radio_rxhandler>
    }
    // We can get the TX_DS or the MAX_RT interrupt, but not both.
    if (status & _BV(TX_DS))
    1212:	89 81       	ldd	r24, Y+1	; 0x01
    1214:	85 ff       	sbrs	r24, 5
    1216:	1b c0       	rjmp	.+54     	; 0x124e <__vector_5+0x8a>
    {
        // if there's nothing left to transmit, switch back to receive mode.
        transmit_lock = 0;
    1218:	10 92 dd 04 	sts	0x04DD, r1
        reset_pipe0_address();
    121c:	51 df       	rcall	.-350    	; 0x10c0 <reset_pipe0_address>
        set_rx_mode();
    121e:	ac df       	rcall	.-168    	; 0x1178 <set_rx_mode>

    	// indicate in the history that a packet was transmitted successfully by appending a 1.
    	tx_history <<= 1;
    1220:	80 91 03 02 	lds	r24, 0x0203
    1224:	90 91 04 02 	lds	r25, 0x0204
    1228:	88 0f       	add	r24, r24
    122a:	99 1f       	adc	r25, r25
    122c:	90 93 04 02 	sts	0x0204, r25
    1230:	80 93 03 02 	sts	0x0203, r24
    	tx_history |= 1;
    1234:	80 91 03 02 	lds	r24, 0x0203
    1238:	90 91 04 02 	lds	r25, 0x0204
    123c:	81 60       	ori	r24, 0x01	; 1
    123e:	90 93 04 02 	sts	0x0204, r25
    1242:	80 93 03 02 	sts	0x0203, r24

    	tx_last_status = RADIO_TX_SUCCESS;
    1246:	81 e0       	ldi	r24, 0x01	; 1
    1248:	80 93 02 02 	sts	0x0202, r24
    124c:	19 c0       	rjmp	.+50     	; 0x1280 <__vector_5+0xbc>
    }
    else if (status & _BV(MAX_RT))
    124e:	84 ff       	sbrs	r24, 4
    1250:	17 c0       	rjmp	.+46     	; 0x1280 <__vector_5+0xbc>
    {
        send_instruction(FLUSH_TX, NULL, NULL, 0);
    1252:	20 e0       	ldi	r18, 0x00	; 0
    1254:	40 e0       	ldi	r20, 0x00	; 0
    1256:	50 e0       	ldi	r21, 0x00	; 0
    1258:	60 e0       	ldi	r22, 0x00	; 0
    125a:	70 e0       	ldi	r23, 0x00	; 0
    125c:	81 ee       	ldi	r24, 0xE1	; 225
    125e:	3a df       	rcall	.-396    	; 0x10d4 <send_instruction>

    	transmit_lock = 0;
    1260:	10 92 dd 04 	sts	0x04DD, r1
    	reset_pipe0_address();
    1264:	2d df       	rcall	.-422    	; 0x10c0 <reset_pipe0_address>
		set_rx_mode();
    1266:	88 df       	rcall	.-240    	; 0x1178 <set_rx_mode>
    	// indicate in the history that a packet was dropped by appending a 0.
    	tx_history <<= 1;
    1268:	80 91 03 02 	lds	r24, 0x0203
    126c:	90 91 04 02 	lds	r25, 0x0204
    1270:	88 0f       	add	r24, r24
    1272:	99 1f       	adc	r25, r25
    1274:	90 93 04 02 	sts	0x0204, r25
    1278:	80 93 03 02 	sts	0x0203, r24

    	tx_last_status = RADIO_TX_MAX_RT;
    127c:	10 92 02 02 	sts	0x0202, r1
    }
	
    // clear the interrupt flags.
	status = _BV(RX_DR) | _BV(TX_DS) | _BV(MAX_RT);
    1280:	80 e7       	ldi	r24, 0x70	; 112
    1282:	89 83       	std	Y+1, r24	; 0x01
	set_register(STATUS, &status, 1);
    1284:	41 e0       	ldi	r20, 0x01	; 1
    1286:	be 01       	movw	r22, r28
    1288:	6f 5f       	subi	r22, 0xFF	; 255
    128a:	7f 4f       	sbci	r23, 0xFF	; 255
    128c:	87 e0       	ldi	r24, 0x07	; 7
    128e:	f9 de       	rcall	.-526    	; 0x1082 <set_register>
	DEBUG_2_HIGH;
    1290:	e2 e0       	ldi	r30, 0x02	; 2
    1292:	f1 e0       	ldi	r31, 0x01	; 1
    1294:	80 81       	ld	r24, Z
    1296:	80 61       	ori	r24, 0x10	; 16
    1298:	80 83       	st	Z, r24
	
    CE_HIGH();
    129a:	80 81       	ld	r24, Z
    129c:	80 62       	ori	r24, 0x20	; 32
    129e:	80 83       	st	Z, r24
}
    12a0:	0f 90       	pop	r0
    12a2:	df 91       	pop	r29
    12a4:	cf 91       	pop	r28
    12a6:	ff 91       	pop	r31
    12a8:	ef 91       	pop	r30
    12aa:	bf 91       	pop	r27
    12ac:	af 91       	pop	r26
    12ae:	9f 91       	pop	r25
    12b0:	8f 91       	pop	r24
    12b2:	7f 91       	pop	r23
    12b4:	6f 91       	pop	r22
    12b6:	5f 91       	pop	r21
    12b8:	4f 91       	pop	r20
    12ba:	3f 91       	pop	r19
    12bc:	2f 91       	pop	r18
    12be:	0f 90       	pop	r0
    12c0:	0b be       	out	0x3b, r0	; 59
    12c2:	0f 90       	pop	r0
    12c4:	0f be       	out	0x3f, r0	; 63
    12c6:	0f 90       	pop	r0
    12c8:	1f 90       	pop	r1
    12ca:	18 95       	reti

000012cc <SPI_ReadWrite_Block>:
}

void SPI_ReadWrite_Block(uint8_t* data, uint8_t* buffer, uint8_t len)
{
    uint8_t i;
    for (i = 0; i < len; i++) {
    12cc:	44 23       	and	r20, r20
    12ce:	81 f0       	breq	.+32     	; 0x12f0 <SPI_ReadWrite_Block+0x24>
    12d0:	28 2f       	mov	r18, r24
    12d2:	a6 2f       	mov	r26, r22
    12d4:	b7 2f       	mov	r27, r23
    12d6:	e8 2f       	mov	r30, r24
    12d8:	f9 2f       	mov	r31, r25
          SPDR = data[i];
    12da:	81 91       	ld	r24, Z+
    12dc:	8e bd       	out	0x2e, r24	; 46
          SPI_WAIT();
    12de:	0d b4       	in	r0, 0x2d	; 45
    12e0:	07 fe       	sbrs	r0, 7
    12e2:	fd cf       	rjmp	.-6      	; 0x12de <SPI_ReadWrite_Block+0x12>
          buffer[i] = SPDR;
    12e4:	8e b5       	in	r24, 0x2e	; 46
    12e6:	8d 93       	st	X+, r24
    12e8:	8e 2f       	mov	r24, r30
    12ea:	82 1b       	sub	r24, r18
}

void SPI_ReadWrite_Block(uint8_t* data, uint8_t* buffer, uint8_t len)
{
    uint8_t i;
    for (i = 0; i < len; i++) {
    12ec:	84 17       	cp	r24, r20
    12ee:	a8 f3       	brcs	.-22     	; 0x12da <SPI_ReadWrite_Block+0xe>
    12f0:	08 95       	ret

000012f2 <SPI_Write_Block>:
}

void SPI_Write_Block(uint8_t* data, uint8_t len)
{
    uint8_t i;
    for (i = 0; i < len; i++) {
    12f2:	66 23       	and	r22, r22
    12f4:	61 f0       	breq	.+24     	; 0x130e <SPI_Write_Block+0x1c>
    12f6:	28 2f       	mov	r18, r24
    12f8:	e8 2f       	mov	r30, r24
    12fa:	f9 2f       	mov	r31, r25
          SPDR = data[i];
    12fc:	81 91       	ld	r24, Z+
    12fe:	8e bd       	out	0x2e, r24	; 46
          SPI_WAIT();
    1300:	0d b4       	in	r0, 0x2d	; 45
    1302:	07 fe       	sbrs	r0, 7
    1304:	fd cf       	rjmp	.-6      	; 0x1300 <SPI_Write_Block+0xe>
    1306:	8e 2f       	mov	r24, r30
    1308:	82 1b       	sub	r24, r18
}

void SPI_Write_Block(uint8_t* data, uint8_t len)
{
    uint8_t i;
    for (i = 0; i < len; i++) {
    130a:	86 17       	cp	r24, r22
    130c:	b8 f3       	brcs	.-18     	; 0x12fc <SPI_Write_Block+0xa>
    130e:	08 95       	ret

00001310 <SPI_Write_Byte>:
    }
}

uint8_t SPI_Write_Byte(uint8_t byte)
{
    SPDR = byte;
    1310:	8e bd       	out	0x2e, r24	; 46
    SPI_WAIT();
    1312:	0d b4       	in	r0, 0x2d	; 45
    1314:	07 fe       	sbrs	r0, 7
    1316:	fd cf       	rjmp	.-6      	; 0x1312 <SPI_Write_Byte+0x2>
    return SPDR;
    1318:	8e b5       	in	r24, 0x2e	; 46
}
    131a:	08 95       	ret

0000131c <_ZL4idlev>:
    ms_now = last_tick * TICK + ms_extra;

    SREG = sreg;

    return ms_now;
}
    131c:	ff cf       	rjmp	.-2      	; 0x131c <_ZL4idlev>

0000131e <_ZL11exit_kernelv>:
    131e:	ff 93       	push	r31
    1320:	ff b7       	in	r31, 0x3f	; 63
    1322:	f8 94       	cli
    1324:	ff 93       	push	r31
    1326:	fc b7       	in	r31, 0x3c	; 60
    1328:	ff 93       	push	r31
    132a:	ef 93       	push	r30
    132c:	df 93       	push	r29
    132e:	cf 93       	push	r28
    1330:	bf 93       	push	r27
    1332:	af 93       	push	r26
    1334:	9f 93       	push	r25
    1336:	8f 93       	push	r24
    1338:	7f 93       	push	r23
    133a:	6f 93       	push	r22
    133c:	5f 93       	push	r21
    133e:	4f 93       	push	r20
    1340:	3f 93       	push	r19
    1342:	2f 93       	push	r18
    1344:	1f 93       	push	r17
    1346:	0f 93       	push	r16
    1348:	ff 92       	push	r15
    134a:	ef 92       	push	r14
    134c:	df 92       	push	r13
    134e:	cf 92       	push	r12
    1350:	bf 92       	push	r11
    1352:	af 92       	push	r10
    1354:	9f 92       	push	r9
    1356:	8f 92       	push	r8
    1358:	7f 92       	push	r7
    135a:	6f 92       	push	r6
    135c:	5f 92       	push	r5
    135e:	4f 92       	push	r4
    1360:	3f 92       	push	r3
    1362:	2f 92       	push	r2
    1364:	1f 92       	push	r1
    1366:	0f 92       	push	r0
    1368:	8d b7       	in	r24, 0x3d	; 61
    136a:	9e b7       	in	r25, 0x3e	; 62
    136c:	90 93 18 13 	sts	0x1318, r25
    1370:	80 93 17 13 	sts	0x1317, r24
    1374:	e0 91 19 13 	lds	r30, 0x1319
    1378:	f0 91 1a 13 	lds	r31, 0x131A
    137c:	f3 95       	inc	r31
    137e:	80 81       	ld	r24, Z
    1380:	91 81       	ldd	r25, Z+1	; 0x01
    1382:	9e bf       	out	0x3e, r25	; 62
    1384:	8d bf       	out	0x3d, r24	; 61
    1386:	0f 90       	pop	r0
    1388:	1f 90       	pop	r1
    138a:	2f 90       	pop	r2
    138c:	3f 90       	pop	r3
    138e:	4f 90       	pop	r4
    1390:	5f 90       	pop	r5
    1392:	6f 90       	pop	r6
    1394:	7f 90       	pop	r7
    1396:	8f 90       	pop	r8
    1398:	9f 90       	pop	r9
    139a:	af 90       	pop	r10
    139c:	bf 90       	pop	r11
    139e:	cf 90       	pop	r12
    13a0:	df 90       	pop	r13
    13a2:	ef 90       	pop	r14
    13a4:	ff 90       	pop	r15
    13a6:	0f 91       	pop	r16
    13a8:	1f 91       	pop	r17
    13aa:	2f 91       	pop	r18
    13ac:	3f 91       	pop	r19
    13ae:	4f 91       	pop	r20
    13b0:	5f 91       	pop	r21
    13b2:	6f 91       	pop	r22
    13b4:	7f 91       	pop	r23
    13b6:	8f 91       	pop	r24
    13b8:	9f 91       	pop	r25
    13ba:	af 91       	pop	r26
    13bc:	bf 91       	pop	r27
    13be:	cf 91       	pop	r28
    13c0:	df 91       	pop	r29
    13c2:	ef 91       	pop	r30
    13c4:	ff 91       	pop	r31
    13c6:	fc bf       	out	0x3c, r31	; 60
    13c8:	ff 91       	pop	r31
    13ca:	ff bf       	out	0x3f, r31	; 63
    13cc:	ff 91       	pop	r31
    13ce:	08 95       	ret

000013d0 <_ZL12enter_kernelv>:
    13d0:	ff 93       	push	r31
    13d2:	ff b7       	in	r31, 0x3f	; 63
    13d4:	f8 94       	cli
    13d6:	ff 93       	push	r31
    13d8:	fc b7       	in	r31, 0x3c	; 60
    13da:	ff 93       	push	r31
    13dc:	ef 93       	push	r30
    13de:	df 93       	push	r29
    13e0:	cf 93       	push	r28
    13e2:	bf 93       	push	r27
    13e4:	af 93       	push	r26
    13e6:	9f 93       	push	r25
    13e8:	8f 93       	push	r24
    13ea:	7f 93       	push	r23
    13ec:	6f 93       	push	r22
    13ee:	5f 93       	push	r21
    13f0:	4f 93       	push	r20
    13f2:	3f 93       	push	r19
    13f4:	2f 93       	push	r18
    13f6:	1f 93       	push	r17
    13f8:	0f 93       	push	r16
    13fa:	ff 92       	push	r15
    13fc:	ef 92       	push	r14
    13fe:	df 92       	push	r13
    1400:	cf 92       	push	r12
    1402:	bf 92       	push	r11
    1404:	af 92       	push	r10
    1406:	9f 92       	push	r9
    1408:	8f 92       	push	r8
    140a:	7f 92       	push	r7
    140c:	6f 92       	push	r6
    140e:	5f 92       	push	r5
    1410:	4f 92       	push	r4
    1412:	3f 92       	push	r3
    1414:	2f 92       	push	r2
    1416:	1f 92       	push	r1
    1418:	0f 92       	push	r0
    141a:	e0 91 19 13 	lds	r30, 0x1319
    141e:	f0 91 1a 13 	lds	r31, 0x131A
    1422:	8d b7       	in	r24, 0x3d	; 61
    1424:	9e b7       	in	r25, 0x3e	; 62
    1426:	f3 95       	inc	r31
    1428:	91 83       	std	Z+1, r25	; 0x01
    142a:	80 83       	st	Z, r24
    142c:	80 91 17 13 	lds	r24, 0x1317
    1430:	90 91 18 13 	lds	r25, 0x1318
    1434:	9e bf       	out	0x3e, r25	; 62
    1436:	8d bf       	out	0x3d, r24	; 61
    1438:	0f 90       	pop	r0
    143a:	1f 90       	pop	r1
    143c:	2f 90       	pop	r2
    143e:	3f 90       	pop	r3
    1440:	4f 90       	pop	r4
    1442:	5f 90       	pop	r5
    1444:	6f 90       	pop	r6
    1446:	7f 90       	pop	r7
    1448:	8f 90       	pop	r8
    144a:	9f 90       	pop	r9
    144c:	af 90       	pop	r10
    144e:	bf 90       	pop	r11
    1450:	cf 90       	pop	r12
    1452:	df 90       	pop	r13
    1454:	ef 90       	pop	r14
    1456:	ff 90       	pop	r15
    1458:	0f 91       	pop	r16
    145a:	1f 91       	pop	r17
    145c:	2f 91       	pop	r18
    145e:	3f 91       	pop	r19
    1460:	4f 91       	pop	r20
    1462:	5f 91       	pop	r21
    1464:	6f 91       	pop	r22
    1466:	7f 91       	pop	r23
    1468:	8f 91       	pop	r24
    146a:	9f 91       	pop	r25
    146c:	af 91       	pop	r26
    146e:	bf 91       	pop	r27
    1470:	cf 91       	pop	r28
    1472:	df 91       	pop	r29
    1474:	ef 91       	pop	r30
    1476:	ff 91       	pop	r31
    1478:	fc bf       	out	0x3c, r31	; 60
    147a:	ff 91       	pop	r31
    147c:	ff bf       	out	0x3f, r31	; 63
    147e:	ff 91       	pop	r31
    1480:	08 95       	ret

00001482 <_ZL7enqueueP7queue_tP9td_struct>:
    1482:	fc 01       	movw	r30, r24
    1484:	db 01       	movw	r26, r22
    1486:	a2 5f       	subi	r26, 0xF2	; 242
    1488:	be 4f       	sbci	r27, 0xFE	; 254
    148a:	1d 92       	st	X+, r1
    148c:	1c 92       	st	X, r1
    148e:	80 81       	ld	r24, Z
    1490:	91 81       	ldd	r25, Z+1	; 0x01
    1492:	89 2b       	or	r24, r25
    1494:	29 f4       	brne	.+10     	; 0x14a0 <_ZL7enqueueP7queue_tP9td_struct+0x1e>
    1496:	71 83       	std	Z+1, r23	; 0x01
    1498:	60 83       	st	Z, r22
    149a:	73 83       	std	Z+3, r23	; 0x03
    149c:	62 83       	std	Z+2, r22	; 0x02
    149e:	08 95       	ret
    14a0:	a2 81       	ldd	r26, Z+2	; 0x02
    14a2:	b3 81       	ldd	r27, Z+3	; 0x03
    14a4:	a2 5f       	subi	r26, 0xF2	; 242
    14a6:	be 4f       	sbci	r27, 0xFE	; 254
    14a8:	6d 93       	st	X+, r22
    14aa:	7c 93       	st	X, r23
    14ac:	73 83       	std	Z+3, r23	; 0x03
    14ae:	62 83       	std	Z+2, r22	; 0x02
    14b0:	08 95       	ret

000014b2 <_ZL19kernel_enqueue_taskP9td_struct>:
    14b2:	fc 01       	movw	r30, r24
    14b4:	ee 5f       	subi	r30, 0xFE	; 254
    14b6:	fe 4f       	sbci	r31, 0xFE	; 254
    14b8:	22 e0       	ldi	r18, 0x02	; 2
    14ba:	20 83       	st	Z, r18
    14bc:	33 96       	adiw	r30, 0x03	; 3
    14be:	20 81       	ld	r18, Z
    14c0:	21 30       	cpi	r18, 0x01	; 1
    14c2:	39 f0       	breq	.+14     	; 0x14d2 <_ZL19kernel_enqueue_taskP9td_struct+0x20>
    14c4:	23 30       	cpi	r18, 0x03	; 3
    14c6:	49 f4       	brne	.+18     	; 0x14da <_ZL19kernel_enqueue_taskP9td_struct+0x28>
    14c8:	bc 01       	movw	r22, r24
    14ca:	8c ee       	ldi	r24, 0xEC	; 236
    14cc:	94 e0       	ldi	r25, 0x04	; 4
    14ce:	d9 cf       	rjmp	.-78     	; 0x1482 <_ZL7enqueueP7queue_tP9td_struct>
    14d0:	08 95       	ret
    14d2:	bc 01       	movw	r22, r24
    14d4:	80 ef       	ldi	r24, 0xF0	; 240
    14d6:	94 e0       	ldi	r25, 0x04	; 4
    14d8:	d4 cf       	rjmp	.-88     	; 0x1482 <_ZL7enqueueP7queue_tP9td_struct>
    14da:	08 95       	ret

000014dc <Task_Terminate>:
    14dc:	cf 93       	push	r28
    14de:	cf b7       	in	r28, 0x3f	; 63
    14e0:	f8 94       	cli
    14e2:	83 e0       	ldi	r24, 0x03	; 3
    14e4:	80 93 06 05 	sts	0x0506, r24
    14e8:	73 df       	rcall	.-282    	; 0x13d0 <_ZL12enter_kernelv>
    14ea:	cf bf       	out	0x3f, r28	; 63
    14ec:	cf 91       	pop	r28
    14ee:	08 95       	ret

000014f0 <__vector_17>:
    14f0:	ff 93       	push	r31
    14f2:	ff b7       	in	r31, 0x3f	; 63
    14f4:	f8 94       	cli
    14f6:	f0 68       	ori	r31, 0x80	; 128
    14f8:	ff 93       	push	r31
    14fa:	fc b7       	in	r31, 0x3c	; 60
    14fc:	ff 93       	push	r31
    14fe:	ef 93       	push	r30
    1500:	df 93       	push	r29
    1502:	cf 93       	push	r28
    1504:	bf 93       	push	r27
    1506:	af 93       	push	r26
    1508:	9f 93       	push	r25
    150a:	8f 93       	push	r24
    150c:	7f 93       	push	r23
    150e:	6f 93       	push	r22
    1510:	5f 93       	push	r21
    1512:	4f 93       	push	r20
    1514:	3f 93       	push	r19
    1516:	2f 93       	push	r18
    1518:	1f 93       	push	r17
    151a:	0f 93       	push	r16
    151c:	ff 92       	push	r15
    151e:	ef 92       	push	r14
    1520:	df 92       	push	r13
    1522:	cf 92       	push	r12
    1524:	bf 92       	push	r11
    1526:	af 92       	push	r10
    1528:	9f 92       	push	r9
    152a:	8f 92       	push	r8
    152c:	7f 92       	push	r7
    152e:	6f 92       	push	r6
    1530:	5f 92       	push	r5
    1532:	4f 92       	push	r4
    1534:	3f 92       	push	r3
    1536:	2f 92       	push	r2
    1538:	1f 92       	push	r1
    153a:	0f 92       	push	r0
    153c:	e0 91 19 13 	lds	r30, 0x1319
    1540:	f0 91 1a 13 	lds	r31, 0x131A
    1544:	8d b7       	in	r24, 0x3d	; 61
    1546:	9e b7       	in	r25, 0x3e	; 62
    1548:	f3 95       	inc	r31
    154a:	91 83       	std	Z+1, r25	; 0x01
    154c:	80 83       	st	Z, r24
    154e:	80 91 17 13 	lds	r24, 0x1317
    1552:	90 91 18 13 	lds	r25, 0x1318
    1556:	9e bf       	out	0x3e, r25	; 62
    1558:	8d bf       	out	0x3d, r24	; 61
    155a:	81 e0       	ldi	r24, 0x01	; 1
    155c:	80 93 06 05 	sts	0x0506, r24
    1560:	e8 e8       	ldi	r30, 0x88	; 136
    1562:	f0 e0       	ldi	r31, 0x00	; 0
    1564:	80 81       	ld	r24, Z
    1566:	91 81       	ldd	r25, Z+1	; 0x01
    1568:	80 5f       	subi	r24, 0xF0	; 240
    156a:	98 4d       	sbci	r25, 0xD8	; 216
    156c:	91 83       	std	Z+1, r25	; 0x01
    156e:	80 83       	st	Z, r24
    1570:	80 91 17 13 	lds	r24, 0x1317
    1574:	90 91 18 13 	lds	r25, 0x1318
    1578:	9e bf       	out	0x3e, r25	; 62
    157a:	8d bf       	out	0x3d, r24	; 61
    157c:	0f 90       	pop	r0
    157e:	1f 90       	pop	r1
    1580:	2f 90       	pop	r2
    1582:	3f 90       	pop	r3
    1584:	4f 90       	pop	r4
    1586:	5f 90       	pop	r5
    1588:	6f 90       	pop	r6
    158a:	7f 90       	pop	r7
    158c:	8f 90       	pop	r8
    158e:	9f 90       	pop	r9
    1590:	af 90       	pop	r10
    1592:	bf 90       	pop	r11
    1594:	cf 90       	pop	r12
    1596:	df 90       	pop	r13
    1598:	ef 90       	pop	r14
    159a:	ff 90       	pop	r15
    159c:	0f 91       	pop	r16
    159e:	1f 91       	pop	r17
    15a0:	2f 91       	pop	r18
    15a2:	3f 91       	pop	r19
    15a4:	4f 91       	pop	r20
    15a6:	5f 91       	pop	r21
    15a8:	6f 91       	pop	r22
    15aa:	7f 91       	pop	r23
    15ac:	8f 91       	pop	r24
    15ae:	9f 91       	pop	r25
    15b0:	af 91       	pop	r26
    15b2:	bf 91       	pop	r27
    15b4:	cf 91       	pop	r28
    15b6:	df 91       	pop	r29
    15b8:	ef 91       	pop	r30
    15ba:	ff 91       	pop	r31
    15bc:	fc bf       	out	0x3c, r31	; 60
    15be:	ff 91       	pop	r31
    15c0:	ff bf       	out	0x3f, r31	; 63
    15c2:	ff 91       	pop	r31
    15c4:	08 95       	ret

000015c6 <OS_Abort>:
    15c6:	f8 94       	cli
    15c8:	27 9a       	sbi	0x04, 7	; 4
    15ca:	30 91 de 04 	lds	r19, 0x04DE
    15ce:	3f 5f       	subi	r19, 0xFF	; 255
    15d0:	54 e6       	ldi	r21, 0x64	; 100
    15d2:	60 e0       	ldi	r22, 0x00	; 0
    15d4:	2a e0       	ldi	r18, 0x0A	; 10
    15d6:	44 e1       	ldi	r20, 0x14	; 20
    15d8:	2f 9a       	sbi	0x05, 7	; 5
    15da:	85 2f       	mov	r24, r21
    15dc:	7f e7       	ldi	r23, 0x7F	; 127
    15de:	98 e3       	ldi	r25, 0x38	; 56
    15e0:	e1 e0       	ldi	r30, 0x01	; 1
    15e2:	71 50       	subi	r23, 0x01	; 1
    15e4:	90 40       	sbci	r25, 0x00	; 0
    15e6:	e0 40       	sbci	r30, 0x00	; 0
    15e8:	e1 f7       	brne	.-8      	; 0x15e2 <OS_Abort+0x1c>
    15ea:	00 c0       	rjmp	.+0      	; 0x15ec <OS_Abort+0x26>
    15ec:	00 00       	nop
    15ee:	81 50       	subi	r24, 0x01	; 1
    15f0:	a9 f7       	brne	.-22     	; 0x15dc <OS_Abort+0x16>
    15f2:	2f 98       	cbi	0x05, 7	; 5
    15f4:	88 e2       	ldi	r24, 0x28	; 40
    15f6:	ff e7       	ldi	r31, 0x7F	; 127
    15f8:	78 e3       	ldi	r23, 0x38	; 56
    15fa:	91 e0       	ldi	r25, 0x01	; 1
    15fc:	f1 50       	subi	r31, 0x01	; 1
    15fe:	70 40       	sbci	r23, 0x00	; 0
    1600:	90 40       	sbci	r25, 0x00	; 0
    1602:	e1 f7       	brne	.-8      	; 0x15fc <OS_Abort+0x36>
    1604:	00 c0       	rjmp	.+0      	; 0x1606 <OS_Abort+0x40>
    1606:	00 00       	nop
    1608:	81 50       	subi	r24, 0x01	; 1
    160a:	a9 f7       	brne	.-22     	; 0x15f6 <OS_Abort+0x30>
    160c:	33 23       	and	r19, r19
    160e:	59 f1       	breq	.+86     	; 0x1666 <OS_Abort+0xa0>
    1610:	96 2f       	mov	r25, r22
    1612:	2f 9a       	sbi	0x05, 7	; 5
    1614:	82 2f       	mov	r24, r18
    1616:	ef e7       	ldi	r30, 0x7F	; 127
    1618:	f8 e3       	ldi	r31, 0x38	; 56
    161a:	71 e0       	ldi	r23, 0x01	; 1
    161c:	e1 50       	subi	r30, 0x01	; 1
    161e:	f0 40       	sbci	r31, 0x00	; 0
    1620:	70 40       	sbci	r23, 0x00	; 0
    1622:	e1 f7       	brne	.-8      	; 0x161c <OS_Abort+0x56>
    1624:	00 c0       	rjmp	.+0      	; 0x1626 <OS_Abort+0x60>
    1626:	00 00       	nop
    1628:	81 50       	subi	r24, 0x01	; 1
    162a:	a9 f7       	brne	.-22     	; 0x1616 <OS_Abort+0x50>
    162c:	2f 98       	cbi	0x05, 7	; 5
    162e:	82 2f       	mov	r24, r18
    1630:	ef e7       	ldi	r30, 0x7F	; 127
    1632:	f8 e3       	ldi	r31, 0x38	; 56
    1634:	71 e0       	ldi	r23, 0x01	; 1
    1636:	e1 50       	subi	r30, 0x01	; 1
    1638:	f0 40       	sbci	r31, 0x00	; 0
    163a:	70 40       	sbci	r23, 0x00	; 0
    163c:	e1 f7       	brne	.-8      	; 0x1636 <OS_Abort+0x70>
    163e:	00 c0       	rjmp	.+0      	; 0x1640 <OS_Abort+0x7a>
    1640:	00 00       	nop
    1642:	81 50       	subi	r24, 0x01	; 1
    1644:	a9 f7       	brne	.-22     	; 0x1630 <OS_Abort+0x6a>
    1646:	9f 5f       	subi	r25, 0xFF	; 255
    1648:	39 13       	cpse	r19, r25
    164a:	e3 cf       	rjmp	.-58     	; 0x1612 <OS_Abort+0x4c>
    164c:	0c c0       	rjmp	.+24     	; 0x1666 <OS_Abort+0xa0>
    164e:	9f e7       	ldi	r25, 0x7F	; 127
    1650:	e8 e3       	ldi	r30, 0x38	; 56
    1652:	f1 e0       	ldi	r31, 0x01	; 1
    1654:	91 50       	subi	r25, 0x01	; 1
    1656:	e0 40       	sbci	r30, 0x00	; 0
    1658:	f0 40       	sbci	r31, 0x00	; 0
    165a:	e1 f7       	brne	.-8      	; 0x1654 <OS_Abort+0x8e>
    165c:	00 c0       	rjmp	.+0      	; 0x165e <OS_Abort+0x98>
    165e:	00 00       	nop
    1660:	81 50       	subi	r24, 0x01	; 1
    1662:	a9 f7       	brne	.-22     	; 0x164e <OS_Abort+0x88>
    1664:	b9 cf       	rjmp	.-142    	; 0x15d8 <OS_Abort+0x12>
    1666:	84 2f       	mov	r24, r20
    1668:	f2 cf       	rjmp	.-28     	; 0x164e <OS_Abort+0x88>

0000166a <_ZL18kernel_create_taskv>:
    166a:	cf 93       	push	r28
    166c:	df 93       	push	r29
    166e:	60 91 f4 04 	lds	r22, 0x04F4
    1672:	70 91 f5 04 	lds	r23, 0x04F5
    1676:	61 15       	cp	r22, r1
    1678:	71 05       	cpc	r23, r1
    167a:	09 f4       	brne	.+2      	; 0x167e <_ZL18kernel_create_taskv+0x14>
    167c:	8a c0       	rjmp	.+276    	; 0x1792 <_ZL18kernel_create_taskv+0x128>
    167e:	80 91 fe 04 	lds	r24, 0x04FE
    1682:	82 30       	cpi	r24, 0x02	; 2
    1684:	09 f0       	breq	.+2      	; 0x1688 <_ZL18kernel_create_taskv+0x1e>
    1686:	8b c0       	rjmp	.+278    	; 0x179e <_ZL18kernel_create_taskv+0x134>
    1688:	80 91 e3 04 	lds	r24, 0x04E3
    168c:	88 23       	and	r24, r24
    168e:	09 f4       	brne	.+2      	; 0x1692 <_ZL18kernel_create_taskv+0x28>
    1690:	86 c0       	rjmp	.+268    	; 0x179e <_ZL18kernel_create_taskv+0x134>
    1692:	81 e0       	ldi	r24, 0x01	; 1
    1694:	80 93 de 04 	sts	0x04DE, r24
    1698:	96 df       	rcall	.-212    	; 0x15c6 <OS_Abort>
    169a:	fb 01       	movw	r30, r22
    169c:	e2 5f       	subi	r30, 0xF2	; 242
    169e:	fe 4f       	sbci	r31, 0xFE	; 254
    16a0:	80 81       	ld	r24, Z
    16a2:	91 81       	ldd	r25, Z+1	; 0x01
    16a4:	90 93 f5 04 	sts	0x04F5, r25
    16a8:	80 93 f4 04 	sts	0x04F4, r24
    16ac:	11 82       	std	Z+1, r1	; 0x01
    16ae:	10 82       	st	Z, r1
    16b0:	02 c0       	rjmp	.+4      	; 0x16b6 <_ZL18kernel_create_taskv+0x4c>
    16b2:	67 e0       	ldi	r22, 0x07	; 7
    16b4:	72 e1       	ldi	r23, 0x12	; 18
    16b6:	fb 01       	movw	r30, r22
    16b8:	e7 52       	subi	r30, 0x27	; 39
    16ba:	ff 4f       	sbci	r31, 0xFF	; 255
    16bc:	10 82       	st	Z, r1
    16be:	80 e8       	ldi	r24, 0x80	; 128
    16c0:	7f 96       	adiw	r30, 0x1f	; 31
    16c2:	80 83       	st	Z, r24
    16c4:	32 96       	adiw	r30, 0x02	; 2
    16c6:	10 82       	st	Z, r1
    16c8:	ea ef       	ldi	r30, 0xFA	; 250
    16ca:	f4 e0       	ldi	r31, 0x04	; 4
    16cc:	80 81       	ld	r24, Z
    16ce:	91 81       	ldd	r25, Z+1	; 0x01
    16d0:	db 01       	movw	r26, r22
    16d2:	a5 50       	subi	r26, 0x05	; 5
    16d4:	bf 4f       	sbci	r27, 0xFF	; 255
    16d6:	9c 93       	st	X, r25
    16d8:	80 81       	ld	r24, Z
    16da:	91 81       	ldd	r25, Z+1	; 0x01
    16dc:	fb 01       	movw	r30, r22
    16de:	e4 50       	subi	r30, 0x04	; 4
    16e0:	ff 4f       	sbci	r31, 0xFF	; 255
    16e2:	80 83       	st	Z, r24
    16e4:	31 96       	adiw	r30, 0x01	; 1
    16e6:	10 82       	st	Z, r1
    16e8:	8e e6       	ldi	r24, 0x6E	; 110
    16ea:	9a e0       	ldi	r25, 0x0A	; 10
    16ec:	31 96       	adiw	r30, 0x01	; 1
    16ee:	90 83       	st	Z, r25
    16f0:	31 96       	adiw	r30, 0x01	; 1
    16f2:	80 83       	st	Z, r24
    16f4:	31 96       	adiw	r30, 0x01	; 1
    16f6:	cb 01       	movw	r24, r22
    16f8:	89 52       	subi	r24, 0x29	; 41
    16fa:	9f 4f       	sbci	r25, 0xFF	; 255
    16fc:	91 83       	std	Z+1, r25	; 0x01
    16fe:	80 83       	st	Z, r24
    1700:	82 e0       	ldi	r24, 0x02	; 2
    1702:	32 96       	adiw	r30, 0x02	; 2
    1704:	80 83       	st	Z, r24
    1706:	80 91 fc 04 	lds	r24, 0x04FC
    170a:	90 91 fd 04 	lds	r25, 0x04FD
    170e:	31 96       	adiw	r30, 0x01	; 1
    1710:	91 83       	std	Z+1, r25	; 0x01
    1712:	80 83       	st	Z, r24
    1714:	ee ef       	ldi	r30, 0xFE	; 254
    1716:	f4 e0       	ldi	r31, 0x04	; 4
    1718:	80 81       	ld	r24, Z
    171a:	1a 96       	adiw	r26, 0x0a	; 10
    171c:	8c 93       	st	X, r24
    171e:	80 91 00 05 	lds	r24, 0x0500
    1722:	90 91 01 05 	lds	r25, 0x0501
    1726:	11 96       	adiw	r26, 0x01	; 1
    1728:	11 96       	adiw	r26, 0x01	; 1
    172a:	9c 93       	st	X, r25
    172c:	8e 93       	st	-X, r24
    172e:	80 91 02 05 	lds	r24, 0x0502
    1732:	90 91 03 05 	lds	r25, 0x0503
    1736:	12 96       	adiw	r26, 0x02	; 2
    1738:	8d 93       	st	X+, r24
    173a:	9c 93       	st	X, r25
    173c:	a4 e0       	ldi	r26, 0x04	; 4
    173e:	b5 e0       	ldi	r27, 0x05	; 5
    1740:	8d 91       	ld	r24, X+
    1742:	9c 91       	ld	r25, X
    1744:	11 97       	sbiw	r26, 0x01	; 1
    1746:	eb 01       	movw	r28, r22
    1748:	c6 5f       	subi	r28, 0xF6	; 246
    174a:	de 4f       	sbci	r29, 0xFE	; 254
    174c:	99 83       	std	Y+1, r25	; 0x01
    174e:	88 83       	st	Y, r24
    1750:	8d 91       	ld	r24, X+
    1752:	9c 91       	ld	r25, X
    1754:	db 01       	movw	r26, r22
    1756:	a4 5f       	subi	r26, 0xF4	; 244
    1758:	be 4f       	sbci	r27, 0xFE	; 254
    175a:	8d 93       	st	X+, r24
    175c:	9c 93       	st	X, r25
    175e:	80 81       	ld	r24, Z
    1760:	82 30       	cpi	r24, 0x02	; 2
    1762:	29 f0       	breq	.+10     	; 0x176e <_ZL18kernel_create_taskv+0x104>
    1764:	83 30       	cpi	r24, 0x03	; 3
    1766:	49 f0       	breq	.+18     	; 0x177a <_ZL18kernel_create_taskv+0x110>
    1768:	81 30       	cpi	r24, 0x01	; 1
    176a:	b1 f4       	brne	.+44     	; 0x1798 <_ZL18kernel_create_taskv+0x12e>
    176c:	0c c0       	rjmp	.+24     	; 0x1786 <_ZL18kernel_create_taskv+0x11c>
    176e:	88 ee       	ldi	r24, 0xE8	; 232
    1770:	94 e0       	ldi	r25, 0x04	; 4
    1772:	87 de       	rcall	.-754    	; 0x1482 <_ZL7enqueueP7queue_tP9td_struct>
    1774:	81 e0       	ldi	r24, 0x01	; 1
    1776:	90 e0       	ldi	r25, 0x00	; 0
    1778:	18 c0       	rjmp	.+48     	; 0x17aa <_ZL18kernel_create_taskv+0x140>
    177a:	8c ee       	ldi	r24, 0xEC	; 236
    177c:	94 e0       	ldi	r25, 0x04	; 4
    177e:	81 de       	rcall	.-766    	; 0x1482 <_ZL7enqueueP7queue_tP9td_struct>
    1780:	81 e0       	ldi	r24, 0x01	; 1
    1782:	90 e0       	ldi	r25, 0x00	; 0
    1784:	12 c0       	rjmp	.+36     	; 0x17aa <_ZL18kernel_create_taskv+0x140>
    1786:	80 ef       	ldi	r24, 0xF0	; 240
    1788:	94 e0       	ldi	r25, 0x04	; 4
    178a:	7b de       	rcall	.-778    	; 0x1482 <_ZL7enqueueP7queue_tP9td_struct>
    178c:	81 e0       	ldi	r24, 0x01	; 1
    178e:	90 e0       	ldi	r25, 0x00	; 0
    1790:	0c c0       	rjmp	.+24     	; 0x17aa <_ZL18kernel_create_taskv+0x140>
    1792:	80 e0       	ldi	r24, 0x00	; 0
    1794:	90 e0       	ldi	r25, 0x00	; 0
    1796:	09 c0       	rjmp	.+18     	; 0x17aa <_ZL18kernel_create_taskv+0x140>
    1798:	81 e0       	ldi	r24, 0x01	; 1
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	06 c0       	rjmp	.+12     	; 0x17aa <_ZL18kernel_create_taskv+0x140>
    179e:	80 91 fe 04 	lds	r24, 0x04FE
    17a2:	88 23       	and	r24, r24
    17a4:	09 f4       	brne	.+2      	; 0x17a8 <_ZL18kernel_create_taskv+0x13e>
    17a6:	85 cf       	rjmp	.-246    	; 0x16b2 <_ZL18kernel_create_taskv+0x48>
    17a8:	78 cf       	rjmp	.-272    	; 0x169a <_ZL18kernel_create_taskv+0x30>
    17aa:	df 91       	pop	r29
    17ac:	cf 91       	pop	r28
    17ae:	08 95       	ret

000017b0 <_Z7OS_Initv>:
    17b0:	e9 e4       	ldi	r30, 0x49	; 73
    17b2:	f6 e0       	ldi	r31, 0x06	; 6
    17b4:	29 ef       	ldi	r18, 0xF9	; 249
    17b6:	31 e1       	ldi	r19, 0x11	; 17
    17b8:	10 82       	st	Z, r1
    17ba:	cf 01       	movw	r24, r30
    17bc:	0e 96       	adiw	r24, 0x0e	; 14
    17be:	95 87       	std	Z+13, r25	; 0x0d
    17c0:	84 87       	std	Z+12, r24	; 0x0c
    17c2:	e0 5f       	subi	r30, 0xF0	; 240
    17c4:	fe 4f       	sbci	r31, 0xFE	; 254
    17c6:	e2 17       	cp	r30, r18
    17c8:	f3 07       	cpc	r31, r19
    17ca:	b1 f7       	brne	.-20     	; 0x17b8 <_Z7OS_Initv+0x8>
    17cc:	10 92 06 12 	sts	0x1206, r1
    17d0:	10 92 05 12 	sts	0x1205, r1
    17d4:	87 e4       	ldi	r24, 0x47	; 71
    17d6:	95 e0       	ldi	r25, 0x05	; 5
    17d8:	90 93 f5 04 	sts	0x04F5, r25
    17dc:	80 93 f4 04 	sts	0x04F4, r24
    17e0:	87 ef       	ldi	r24, 0xF7	; 247
    17e2:	90 e1       	ldi	r25, 0x10	; 16
    17e4:	90 93 f7 04 	sts	0x04F7, r25
    17e8:	80 93 f6 04 	sts	0x04F6, r24
    17ec:	eb e0       	ldi	r30, 0x0B	; 11
    17ee:	f5 e0       	ldi	r31, 0x05	; 5
    17f0:	87 e4       	ldi	r24, 0x47	; 71
    17f2:	95 e0       	ldi	r25, 0x05	; 5
    17f4:	11 82       	std	Z+1, r1	; 0x01
    17f6:	10 82       	st	Z, r1
    17f8:	34 96       	adiw	r30, 0x04	; 4
    17fa:	e8 17       	cp	r30, r24
    17fc:	f9 07       	cpc	r31, r25
    17fe:	d1 f7       	brne	.-12     	; 0x17f4 <_Z7OS_Initv+0x44>
    1800:	0f 2e       	mov	r0, r31
    1802:	fa ef       	ldi	r31, 0xFA	; 250
    1804:	ef 2e       	mov	r14, r31
    1806:	f4 e0       	ldi	r31, 0x04	; 4
    1808:	ff 2e       	mov	r15, r31
    180a:	f0 2d       	mov	r31, r0
    180c:	8e e8       	ldi	r24, 0x8E	; 142
    180e:	99 e0       	ldi	r25, 0x09	; 9
    1810:	d7 01       	movw	r26, r14
    1812:	11 96       	adiw	r26, 0x01	; 1
    1814:	9c 93       	st	X, r25
    1816:	8e 93       	st	-X, r24
    1818:	0e ef       	ldi	r16, 0xFE	; 254
    181a:	14 e0       	ldi	r17, 0x04	; 4
    181c:	f8 01       	movw	r30, r16
    181e:	10 82       	st	Z, r1
    1820:	cc ef       	ldi	r28, 0xFC	; 252
    1822:	d4 e0       	ldi	r29, 0x04	; 4
    1824:	19 82       	std	Y+1, r1	; 0x01
    1826:	18 82       	st	Y, r1
    1828:	20 df       	rcall	.-448    	; 0x166a <_ZL18kernel_create_taskv>
    182a:	85 e9       	ldi	r24, 0x95	; 149
    182c:	9e e0       	ldi	r25, 0x0E	; 14
    182e:	d7 01       	movw	r26, r14
    1830:	11 96       	adiw	r26, 0x01	; 1
    1832:	9c 93       	st	X, r25
    1834:	8e 93       	st	-X, r24
    1836:	83 e0       	ldi	r24, 0x03	; 3
    1838:	f8 01       	movw	r30, r16
    183a:	80 83       	st	Z, r24
    183c:	81 e0       	ldi	r24, 0x01	; 1
    183e:	90 e0       	ldi	r25, 0x00	; 0
    1840:	99 83       	std	Y+1, r25	; 0x01
    1842:	88 83       	st	Y, r24
    1844:	12 df       	rcall	.-476    	; 0x166a <_ZL18kernel_create_taskv>
    1846:	80 91 ec 04 	lds	r24, 0x04EC
    184a:	90 91 ed 04 	lds	r25, 0x04ED
    184e:	00 97       	sbiw	r24, 0x00	; 0
    1850:	59 f0       	breq	.+22     	; 0x1868 <_Z7OS_Initv+0xb8>
    1852:	fc 01       	movw	r30, r24
    1854:	e2 5f       	subi	r30, 0xF2	; 242
    1856:	fe 4f       	sbci	r31, 0xFE	; 254
    1858:	20 81       	ld	r18, Z
    185a:	31 81       	ldd	r19, Z+1	; 0x01
    185c:	30 93 ed 04 	sts	0x04ED, r19
    1860:	20 93 ec 04 	sts	0x04EC, r18
    1864:	11 82       	std	Z+1, r1	; 0x01
    1866:	10 82       	st	Z, r1
    1868:	90 93 1a 13 	sts	0x131A, r25
    186c:	80 93 19 13 	sts	0x1319, r24
    1870:	fc 01       	movw	r30, r24
    1872:	ee 5f       	subi	r30, 0xFE	; 254
    1874:	fe 4f       	sbci	r31, 0xFE	; 254
    1876:	21 e0       	ldi	r18, 0x01	; 1
    1878:	20 83       	st	Z, r18
    187a:	27 9a       	sbi	0x04, 7	; 4
    187c:	ef e6       	ldi	r30, 0x6F	; 111
    187e:	f0 e0       	ldi	r31, 0x00	; 0
    1880:	10 82       	st	Z, r1
    1882:	10 92 80 00 	sts	0x0080, r1
    1886:	a1 e8       	ldi	r26, 0x81	; 129
    1888:	b0 e0       	ldi	r27, 0x00	; 0
    188a:	1c 92       	st	X, r1
    188c:	8c 91       	ld	r24, X
    188e:	82 60       	ori	r24, 0x02	; 2
    1890:	8c 93       	st	X, r24
    1892:	80 91 84 00 	lds	r24, 0x0084
    1896:	90 91 85 00 	lds	r25, 0x0085
    189a:	80 5f       	subi	r24, 0xF0	; 240
    189c:	98 4d       	sbci	r25, 0xD8	; 216
    189e:	90 93 89 00 	sts	0x0089, r25
    18a2:	80 93 88 00 	sts	0x0088, r24
    18a6:	82 e0       	ldi	r24, 0x02	; 2
    18a8:	86 bb       	out	0x16, r24	; 22
    18aa:	80 81       	ld	r24, Z
    18ac:	82 60       	ori	r24, 0x02	; 2
    18ae:	80 83       	st	Z, r24
    18b0:	0f 2e       	mov	r0, r31
    18b2:	fc ee       	ldi	r31, 0xEC	; 236
    18b4:	af 2e       	mov	r10, r31
    18b6:	f4 e0       	ldi	r31, 0x04	; 4
    18b8:	bf 2e       	mov	r11, r31
    18ba:	f0 2d       	mov	r31, r0
    18bc:	11 e0       	ldi	r17, 0x01	; 1
    18be:	0f 2e       	mov	r0, r31
    18c0:	f0 ef       	ldi	r31, 0xF0	; 240
    18c2:	2f 2e       	mov	r2, r31
    18c4:	f4 e0       	ldi	r31, 0x04	; 4
    18c6:	3f 2e       	mov	r3, r31
    18c8:	f0 2d       	mov	r31, r0
    18ca:	0f 2e       	mov	r0, r31
    18cc:	f3 e0       	ldi	r31, 0x03	; 3
    18ce:	df 2e       	mov	r13, r31
    18d0:	f0 2d       	mov	r31, r0
    18d2:	e1 2e       	mov	r14, r17
    18d4:	0f 2e       	mov	r0, r31
    18d6:	f8 ee       	ldi	r31, 0xE8	; 232
    18d8:	8f 2e       	mov	r8, r31
    18da:	f4 e0       	ldi	r31, 0x04	; 4
    18dc:	9f 2e       	mov	r9, r31
    18de:	f0 2d       	mov	r31, r0
    18e0:	f1 2c       	mov	r15, r1
    18e2:	00 e0       	ldi	r16, 0x00	; 0
    18e4:	0f 2e       	mov	r0, r31
    18e6:	fe ef       	ldi	r31, 0xFE	; 254
    18e8:	6f 2e       	mov	r6, r31
    18ea:	f4 e0       	ldi	r31, 0x04	; 4
    18ec:	7f 2e       	mov	r7, r31
    18ee:	f0 2d       	mov	r31, r0
    18f0:	cc 24       	eor	r12, r12
    18f2:	ca 94       	dec	r12
    18f4:	5f 2c       	mov	r5, r15
    18f6:	40 2e       	mov	r4, r16
    18f8:	80 91 19 13 	lds	r24, 0x1319
    18fc:	90 91 1a 13 	lds	r25, 0x131A
    1900:	fc 01       	movw	r30, r24
    1902:	ee 5f       	subi	r30, 0xFE	; 254
    1904:	fe 4f       	sbci	r31, 0xFE	; 254
    1906:	20 81       	ld	r18, Z
    1908:	21 30       	cpi	r18, 0x01	; 1
    190a:	09 f0       	breq	.+2      	; 0x190e <_Z7OS_Initv+0x15e>
    190c:	ed c1       	rjmp	.+986    	; 0x1ce8 <_Z7OS_Initv+0x538>
    190e:	87 50       	subi	r24, 0x07	; 7
    1910:	92 41       	sbci	r25, 0x12	; 18
    1912:	09 f0       	breq	.+2      	; 0x1916 <_Z7OS_Initv+0x166>
    1914:	40 c0       	rjmp	.+128    	; 0x1996 <_Z7OS_Initv+0x1e6>
    1916:	d5 01       	movw	r26, r10
    1918:	8d 91       	ld	r24, X+
    191a:	9c 91       	ld	r25, X
    191c:	00 97       	sbiw	r24, 0x00	; 0
    191e:	79 f0       	breq	.+30     	; 0x193e <_Z7OS_Initv+0x18e>
    1920:	fc 01       	movw	r30, r24
    1922:	e2 5f       	subi	r30, 0xF2	; 242
    1924:	fe 4f       	sbci	r31, 0xFE	; 254
    1926:	20 81       	ld	r18, Z
    1928:	31 81       	ldd	r19, Z+1	; 0x01
    192a:	d5 01       	movw	r26, r10
    192c:	2d 93       	st	X+, r18
    192e:	3c 93       	st	X, r19
    1930:	11 82       	std	Z+1, r1	; 0x01
    1932:	10 82       	st	Z, r1
    1934:	90 93 1a 13 	sts	0x131A, r25
    1938:	80 93 19 13 	sts	0x1319, r24
    193c:	25 c0       	rjmp	.+74     	; 0x1988 <_Z7OS_Initv+0x1d8>
    193e:	80 91 e6 04 	lds	r24, 0x04E6
    1942:	90 91 e7 04 	lds	r25, 0x04E7
    1946:	00 97       	sbiw	r24, 0x00	; 0
    1948:	29 f0       	breq	.+10     	; 0x1954 <_Z7OS_Initv+0x1a4>
    194a:	90 93 1a 13 	sts	0x131A, r25
    194e:	80 93 19 13 	sts	0x1319, r24
    1952:	1a c0       	rjmp	.+52     	; 0x1988 <_Z7OS_Initv+0x1d8>
    1954:	f1 01       	movw	r30, r2
    1956:	80 81       	ld	r24, Z
    1958:	91 81       	ldd	r25, Z+1	; 0x01
    195a:	00 97       	sbiw	r24, 0x00	; 0
    195c:	79 f0       	breq	.+30     	; 0x197c <_Z7OS_Initv+0x1cc>
    195e:	fc 01       	movw	r30, r24
    1960:	e2 5f       	subi	r30, 0xF2	; 242
    1962:	fe 4f       	sbci	r31, 0xFE	; 254
    1964:	20 81       	ld	r18, Z
    1966:	31 81       	ldd	r19, Z+1	; 0x01
    1968:	d1 01       	movw	r26, r2
    196a:	2d 93       	st	X+, r18
    196c:	3c 93       	st	X, r19
    196e:	11 82       	std	Z+1, r1	; 0x01
    1970:	10 82       	st	Z, r1
    1972:	90 93 1a 13 	sts	0x131A, r25
    1976:	80 93 19 13 	sts	0x1319, r24
    197a:	06 c0       	rjmp	.+12     	; 0x1988 <_Z7OS_Initv+0x1d8>
    197c:	e7 e0       	ldi	r30, 0x07	; 7
    197e:	f2 e1       	ldi	r31, 0x12	; 18
    1980:	f0 93 1a 13 	sts	0x131A, r31
    1984:	e0 93 19 13 	sts	0x1319, r30
    1988:	e0 91 19 13 	lds	r30, 0x1319
    198c:	f0 91 1a 13 	lds	r31, 0x131A
    1990:	ee 5f       	subi	r30, 0xFE	; 254
    1992:	fe 4f       	sbci	r31, 0xFE	; 254
    1994:	10 83       	st	Z, r17
    1996:	c3 dc       	rcall	.-1658   	; 0x131e <_ZL11exit_kernelv>
    1998:	80 91 06 05 	lds	r24, 0x0506
    199c:	90 e0       	ldi	r25, 0x00	; 0
    199e:	8a 30       	cpi	r24, 0x0A	; 10
    19a0:	91 05       	cpc	r25, r1
    19a2:	08 f0       	brcs	.+2      	; 0x19a6 <_Z7OS_Initv+0x1f6>
    19a4:	9a c1       	rjmp	.+820    	; 0x1cda <_Z7OS_Initv+0x52a>
    19a6:	fc 01       	movw	r30, r24
    19a8:	ed 57       	subi	r30, 0x7D	; 125
    19aa:	ff 4f       	sbci	r31, 0xFF	; 255
    19ac:	08 c2       	rjmp	.+1040   	; 0x1dbe <__tablejump2__>
    19ae:	c0 91 19 13 	lds	r28, 0x1319
    19b2:	d0 91 1a 13 	lds	r29, 0x131A
    19b6:	fe 01       	movw	r30, r28
    19b8:	eb 5f       	subi	r30, 0xFB	; 251
    19ba:	fe 4f       	sbci	r31, 0xFE	; 254
    19bc:	80 81       	ld	r24, Z
    19be:	81 30       	cpi	r24, 0x01	; 1
    19c0:	11 f4       	brne	.+4      	; 0x19c6 <_Z7OS_Initv+0x216>
    19c2:	ce 01       	movw	r24, r28
    19c4:	76 dd       	rcall	.-1300   	; 0x14b2 <_ZL19kernel_enqueue_taskP9td_struct>
    19c6:	80 91 e4 04 	lds	r24, 0x04E4
    19ca:	90 91 e5 04 	lds	r25, 0x04E5
    19ce:	01 96       	adiw	r24, 0x01	; 1
    19d0:	90 93 e5 04 	sts	0x04E5, r25
    19d4:	80 93 e4 04 	sts	0x04E4, r24
    19d8:	80 91 e6 04 	lds	r24, 0x04E6
    19dc:	90 91 e7 04 	lds	r25, 0x04E7
    19e0:	00 97       	sbiw	r24, 0x00	; 0
    19e2:	c1 f0       	breq	.+48     	; 0x1a14 <_Z7OS_Initv+0x264>
    19e4:	c8 17       	cp	r28, r24
    19e6:	d9 07       	cpc	r29, r25
    19e8:	a9 f4       	brne	.+42     	; 0x1a14 <_Z7OS_Initv+0x264>
    19ea:	20 91 df 04 	lds	r18, 0x04DF
    19ee:	30 91 e0 04 	lds	r19, 0x04E0
    19f2:	2f 5f       	subi	r18, 0xFF	; 255
    19f4:	3f 4f       	sbci	r19, 0xFF	; 255
    19f6:	30 93 e0 04 	sts	0x04E0, r19
    19fa:	20 93 df 04 	sts	0x04DF, r18
    19fe:	c8 5f       	subi	r28, 0xF8	; 248
    1a00:	de 4f       	sbci	r29, 0xFE	; 254
    1a02:	48 81       	ld	r20, Y
    1a04:	59 81       	ldd	r21, Y+1	; 0x01
    1a06:	24 17       	cp	r18, r20
    1a08:	35 07       	cpc	r19, r21
    1a0a:	20 f0       	brcs	.+8      	; 0x1a14 <_Z7OS_Initv+0x264>
    1a0c:	82 e0       	ldi	r24, 0x02	; 2
    1a0e:	80 93 de 04 	sts	0x04DE, r24
    1a12:	d9 dd       	rcall	.-1102   	; 0x15c6 <OS_Abort>
    1a14:	20 91 e3 04 	lds	r18, 0x04E3
    1a18:	22 23       	and	r18, r18
    1a1a:	09 f4       	brne	.+2      	; 0x1a1e <_Z7OS_Initv+0x26e>
    1a1c:	62 c1       	rjmp	.+708    	; 0x1ce2 <_Z7OS_Initv+0x532>
    1a1e:	40 91 e4 04 	lds	r20, 0x04E4
    1a22:	50 91 e5 04 	lds	r21, 0x04E5
    1a26:	20 91 e1 04 	lds	r18, 0x04E1
    1a2a:	30 91 e2 04 	lds	r19, 0x04E2
    1a2e:	42 17       	cp	r20, r18
    1a30:	53 07       	cpc	r21, r19
    1a32:	09 f0       	breq	.+2      	; 0x1a36 <_Z7OS_Initv+0x286>
    1a34:	56 c1       	rjmp	.+684    	; 0x1ce2 <_Z7OS_Initv+0x532>
    1a36:	5f c1       	rjmp	.+702    	; 0x1cf6 <_Z7OS_Initv+0x546>
    1a38:	82 e0       	ldi	r24, 0x02	; 2
    1a3a:	80 93 de 04 	sts	0x04DE, r24
    1a3e:	c3 dd       	rcall	.-1146   	; 0x15c6 <OS_Abort>
    1a40:	f4 01       	movw	r30, r8
    1a42:	a0 81       	ld	r26, Z
    1a44:	b1 81       	ldd	r27, Z+1	; 0x01
    1a46:	10 97       	sbiw	r26, 0x00	; 0
    1a48:	09 f4       	brne	.+2      	; 0x1a4c <_Z7OS_Initv+0x29c>
    1a4a:	40 c0       	rjmp	.+128    	; 0x1acc <_Z7OS_Initv+0x31c>
    1a4c:	c0 91 df 04 	lds	r28, 0x04DF
    1a50:	d0 91 e0 04 	lds	r29, 0x04E0
    1a54:	cd 01       	movw	r24, r26
    1a56:	6f ef       	ldi	r22, 0xFF	; 255
    1a58:	7c 2d       	mov	r23, r12
    1a5a:	af 2d       	mov	r26, r15
    1a5c:	b0 2f       	mov	r27, r16
    1a5e:	10 97       	sbiw	r26, 0x00	; 0
    1a60:	69 f4       	brne	.+26     	; 0x1a7c <_Z7OS_Initv+0x2cc>
    1a62:	fc 01       	movw	r30, r24
    1a64:	e4 5f       	subi	r30, 0xF4	; 244
    1a66:	fe 4f       	sbci	r31, 0xFE	; 254
    1a68:	20 81       	ld	r18, Z
    1a6a:	31 81       	ldd	r19, Z+1	; 0x01
    1a6c:	40 91 e4 04 	lds	r20, 0x04E4
    1a70:	50 91 e5 04 	lds	r21, 0x04E5
    1a74:	24 17       	cp	r18, r20
    1a76:	35 07       	cpc	r19, r21
    1a78:	09 f4       	brne	.+2      	; 0x1a7c <_Z7OS_Initv+0x2cc>
    1a7a:	41 c1       	rjmp	.+642    	; 0x1cfe <_Z7OS_Initv+0x54e>
    1a7c:	40 91 e4 04 	lds	r20, 0x04E4
    1a80:	50 91 e5 04 	lds	r21, 0x04E5
    1a84:	fc 01       	movw	r30, r24
    1a86:	e4 5f       	subi	r30, 0xF4	; 244
    1a88:	fe 4f       	sbci	r31, 0xFE	; 254
    1a8a:	20 81       	ld	r18, Z
    1a8c:	31 81       	ldd	r19, Z+1	; 0x01
    1a8e:	24 1b       	sub	r18, r20
    1a90:	35 0b       	sbc	r19, r21
    1a92:	26 17       	cp	r18, r22
    1a94:	37 07       	cpc	r19, r23
    1a96:	08 f4       	brcc	.+2      	; 0x1a9a <_Z7OS_Initv+0x2ea>
    1a98:	b9 01       	movw	r22, r18
    1a9a:	fc 01       	movw	r30, r24
    1a9c:	e2 5f       	subi	r30, 0xF2	; 242
    1a9e:	fe 4f       	sbci	r31, 0xFE	; 254
    1aa0:	80 81       	ld	r24, Z
    1aa2:	91 81       	ldd	r25, Z+1	; 0x01
    1aa4:	00 97       	sbiw	r24, 0x00	; 0
    1aa6:	d9 f6       	brne	.-74     	; 0x1a5e <_Z7OS_Initv+0x2ae>
    1aa8:	c0 93 df 04 	sts	0x04DF, r28
    1aac:	d0 93 e0 04 	sts	0x04E0, r29
    1ab0:	10 97       	sbiw	r26, 0x00	; 0
    1ab2:	71 f0       	breq	.+28     	; 0x1ad0 <_Z7OS_Initv+0x320>
    1ab4:	fd 01       	movw	r30, r26
    1ab6:	e8 5f       	subi	r30, 0xF8	; 248
    1ab8:	fe 4f       	sbci	r31, 0xFE	; 254
    1aba:	20 81       	ld	r18, Z
    1abc:	31 81       	ldd	r19, Z+1	; 0x01
    1abe:	62 17       	cp	r22, r18
    1ac0:	73 07       	cpc	r23, r19
    1ac2:	30 f4       	brcc	.+12     	; 0x1ad0 <_Z7OS_Initv+0x320>
    1ac4:	82 e0       	ldi	r24, 0x02	; 2
    1ac6:	80 93 de 04 	sts	0x04DE, r24
    1aca:	7d dd       	rcall	.-1286   	; 0x15c6 <OS_Abort>
    1acc:	6f ef       	ldi	r22, 0xFF	; 255
    1ace:	7c 2d       	mov	r23, r12
    1ad0:	b0 93 e7 04 	sts	0x04E7, r27
    1ad4:	a0 93 e6 04 	sts	0x04E6, r26
    1ad8:	80 91 e4 04 	lds	r24, 0x04E4
    1adc:	90 91 e5 04 	lds	r25, 0x04E5
    1ae0:	68 0f       	add	r22, r24
    1ae2:	79 1f       	adc	r23, r25
    1ae4:	70 93 e2 04 	sts	0x04E2, r23
    1ae8:	60 93 e1 04 	sts	0x04E1, r22
    1aec:	fa c0       	rjmp	.+500    	; 0x1ce2 <_Z7OS_Initv+0x532>
    1aee:	bd dd       	rcall	.-1158   	; 0x166a <_ZL18kernel_create_taskv>
    1af0:	90 93 f9 04 	sts	0x04F9, r25
    1af4:	80 93 f8 04 	sts	0x04F8, r24
    1af8:	80 91 f8 04 	lds	r24, 0x04F8
    1afc:	90 91 f9 04 	lds	r25, 0x04F9
    1b00:	89 2b       	or	r24, r25
    1b02:	09 f4       	brne	.+2      	; 0x1b06 <_Z7OS_Initv+0x356>
    1b04:	ee c0       	rjmp	.+476    	; 0x1ce2 <_Z7OS_Initv+0x532>
    1b06:	d3 01       	movw	r26, r6
    1b08:	3c 91       	ld	r19, X
    1b0a:	80 91 19 13 	lds	r24, 0x1319
    1b0e:	90 91 1a 13 	lds	r25, 0x131A
    1b12:	fc 01       	movw	r30, r24
    1b14:	eb 5f       	subi	r30, 0xFB	; 251
    1b16:	fe 4f       	sbci	r31, 0xFE	; 254
    1b18:	20 81       	ld	r18, Z
    1b1a:	23 17       	cp	r18, r19
    1b1c:	08 f4       	brcc	.+2      	; 0x1b20 <_Z7OS_Initv+0x370>
    1b1e:	ff c0       	rjmp	.+510    	; 0x1d1e <_Z7OS_Initv+0x56e>
    1b20:	e0 c0       	rjmp	.+448    	; 0x1ce2 <_Z7OS_Initv+0x532>
    1b22:	60 91 19 13 	lds	r22, 0x1319
    1b26:	70 91 1a 13 	lds	r23, 0x131A
    1b2a:	b2 e1       	ldi	r27, 0x12	; 18
    1b2c:	67 30       	cpi	r22, 0x07	; 7
    1b2e:	7b 07       	cpc	r23, r27
    1b30:	09 f4       	brne	.+2      	; 0x1b34 <_Z7OS_Initv+0x384>
    1b32:	d7 c0       	rjmp	.+430    	; 0x1ce2 <_Z7OS_Initv+0x532>
    1b34:	fb 01       	movw	r30, r22
    1b36:	ee 5f       	subi	r30, 0xFE	; 254
    1b38:	fe 4f       	sbci	r31, 0xFE	; 254
    1b3a:	10 82       	st	Z, r1
    1b3c:	33 96       	adiw	r30, 0x03	; 3
    1b3e:	80 81       	ld	r24, Z
    1b40:	82 30       	cpi	r24, 0x02	; 2
    1b42:	d1 f5       	brne	.+116    	; 0x1bb8 <_Z7OS_Initv+0x408>
    1b44:	f4 01       	movw	r30, r8
    1b46:	80 81       	ld	r24, Z
    1b48:	91 81       	ldd	r25, Z+1	; 0x01
    1b4a:	00 97       	sbiw	r24, 0x00	; 0
    1b4c:	89 f1       	breq	.+98     	; 0x1bb0 <_Z7OS_Initv+0x400>
    1b4e:	68 17       	cp	r22, r24
    1b50:	79 07       	cpc	r23, r25
    1b52:	21 f5       	brne	.+72     	; 0x1b9c <_Z7OS_Initv+0x3ec>
    1b54:	fb 01       	movw	r30, r22
    1b56:	e2 5f       	subi	r30, 0xF2	; 242
    1b58:	fe 4f       	sbci	r31, 0xFE	; 254
    1b5a:	80 81       	ld	r24, Z
    1b5c:	91 81       	ldd	r25, Z+1	; 0x01
    1b5e:	d4 01       	movw	r26, r8
    1b60:	8d 93       	st	X+, r24
    1b62:	9c 93       	st	X, r25
    1b64:	11 82       	std	Z+1, r1	; 0x01
    1b66:	10 82       	st	Z, r1
    1b68:	23 c0       	rjmp	.+70     	; 0x1bb0 <_Z7OS_Initv+0x400>
    1b6a:	fc 01       	movw	r30, r24
    1b6c:	e2 5f       	subi	r30, 0xF2	; 242
    1b6e:	fe 4f       	sbci	r31, 0xFE	; 254
    1b70:	20 81       	ld	r18, Z
    1b72:	31 81       	ldd	r19, Z+1	; 0x01
    1b74:	62 17       	cp	r22, r18
    1b76:	73 07       	cpc	r23, r19
    1b78:	21 f0       	breq	.+8      	; 0x1b82 <_Z7OS_Initv+0x3d2>
    1b7a:	c9 01       	movw	r24, r18
    1b7c:	00 97       	sbiw	r24, 0x00	; 0
    1b7e:	a9 f7       	brne	.-22     	; 0x1b6a <_Z7OS_Initv+0x3ba>
    1b80:	17 c0       	rjmp	.+46     	; 0x1bb0 <_Z7OS_Initv+0x400>
    1b82:	fb 01       	movw	r30, r22
    1b84:	e2 5f       	subi	r30, 0xF2	; 242
    1b86:	fe 4f       	sbci	r31, 0xFE	; 254
    1b88:	20 81       	ld	r18, Z
    1b8a:	31 81       	ldd	r19, Z+1	; 0x01
    1b8c:	dc 01       	movw	r26, r24
    1b8e:	a2 5f       	subi	r26, 0xF2	; 242
    1b90:	be 4f       	sbci	r27, 0xFE	; 254
    1b92:	2d 93       	st	X+, r18
    1b94:	3c 93       	st	X, r19
    1b96:	11 82       	std	Z+1, r1	; 0x01
    1b98:	10 82       	st	Z, r1
    1b9a:	0a c0       	rjmp	.+20     	; 0x1bb0 <_Z7OS_Initv+0x400>
    1b9c:	fc 01       	movw	r30, r24
    1b9e:	e2 5f       	subi	r30, 0xF2	; 242
    1ba0:	fe 4f       	sbci	r31, 0xFE	; 254
    1ba2:	20 81       	ld	r18, Z
    1ba4:	31 81       	ldd	r19, Z+1	; 0x01
    1ba6:	62 17       	cp	r22, r18
    1ba8:	73 07       	cpc	r23, r19
    1baa:	59 f3       	breq	.-42     	; 0x1b82 <_Z7OS_Initv+0x3d2>
    1bac:	c9 01       	movw	r24, r18
    1bae:	e6 cf       	rjmp	.-52     	; 0x1b7c <_Z7OS_Initv+0x3cc>
    1bb0:	f0 92 e6 04 	sts	0x04E6, r15
    1bb4:	00 93 e7 04 	sts	0x04E7, r16
    1bb8:	84 ef       	ldi	r24, 0xF4	; 244
    1bba:	94 e0       	ldi	r25, 0x04	; 4
    1bbc:	62 dc       	rcall	.-1852   	; 0x1482 <_ZL7enqueueP7queue_tP9td_struct>
    1bbe:	91 c0       	rjmp	.+290    	; 0x1ce2 <_Z7OS_Initv+0x532>
    1bc0:	c0 91 19 13 	lds	r28, 0x1319
    1bc4:	d0 91 1a 13 	lds	r29, 0x131A
    1bc8:	ce 01       	movw	r24, r28
    1bca:	73 dc       	rcall	.-1818   	; 0x14b2 <_ZL19kernel_enqueue_taskP9td_struct>
    1bcc:	cb 5f       	subi	r28, 0xFB	; 251
    1bce:	de 4f       	sbci	r29, 0xFE	; 254
    1bd0:	88 81       	ld	r24, Y
    1bd2:	82 30       	cpi	r24, 0x02	; 2
    1bd4:	09 f0       	breq	.+2      	; 0x1bd8 <_Z7OS_Initv+0x428>
    1bd6:	85 c0       	rjmp	.+266    	; 0x1ce2 <_Z7OS_Initv+0x532>
    1bd8:	f0 92 e6 04 	sts	0x04E6, r15
    1bdc:	00 93 e7 04 	sts	0x04E7, r16
    1be0:	80 c0       	rjmp	.+256    	; 0x1ce2 <_Z7OS_Initv+0x532>
    1be2:	80 91 e3 04 	lds	r24, 0x04E3
    1be6:	81 11       	cpse	r24, r1
    1be8:	28 c0       	rjmp	.+80     	; 0x1c3a <_Z7OS_Initv+0x48a>
    1bea:	e0 92 e3 04 	sts	0x04E3, r14
    1bee:	f4 01       	movw	r30, r8
    1bf0:	80 81       	ld	r24, Z
    1bf2:	91 81       	ldd	r25, Z+1	; 0x01
    1bf4:	00 97       	sbiw	r24, 0x00	; 0
    1bf6:	b9 f0       	breq	.+46     	; 0x1c26 <_Z7OS_Initv+0x476>
    1bf8:	40 91 e4 04 	lds	r20, 0x04E4
    1bfc:	50 91 e5 04 	lds	r21, 0x04E5
    1c00:	fc 01       	movw	r30, r24
    1c02:	e4 5f       	subi	r30, 0xF4	; 244
    1c04:	fe 4f       	sbci	r31, 0xFE	; 254
    1c06:	dc 01       	movw	r26, r24
    1c08:	a6 5f       	subi	r26, 0xF6	; 246
    1c0a:	be 4f       	sbci	r27, 0xFE	; 254
    1c0c:	2d 91       	ld	r18, X+
    1c0e:	3c 91       	ld	r19, X
    1c10:	24 0f       	add	r18, r20
    1c12:	35 1f       	adc	r19, r21
    1c14:	2f 5f       	subi	r18, 0xFF	; 255
    1c16:	3f 4f       	sbci	r19, 0xFF	; 255
    1c18:	31 83       	std	Z+1, r19	; 0x01
    1c1a:	20 83       	st	Z, r18
    1c1c:	32 96       	adiw	r30, 0x02	; 2
    1c1e:	80 81       	ld	r24, Z
    1c20:	91 81       	ldd	r25, Z+1	; 0x01
    1c22:	00 97       	sbiw	r24, 0x00	; 0
    1c24:	49 f7       	brne	.-46     	; 0x1bf8 <_Z7OS_Initv+0x448>
    1c26:	80 91 e4 04 	lds	r24, 0x04E4
    1c2a:	90 91 e5 04 	lds	r25, 0x04E5
    1c2e:	01 96       	adiw	r24, 0x01	; 1
    1c30:	90 93 e2 04 	sts	0x04E2, r25
    1c34:	80 93 e1 04 	sts	0x04E1, r24
    1c38:	54 c0       	rjmp	.+168    	; 0x1ce2 <_Z7OS_Initv+0x532>
    1c3a:	81 e0       	ldi	r24, 0x01	; 1
    1c3c:	80 93 de 04 	sts	0x04DE, r24
    1c40:	c2 dc       	rcall	.-1660   	; 0x15c6 <OS_Abort>
    1c42:	80 91 19 13 	lds	r24, 0x1319
    1c46:	90 91 1a 13 	lds	r25, 0x131A
    1c4a:	fc 01       	movw	r30, r24
    1c4c:	eb 5f       	subi	r30, 0xFB	; 251
    1c4e:	fe 4f       	sbci	r31, 0xFE	; 254
    1c50:	20 81       	ld	r18, Z
    1c52:	22 30       	cpi	r18, 0x02	; 2
    1c54:	21 f4       	brne	.+8      	; 0x1c5e <_Z7OS_Initv+0x4ae>
    1c56:	83 e0       	ldi	r24, 0x03	; 3
    1c58:	80 93 de 04 	sts	0x04DE, r24
    1c5c:	b4 dc       	rcall	.-1688   	; 0x15c6 <OS_Abort>
    1c5e:	a0 91 09 05 	lds	r26, 0x0509
    1c62:	b0 91 0a 05 	lds	r27, 0x050A
    1c66:	e0 91 07 05 	lds	r30, 0x0507
    1c6a:	f0 91 08 05 	lds	r31, 0x0508
    1c6e:	b1 83       	std	Z+1, r27	; 0x01
    1c70:	a0 83       	st	Z, r26
    1c72:	2d 91       	ld	r18, X+
    1c74:	3c 91       	ld	r19, X
    1c76:	11 97       	sbiw	r26, 0x01	; 1
    1c78:	33 83       	std	Z+3, r19	; 0x03
    1c7a:	22 83       	std	Z+2, r18	; 0x02
    1c7c:	ed 93       	st	X+, r30
    1c7e:	fc 93       	st	X, r31
    1c80:	95 83       	std	Z+5, r25	; 0x05
    1c82:	84 83       	std	Z+4, r24	; 0x04
    1c84:	16 82       	std	Z+6, r1	; 0x06
    1c86:	17 82       	std	Z+7, r1	; 0x07
    1c88:	2c c0       	rjmp	.+88     	; 0x1ce2 <_Z7OS_Initv+0x532>
    1c8a:	e0 91 09 05 	lds	r30, 0x0509
    1c8e:	f0 91 0a 05 	lds	r31, 0x050A
    1c92:	c0 81       	ld	r28, Z
    1c94:	d1 81       	ldd	r29, Z+1	; 0x01
    1c96:	20 97       	sbiw	r28, 0x00	; 0
    1c98:	69 f0       	breq	.+26     	; 0x1cb4 <_Z7OS_Initv+0x504>
    1c9a:	1f 83       	std	Y+7, r17	; 0x07
    1c9c:	8e 81       	ldd	r24, Y+6	; 0x06
    1c9e:	88 23       	and	r24, r24
    1ca0:	21 f0       	breq	.+8      	; 0x1caa <_Z7OS_Initv+0x4fa>
    1ca2:	8c 81       	ldd	r24, Y+4	; 0x04
    1ca4:	9d 81       	ldd	r25, Y+5	; 0x05
    1ca6:	05 dc       	rcall	.-2038   	; 0x14b2 <_ZL19kernel_enqueue_taskP9td_struct>
    1ca8:	1e 82       	std	Y+6, r1	; 0x06
    1caa:	0a 80       	ldd	r0, Y+2	; 0x02
    1cac:	db 81       	ldd	r29, Y+3	; 0x03
    1cae:	c0 2d       	mov	r28, r0
    1cb0:	20 97       	sbiw	r28, 0x00	; 0
    1cb2:	99 f7       	brne	.-26     	; 0x1c9a <_Z7OS_Initv+0x4ea>
    1cb4:	80 91 19 13 	lds	r24, 0x1319
    1cb8:	90 91 1a 13 	lds	r25, 0x131A
    1cbc:	fa db       	rcall	.-2060   	; 0x14b2 <_ZL19kernel_enqueue_taskP9td_struct>
    1cbe:	11 c0       	rjmp	.+34     	; 0x1ce2 <_Z7OS_Initv+0x532>
    1cc0:	e0 91 07 05 	lds	r30, 0x0507
    1cc4:	f0 91 08 05 	lds	r31, 0x0508
    1cc8:	16 83       	std	Z+6, r17	; 0x06
    1cca:	e0 91 19 13 	lds	r30, 0x1319
    1cce:	f0 91 1a 13 	lds	r31, 0x131A
    1cd2:	ee 5f       	subi	r30, 0xFE	; 254
    1cd4:	fe 4f       	sbci	r31, 0xFE	; 254
    1cd6:	d0 82       	st	Z, r13
    1cd8:	04 c0       	rjmp	.+8      	; 0x1ce2 <_Z7OS_Initv+0x532>
    1cda:	84 e0       	ldi	r24, 0x04	; 4
    1cdc:	80 93 de 04 	sts	0x04DE, r24
    1ce0:	72 dc       	rcall	.-1820   	; 0x15c6 <OS_Abort>
    1ce2:	10 92 06 05 	sts	0x0506, r1
    1ce6:	08 ce       	rjmp	.-1008   	; 0x18f8 <_Z7OS_Initv+0x148>
    1ce8:	d5 01       	movw	r26, r10
    1cea:	8d 91       	ld	r24, X+
    1cec:	9c 91       	ld	r25, X
    1cee:	00 97       	sbiw	r24, 0x00	; 0
    1cf0:	09 f0       	breq	.+2      	; 0x1cf4 <_Z7OS_Initv+0x544>
    1cf2:	16 ce       	rjmp	.-980    	; 0x1920 <_Z7OS_Initv+0x170>
    1cf4:	24 ce       	rjmp	.-952    	; 0x193e <_Z7OS_Initv+0x18e>
    1cf6:	89 2b       	or	r24, r25
    1cf8:	09 f4       	brne	.+2      	; 0x1cfc <_Z7OS_Initv+0x54c>
    1cfa:	a2 ce       	rjmp	.-700    	; 0x1a40 <_Z7OS_Initv+0x290>
    1cfc:	9d ce       	rjmp	.-710    	; 0x1a38 <_Z7OS_Initv+0x288>
    1cfe:	fc 01       	movw	r30, r24
    1d00:	e4 5f       	subi	r30, 0xF4	; 244
    1d02:	fe 4f       	sbci	r31, 0xFE	; 254
    1d04:	dc 01       	movw	r26, r24
    1d06:	aa 5f       	subi	r26, 0xFA	; 250
    1d08:	be 4f       	sbci	r27, 0xFE	; 254
    1d0a:	4d 91       	ld	r20, X+
    1d0c:	5c 91       	ld	r21, X
    1d0e:	24 0f       	add	r18, r20
    1d10:	35 1f       	adc	r19, r21
    1d12:	31 83       	std	Z+1, r19	; 0x01
    1d14:	20 83       	st	Z, r18
    1d16:	dc 01       	movw	r26, r24
    1d18:	c5 2d       	mov	r28, r5
    1d1a:	d4 2d       	mov	r29, r4
    1d1c:	af ce       	rjmp	.-674    	; 0x1a7c <_Z7OS_Initv+0x2cc>
    1d1e:	c9 db       	rcall	.-2158   	; 0x14b2 <_ZL19kernel_enqueue_taskP9td_struct>
    1d20:	e0 cf       	rjmp	.-64     	; 0x1ce2 <_Z7OS_Initv+0x532>

00001d22 <main>:
 */

int main()
{
#ifdef INIT_ARDUINO_LIB
    init();
    1d22:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <init>
#endif
    OS_Init();
    1d26:	44 dd       	rcall	.-1400   	; 0x17b0 <_Z7OS_Initv>

00001d28 <radio_rxhandler>:

    packet.type = game_status_packet_type;
    packet.game_status.it_id = 1;

    Radio_Transmit(&packet, RADIO_WAIT_FOR_TX);
}
    1d28:	08 95       	ret

00001d2a <_Z6r_mainv>:

int r_main()
{

    pinMode(13, OUTPUT);
    1d2a:	61 e0       	ldi	r22, 0x01	; 1
    1d2c:	8d e0       	ldi	r24, 0x0D	; 13
    1d2e:	16 d8       	rcall	.-4052   	; 0xd5c <pinMode>

    Serial.begin(9600);
    1d30:	40 e8       	ldi	r20, 0x80	; 128
    1d32:	55 e2       	ldi	r21, 0x25	; 37
    1d34:	60 e0       	ldi	r22, 0x00	; 0
    1d36:	70 e0       	ldi	r23, 0x00	; 0
    1d38:	8e e8       	ldi	r24, 0x8E	; 142
    1d3a:	92 e0       	ldi	r25, 0x02	; 2
    1d3c:	0e 94 27 04 	call	0x84e	; 0x84e <_ZN14HardwareSerial5beginEm>

    //irobot robot(&Serial1, arduino::pin_baud_rate_change);

    //robot.begin();

    g.init();
    1d40:	8b e1       	ldi	r24, 0x1B	; 27
    1d42:	93 e1       	ldi	r25, 0x13	; 19
    1d44:	81 d8       	rcall	.-3838   	; 0xe48 <_ZN14robot_tag_game3gun4initEv>
        }
        Serial.print("Done.");
    }
*/
    return 0;
}
    1d46:	80 e0       	ldi	r24, 0x00	; 0
    1d48:	90 e0       	ldi	r25, 0x00	; 0
    1d4a:	08 95       	ret

00001d4c <_GLOBAL__sub_I_g>:
#include "gun.hpp"



using namespace robot_tag_game;
gun g;
    1d4c:	8b e1       	ldi	r24, 0x1B	; 27
    1d4e:	93 e1       	ldi	r25, 0x13	; 19
    1d50:	73 c8       	rjmp	.-3866   	; 0xe38 <_ZN14robot_tag_game3gunC1Ev>
    1d52:	08 95       	ret

00001d54 <__divmodhi4>:
    1d54:	97 fb       	bst	r25, 7
    1d56:	07 2e       	mov	r0, r23
    1d58:	16 f4       	brtc	.+4      	; 0x1d5e <__divmodhi4+0xa>
    1d5a:	00 94       	com	r0
    1d5c:	06 d0       	rcall	.+12     	; 0x1d6a <__divmodhi4_neg1>
    1d5e:	77 fd       	sbrc	r23, 7
    1d60:	08 d0       	rcall	.+16     	; 0x1d72 <__divmodhi4_neg2>
    1d62:	37 d0       	rcall	.+110    	; 0x1dd2 <__udivmodhi4>
    1d64:	07 fc       	sbrc	r0, 7
    1d66:	05 d0       	rcall	.+10     	; 0x1d72 <__divmodhi4_neg2>
    1d68:	3e f4       	brtc	.+14     	; 0x1d78 <__divmodhi4_exit>

00001d6a <__divmodhi4_neg1>:
    1d6a:	90 95       	com	r25
    1d6c:	81 95       	neg	r24
    1d6e:	9f 4f       	sbci	r25, 0xFF	; 255
    1d70:	08 95       	ret

00001d72 <__divmodhi4_neg2>:
    1d72:	70 95       	com	r23
    1d74:	61 95       	neg	r22
    1d76:	7f 4f       	sbci	r23, 0xFF	; 255

00001d78 <__divmodhi4_exit>:
    1d78:	08 95       	ret

00001d7a <__udivmodsi4>:
    1d7a:	a1 e2       	ldi	r26, 0x21	; 33
    1d7c:	1a 2e       	mov	r1, r26
    1d7e:	aa 1b       	sub	r26, r26
    1d80:	bb 1b       	sub	r27, r27
    1d82:	fd 01       	movw	r30, r26
    1d84:	0d c0       	rjmp	.+26     	; 0x1da0 <__udivmodsi4_ep>

00001d86 <__udivmodsi4_loop>:
    1d86:	aa 1f       	adc	r26, r26
    1d88:	bb 1f       	adc	r27, r27
    1d8a:	ee 1f       	adc	r30, r30
    1d8c:	ff 1f       	adc	r31, r31
    1d8e:	a2 17       	cp	r26, r18
    1d90:	b3 07       	cpc	r27, r19
    1d92:	e4 07       	cpc	r30, r20
    1d94:	f5 07       	cpc	r31, r21
    1d96:	20 f0       	brcs	.+8      	; 0x1da0 <__udivmodsi4_ep>
    1d98:	a2 1b       	sub	r26, r18
    1d9a:	b3 0b       	sbc	r27, r19
    1d9c:	e4 0b       	sbc	r30, r20
    1d9e:	f5 0b       	sbc	r31, r21

00001da0 <__udivmodsi4_ep>:
    1da0:	66 1f       	adc	r22, r22
    1da2:	77 1f       	adc	r23, r23
    1da4:	88 1f       	adc	r24, r24
    1da6:	99 1f       	adc	r25, r25
    1da8:	1a 94       	dec	r1
    1daa:	69 f7       	brne	.-38     	; 0x1d86 <__udivmodsi4_loop>
    1dac:	60 95       	com	r22
    1dae:	70 95       	com	r23
    1db0:	80 95       	com	r24
    1db2:	90 95       	com	r25
    1db4:	9b 01       	movw	r18, r22
    1db6:	ac 01       	movw	r20, r24
    1db8:	bd 01       	movw	r22, r26
    1dba:	cf 01       	movw	r24, r30
    1dbc:	08 95       	ret

00001dbe <__tablejump2__>:
    1dbe:	ee 0f       	add	r30, r30
    1dc0:	ff 1f       	adc	r31, r31

00001dc2 <__tablejump__>:
    1dc2:	05 90       	lpm	r0, Z+
    1dc4:	f4 91       	lpm	r31, Z
    1dc6:	e0 2d       	mov	r30, r0
    1dc8:	19 94       	eijmp

00001dca <__tablejump_elpm__>:
    1dca:	07 90       	elpm	r0, Z+
    1dcc:	f6 91       	elpm	r31, Z
    1dce:	e0 2d       	mov	r30, r0
    1dd0:	19 94       	eijmp

00001dd2 <__udivmodhi4>:
    1dd2:	aa 1b       	sub	r26, r26
    1dd4:	bb 1b       	sub	r27, r27
    1dd6:	51 e1       	ldi	r21, 0x11	; 17
    1dd8:	07 c0       	rjmp	.+14     	; 0x1de8 <__udivmodhi4_ep>

00001dda <__udivmodhi4_loop>:
    1dda:	aa 1f       	adc	r26, r26
    1ddc:	bb 1f       	adc	r27, r27
    1dde:	a6 17       	cp	r26, r22
    1de0:	b7 07       	cpc	r27, r23
    1de2:	10 f0       	brcs	.+4      	; 0x1de8 <__udivmodhi4_ep>
    1de4:	a6 1b       	sub	r26, r22
    1de6:	b7 0b       	sbc	r27, r23

00001de8 <__udivmodhi4_ep>:
    1de8:	88 1f       	adc	r24, r24
    1dea:	99 1f       	adc	r25, r25
    1dec:	5a 95       	dec	r21
    1dee:	a9 f7       	brne	.-22     	; 0x1dda <__udivmodhi4_loop>
    1df0:	80 95       	com	r24
    1df2:	90 95       	com	r25
    1df4:	bc 01       	movw	r22, r24
    1df6:	cd 01       	movw	r24, r26
    1df8:	08 95       	ret

00001dfa <_exit>:
    1dfa:	f8 94       	cli

00001dfc <__stop_program>:
    1dfc:	ff cf       	rjmp	.-2      	; 0x1dfc <__stop_program>
